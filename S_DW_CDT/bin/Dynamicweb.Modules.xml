<?xml version="1.0"?>
<doc>
<assembly>
<name>
Dynamicweb.Modules
</name>
</assembly>
<members>
<member name="P:Dynamicweb.Modules.WeightedSearch.ResultItem.Url">
	<summary>
 The url to the result, eg., link to product. 
 </summary>
</member><member name="P:Dynamicweb.Modules.WeightedSearch.ResultItem.Title">
	<summary>
 The title of the search result, eg., the product name.
 </summary>
</member><member name="P:Dynamicweb.Modules.WeightedSearch.ResultItem.EditDate">
	<summary>
 The DateTime of the search result, eg., last time the product was edited.
 </summary>
</member><member name="P:Dynamicweb.Modules.WeightedSearch.ResultItem.Weight">
	<summary>
 The weight of the search result.
 </summary>
</member><member name="P:Dynamicweb.Modules.WeightedSearch.ResultItem.Summary">
	<summary>
 The short summary text describing the search result.
 </summary>
</member><member name="P:Dynamicweb.Modules.WeightedSearch.ResultItem.Description">
	<summary>
 The longer search result description.
 </summary>
</member><member name="M:Dynamicweb.Modules.WeightedSearch.Frontend.#ctor">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.WeightedSearch.Frontend.InitializeModule(System.Data.DataRow,Dynamicweb.Frontend.PageView)">
	<summary>
 Initializes the module.
 </summary>
	<param name="paragraphRow">Paragraph row.</param>
	<param name="pageview">Page view.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.WeightedSearch.Frontend.GetContent">
	<summary>
 Retrieves module content.
 </summary>
	<returns>Module content.</returns>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.WeightedSearch.Frontend">
	<summary>
 Represents an entry point of the module frontend.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Sms.SendHandler.Send(Dynamicweb.Modules.Sms.Message)">
	<summary>
 Sends the specified message.
 </summary>
	<param name="message">The message.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.Sms.SendHandler.Send(System.String,System.String)">
	<summary>
 Sends the specified message text.
 </summary>
	<param name="messageText">The message text.</param>
	<param name="phone">The phone to send the message to.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.Sms.SendHandler.Send(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
	<summary>
 Sends the specified message text.
 </summary>
	<param name="messageText">The message text.</param>
	<param name="phone">The phone to send the message to.</param>
	<param name="parameters">The parameters to merge into the message in the format @key = value.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.Sms.SendHandler.CleanPhone(System.String)">
	<summary>
 Cleans the phone number for +, spaces, and ().
 </summary>
	<param name="phoneNumber">The phone number.</param>
	<returns></returns>
</member><member name="P:Dynamicweb.Modules.Sms.Message.SmartSearches">
	<summary>
 Gets List of Tuples(smartSearchID, SmartSearchName)
 </summary>
</member><member name="M:Dynamicweb.Modules.Maps.Maps.Wrap(System.Double,System.Double,System.Double)">
	<summary>
 Wrap a number to fit inside a specified range
 </summary>
	<param name="value">the value</param>
	<param name="min">minimum allowed value (inclusive)</param>
	<param name="max">maximum allowed value (inclusive)</param>
	<returns>the wrapped value</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Maps.Maps.Clamp(System.Double,System.Double,System.Double)">
	<summary>
 Clamp a number to be inside a specified range
 </summary>
	<param name="value">the value</param>
	<param name="min">minimum allowed value (inclusive)</param>
	<param name="max">maximum allowed value (inclusive)</param>
	<returns>the clamped value</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Recommendation.Frontend.ExcludeProducts(Dynamicweb.Modules.Recommendation.RecommendationSettings,Dynamicweb.Recommendation.Recommendations)">
	<summary>
 Exclude products from a specified smart search form recommendations
 </summary>
	<param name="settings"></param>
	<param name="recommendations"></param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Recommendation.Frontend.GetProducts(Dynamicweb.Recommendation.Recommendations)">
	<summary>
 Convert a list of recommendation item into actual Ecommerce products
 </summary>
	<param name="recommendations"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.News.Notifications.Frontend.BeforeLoad">
	<example>
		<code title="Example" description="" lang="CS">[Dynamicweb.Extensibility.Subscribe(Dynamicweb.Notifications.NewsV2.Frontend.BeforeLoad)]
    public class NewsV2BeforeLoadObserver : Dynamicweb.Extensibility.NotificationSubscriber
    {
        public override void OnNotify(string notification, Dynamicweb.Extensibility.NotificationArgs args)
        {
            if (args == null || !(args is Dynamicweb.NewsV2.Extensibility.FrontendNotificationArgs))
                return;
 
            Dynamicweb.NewsV2.Extensibility.FrontendNotificationArgs item = (Dynamicweb.NewsV2.Extensibility.FrontendNotificationArgs)args;
 
            item.ModuleInstance.Pageview.Meta.Add("newsv2-meta-tag","hello");
        }
    }</code>
	</example>
	<summary>Occurs when the module is about to process the request.</summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.News.Notifications.Frontend.AfterLoad">
	<example>
		<code title="Example" description="" lang="CS">[Dynamicweb.Extensibility.Subscribe(Dynamicweb.Notifications.NewsV2.Frontend.AfterLoad)]
    public class NewsV2AfterLoadObserver : Dynamicweb.Extensibility.NotificationSubscriber
    {
        public override void OnNotify(string notification, Dynamicweb.Extensibility.NotificationArgs args)
        {
            if (args == null || !(args is Dynamicweb.NewsV2.Extensibility.FrontendNotificationArgs))
                return;
 
            Dynamicweb.NewsV2.Extensibility.FrontendNotificationArgs item = (Dynamicweb.NewsV2.Extensibility.FrontendNotificationArgs)args;
 
            //Todo: insert code here
        }
    }</code>
	</example>
	<summary>Occurs after the module has processed the request.</summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.News.Notifications.Frontend.BeforeSelectData">
	<example>
		<code title="Example" description="" lang="CS">[Dynamicweb.Extensibility.Subscribe(Dynamicweb.Notifications.NewsV2.Frontend.BeforeSelectData)]
    public class NewsV2BeforeSelectDataObserver : Dynamicweb.Extensibility.NotificationSubscriber
    {
        public override void OnNotify(string notification, Dynamicweb.Extensibility.NotificationArgs args)
        {
            if (args == null || !(args is Dynamicweb.NewsV2.Extensibility.FrontendDataNotificationArgs))
                return;
 
            Dynamicweb.NewsV2.Extensibility.FrontendDataNotificationArgs item = (Dynamicweb.NewsV2.Extensibility.FrontendDataNotificationArgs)args;
 
            //Todo: insert code here
        }
    }</code>
	</example>
	<summary>Occurs before the data which will be presented to the user is selected.</summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.News.Notifications.Frontend.AfterSelectData">
	<example>
		<code title="Example" description="" lang="CS">[Dynamicweb.Extensibility.Subscribe(Dynamicweb.Notifications.NewsV2.Frontend.AfterSelectData)]
    public class NewsV2AfterSelectDataObserver : Dynamicweb.Extensibility.NotificationSubscriber
    {
        public override void OnNotify(string notification, Dynamicweb.Extensibility.NotificationArgs args)
        {
            if (args == null || !(args is Dynamicweb.NewsV2.Extensibility.FrontendDataNotificationArgs))
                return;
 
            Dynamicweb.NewsV2.Extensibility.FrontendDataNotificationArgs item = (Dynamicweb.NewsV2.Extensibility.FrontendDataNotificationArgs)args;
 
            if (item.Data == null || !(item.Data is Dynamicweb.NewsV2.NewsItemCollection))
                return;
 
            Dynamicweb.NewsV2.NewsItemCollection list = (Dynamicweb.NewsV2.NewsItemCollection)item.Data;
 
            if (list.Count &gt; 0)
                list.RemoveAt(0); // remove first news
        }
    }</code>
	</example>
	<summary>Occurs after the data which will be presented to the user is selected.</summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.News.Notifications.Frontend">
	<example>How to subscribe to Events<code title="C#" description="" lang="CS">[Dynamicweb.Extensibility.Subscribe(Dynamicweb.Notifications.NewsV2.Frontend.BeforeLoad)]
 public class NewsV2BeforeLoadNotification : Dynamicweb.Extensibility.NotificationSubscriber
 {
    public override void OnNotify(string notification, object[] args)
    {
        Dynamicweb.NewsV2.Extensibility.FrontendNotificationArgs arg = (Dynamicweb.NewsV2.Extensibility.FrontendNotificationArgs)args[0];
 
        //Todo: insert your code here
    }
 }</code></example>
	<summary>Provides notification names for the frontend part.</summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.News.Notifications.ItemSaving">
	<example>
		<code title="Example" description="" lang="CS">[Dynamicweb.Extensibility.Subscribe(Dynamicweb.Notifications.NewsV2.ItemSaving)]
    public class NewsV2ItemSavingObserver : Dynamicweb.Extensibility.NotificationSubscriber
    {
        public override void OnNotify(string notification, Dynamicweb.Extensibility.NotificationArgs args)
        {
            if (args == null)
                return;
 
            if (!(args is Dynamicweb.NewsV2.Extensibility.NewsItemNotificationArgs))
                return;
 
            Dynamicweb.NewsV2.Extensibility.NewsItemNotificationArgs news = (Dynamicweb.NewsV2.Extensibility.NewsItemNotificationArgs)args;
 
            news.Item.NewsAuthor = "me";
        }
    }</code>
	</example>
	<summary>Occurs before the news item has been saved.</summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.News.Notifications.ItemSaved">
	<example>
		<code title="Example" description="" lang="CS">[Dynamicweb.Extensibility.Subscribe(Dynamicweb.Notifications.NewsV2.ItemSaved)]
    public class NewsV2ItemSavedObserver : Dynamicweb.Extensibility.NotificationSubscriber
    {
        public override void OnNotify(string notification, Dynamicweb.Extensibility.NotificationArgs args)
        {
            if (args == null)
                return;
 
            if (!(args is Dynamicweb.NewsV2.Extensibility.NewsItemNotificationArgs))
                return;
 
            Dynamicweb.NewsV2.Extensibility.NewsItemNotificationArgs news = (Dynamicweb.NewsV2.Extensibility.NewsItemNotificationArgs)args;
 
            news.Item.NewsAuthor = "me";
            news.Item.Save();
        }
    }</code>
	</example>
	<summary>Occurs after the news item has been saved.</summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.News.Notifications.ItemDeleted">
	<example>
		<code title="Example" description="" lang="CS">[Dynamicweb.Extensibility.Subscribe(Dynamicweb.Notifications.NewsV2.ItemDeleted)]
    public class NewsV2ItemDeletedObserver : Dynamicweb.Extensibility.NotificationSubscriber
    {
        public override void OnNotify(string notification, Dynamicweb.Extensibility.NotificationArgs args)
        {
            if (args == null)
                return;
 
            if (!(args is Dynamicweb.NewsV2.Extensibility.NewsItemNotificationArgs))
                return;
 
            Dynamicweb.NewsV2.Extensibility.NewsItemNotificationArgs news = (Dynamicweb.NewsV2.Extensibility.NewsItemNotificationArgs)args;
 
            //send e-mail
            string emailBody = string.Format("The news (ID:{0}) has been deleted.", news.Item.ID);
            Dynamicweb.Modules.Common.Email.SendMail("user name", "username@somedomain.dk", "NewsV2ItemDeletedObserver",
                "admin", "noreply@dynamicweb.dk", emailBody, "UTF-8");
        }
    }</code>
	</example>
	<summary>Occurs after the news item has been deleted.</summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.News.Notifications.CategorySaved">
	<example>
		<code title="Example" description="" lang="CS">[Dynamicweb.Extensibility.Subscribe(Dynamicweb.Notifications.NewsV2.CategorySaved)]
   public class NewsV2CategorySavedObserver : Dynamicweb.Extensibility.NotificationSubscriber
   {
       public override void OnNotify(string notification, Dynamicweb.Extensibility.NotificationArgs args)
       {
           if (args == null || !(args is Dynamicweb.NewsV2.Extensibility.NewsItemCategoryNotificationArgs))
               return;
 
           Dynamicweb.NewsV2.Extensibility.NewsItemCategoryNotificationArgs item = (Dynamicweb.NewsV2.Extensibility.NewsItemCategoryNotificationArgs)args;
 
          item.Category.Description = "NewsV2CategorySavedObserver";
          item.Category.Save();
       }
   }</code>
	</example>
	<summary>Occurs after the news category has been saved.</summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.News.Notifications.CategoryDeleted">
	<example>
		<code title="Example" description="" lang="CS">[Dynamicweb.Extensibility.Subscribe(Dynamicweb.Notifications.NewsV2.CategoryDeleted)]
    public class NewsV2CategoryDeletedObserver : Dynamicweb.Extensibility.NotificationSubscriber
    {
        public override void OnNotify(string notification, Dynamicweb.Extensibility.NotificationArgs args)
        {
            if (args == null || !(args is Dynamicweb.NewsV2.Extensibility.NewsItemCategoryNotificationArgs))
                return;
 
            Dynamicweb.NewsV2.Extensibility.NewsItemCategoryNotificationArgs item = (Dynamicweb.NewsV2.Extensibility.NewsItemCategoryNotificationArgs)args;
 
            //send e-mail
            string emailBody = string.Format("The news category (ID:{0}) has been deleted.", item.Category.ID);
            Dynamicweb.Modules.Common.Email.SendMail("user name", "username@somedomain.dk", "NewsV2CategoryDeletedObserver",
                "admin", "noreply@dynamicweb.dk", emailBody, "UTF-8");
        }
    }</code>
	</example>
	<summary>Occurs after the news category has been deleted.</summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.News.Notifications">
	<example>How to subscribe to Events<code title="C#" description="" lang="CS">[Dynamicweb.Extensibility.Subscribe(Dynamicweb.Notifications.NewsV2.Frontend.BeforeLoad)]
 public class NewsV2BeforeLoadNotification : Dynamicweb.Extensibility.NotificationSubscriber
 {
    public override void OnNotify(string notification, object[] args)
    {
        Dynamicweb.NewsV2.Extensibility.NewsItemNotificationArgs arg = (Dynamicweb.NewsV2.Extensibility.NewsItemNotificationArgs)args[0];
 
        //Todo: insert your code here
    }
 }</code></example>
	<summary>Provides notification names for "NewsV2" module.</summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.NewsMostPopularComparator.Compare(Dynamicweb.Modules.News.NewsItem,Dynamicweb.Modules.News.NewsItem)">
	<summary>
 Compares two specified news items.
 </summary>
	<param name="x">The x.</param>
	<param name="y">The y.</param>
	<returns></returns>
</member><member name="T:Dynamicweb.Modules.News.NewsMostPopularComparator">
	<summary>
 Represents a news item comparer.
 </summary>
</member><member name="T:Dynamicweb.Modules.News.NewsItem.SortFields">
	<summary>
 Represents a sorting fields.
 </summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.News.NewsItem.NewsStatus">
	<summary>
 Represents a news status.
 </summary>
</member><member name="P:Dynamicweb.Modules.News.NewsItem.Clicks">
	<summary>
 Gets or sets the amount of clicks.
 </summary>
	<value>The clicks.</value>
</member><member name="P:Dynamicweb.Modules.News.NewsItem.CustomFields">
	<summary>
 Stores and retrieves a list of <see cref="T:Dynamicweb.Modules.Common.CustomFields">CustomFields</see> objects.
 </summary>
	<value>List(Of CustomField)</value>
	<returns>List(Of CustomField)</returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.NewsItem.NewsCategoryID">
 -----------------------------------------------------------------------------
 <summary>
 Stores and retrieves news category <c>ID</c>.
 </summary>
	<value>Value of news category <c>ID</c>.</value>
	<remarks>
	</remarks>
	<history>
 	[dni]	16/01/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:Dynamicweb.Modules.News.NewsItem.NewsActiveFrom">
	<summary>
 Stores and retrieves the date the news are active from.
 </summary>
	<value>Date.</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.NewsItem.NewsActiveTo">
	<summary>
 Stores and retrieves the date the news are active to.
 </summary>
	<value>Date.</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.NewsItem.NewsActive">
 -----------------------------------------------------------------------------
 <summary>
 Determins whether news is active or not.
 </summary>
	<value>Boolean statement.</value>
	<remarks>
	</remarks>
	<history>
 	[dni]	16/01/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:Dynamicweb.Modules.News.NewsItem.NewsArchive">
 -----------------------------------------------------------------------------
 <summary>
 Determins whether the news are in archive or not. 
 </summary>
	<value>Boolean value</value>
	<remarks>
	</remarks>
	<history>
 	[dni]	16/01/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:Dynamicweb.Modules.News.NewsItem.NewsHeading">
	<summary>
 Stores and retrieves news heading.
 </summary>
	<value>Value of news heading.</value>
	<returns>String representation of news heading.</returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.NewsItem.NewsManchet">
	<summary>
 Stores and retrieves news teaser.
 </summary>
	<value>Value of news teaser.</value>
	<returns>String representation of news teaser.</returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.NewsItem.NewsAuthor">
 -----------------------------------------------------------------------------
 <summary>
 Stores and retrieves news author.
 </summary>
	<remarks>
	</remarks>
	<history>
 	[dni]	16/01/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:Dynamicweb.Modules.News.NewsItem.NewsText">
 -----------------------------------------------------------------------------
 <summary>
 Stores and retrieves news text.
 </summary>
	<value>News text.</value>
	<remarks>
	</remarks>
	<history>
 	[dni]	16/01/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:Dynamicweb.Modules.News.NewsItem.NewsImage">
	<summary>
 Stores and retrieves news image.
 </summary>
	<value>Name and path to the image file.</value>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.NewsItem.NewsInitials">
	<summary>
 Stores and retrieves news initials.
 </summary>
	<value>Initials of news.</value>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.NewsItem.NewsCreatedDate">
	<summary>
 Stores and retrieves the date of news creation.
 </summary>
	<value>Creation date.</value>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.NewsItem.NewsUpdatedDate">
	<summary>
 Stores and retrieves the date of news update. 
 </summary>
	<value>Date of update.</value>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.NewsItem.NewsDate">
	<summary>
 Stores and retrieves the date of the news.
 </summary>
	<value>Date.</value>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.NewsItem.NewsTemplateID">
	<summary>
 Stores and retrieves ID of the news template.
 </summary>
	<value>The current ID.</value>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.NewsItem.NewsSmallImage">
	<summary>
 Stores and retrieves small news image.
 </summary>
	<value>Name and path to the image file.</value>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.NewsItem.NewsLink">
	<summary>
 Stores and retrieves news link.
 </summary>
	<value>Link to news.</value>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.NewsItem.NewsApprovalType">
	<summary>
 Stores and retrieves approval type of news.
 </summary>
	<value>Approval type of news.</value>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.NewsItem.NewsApprovalState">
	<summary>
 Stores and retrieves approval state of news.
 </summary>
	<value>Approval state of news</value>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.NewsItem.NewsLinkPopup">
	<summary>
 Determines whether the news link to popup.
 </summary>
	<value>Boolean statement.</value>
	<returns>True or False.</returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.NewsItem.NewsUserCreate">
	<summary>
 Determines by what user news was created.
 </summary>
	<value>User's ID.</value>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.NewsItem.NewsUserEdit">
	<summary>
 Determines by what user news was edited.
 </summary>
	<value>User's ID.</value>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.NewsItem.NewsImageText">
	<summary>
 Stores and retrieves text for news image.
 </summary>
	<value>Text.</value>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.NewsItem.NewsShortDate">
	<summary>
 Returns short date of the news date.
 </summary>
	<value>Short date.</value>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.NewsItem.NewsUpdatedShortDate">
	<summary>
 Returns short date of the news update date.
 </summary>
	<value>Short date of update date.</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.NewsItem.NewsHashKey">
	<summary>
 Returns hash key of the news.
 </summary>
	<value>Hash key.</value>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.NewsItem.RelatedCategories">
	<summary>
 Stores and retrieves new item related categories.
 </summary>
	<value>RelatedCategories</value>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.NewsItem.newsMetaURL">
	<summary>
 Stores and retrieves news Meta URL.
 </summary>
	<value>Meta URL.</value>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.NewsItem.#ctor">
	<summary>
 Constructor for <see cref="T:Dynamicweb.Modules.News.NewsItem"> NewsItem</see> class.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.NewsItem.#ctor(System.Int32)">
	<summary>
 Constructor for <see cref="T:Dynamicweb.Modules.News.NewsItem"> NewsItem</see> class.
 </summary>
	<param name="id">News ID.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.NewsItem.#ctor(System.Data.IDataReader)">
	<summary>
 Constructor for <see cref="T:Dynamicweb.Modules.News.NewsItem"> NewsItem</see> class.
 </summary>
	<param name="reader">Data reader of news.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.NewsItem.Fill(System.Data.IDataReader)">
	<summary>
 Reads news item from data base.
 </summary>
	<param name="reader">The reader.</param>
</member><member name="M:Dynamicweb.Modules.News.NewsItem.Copy(System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Copies current news.
 </summary>
	<param name="copyToCategoryID">Category's <c>ID</c> where to copy.</param>
	<remarks>
		<example>
			<code>
            Dim news As New NewsItem(newsID)
            news.Copy(copyToCategoryID)
         </code>
		</example>
	</remarks>
	<history>
 	[dni]	16/01/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:Dynamicweb.Modules.News.NewsItem.Move(System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Moves current news.
 </summary>
	<param name="moveToCategoryID">Category's <c>ID</c> where to move.</param>
	<remarks>
		<example>
			<code>
            Dim news As New NewsItem(newsID)
            news.Move(moveToCategoryID)
         </code>
		</example>
	</remarks>
	<history>
 	[dni]	16/01/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:Dynamicweb.Modules.News.NewsItem.Delete(System.Int32)">
	<summary>
 Deletes the specified news.
 </summary>
	<param name="id">The news id.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.NewsItem.SetArchiveOnNews(System.Int32,System.Int32)">
	<summary>
 Update one or more news.
 </summary>
	<param name="newsId">ID of the news.</param>
	<param name="newsCatId">News category ID.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.NewsItem.GetNewsListFromCategory(System.String,Dynamicweb.Modules.News.NewsItem.NewsStatus,Dynamicweb.Modules.News.NewsItem.SortFields,Dynamicweb.Modules.Common.Lists.SortDirection,System.String,System.Int32,System.Int32,System.Boolean)">
	<summary>
 Gets the list of news by specified parameters.
 </summary>
	<param name="categoryIds">The list of news category ids.</param>
	<param name="status">The status of news.</param>
	<param name="sort">The sorting field.</param>
	<param name="direction">The sorting direction.</param>
	<param name="search">The searching filter.</param>
	<param name="startItem">The start item.</param>
	<param name="endItem">The end item.</param>
	<param name="bAdmin">if set to <c>true</c> gets all news, otherwise gets only active news.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.News.NewsItem.GetNewsListFromCategory(System.String,System.DateTime,System.DateTime,System.Boolean,Dynamicweb.Modules.News.NewsItem.NewsStatus,System.Collections.ArrayList,Dynamicweb.Modules.News.NewsItem.SortFields,Dynamicweb.Modules.Common.Lists.SortDirection,System.String,System.Int32,System.Int32)">
	<summary>
 Gets the list of news by specified parameters.
 </summary>
	<param name="categoryIds">The list of news category ids.</param>
	<param name="dateFrom">The start date.</param>
	<param name="dateTo">The end date.</param>
	<param name="useNowDate">if set to <c>true</c> use start and end dates in the request.</param>
	<param name="status">The status of news.</param>
	<param name="extranetGroups">The extranet groups list.</param>
	<param name="sort">The sorting field.</param>
	<param name="direction">The sorting direction.</param>
	<param name="search">The searching filter.</param>
	<param name="startItem">The start item.</param>
	<param name="endItem">The end item.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.News.NewsItem.MostPopularNews(System.String,Dynamicweb.Modules.News.NewsItem.NewsStatus,System.Collections.ArrayList,System.Int32)">
	<summary>
 Gets the most popular news list.
 </summary>
	<param name="categoryIds">The list of news category ids.</param>
	<param name="status">The status of news.</param>
	<param name="extranetGroups">The extranet groups list.</param>
	<param name="lastDays">The amount last days.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.News.NewsItem.GetRelatedNews(System.String,System.Int32,System.Int32,Dynamicweb.Modules.News.NewsItem.NewsStatus,System.Collections.ArrayList,System.String@,System.String@)">
	<summary>
 Gets the related news list.
 </summary>
	<param name="categoryIds">The list of news category ids.</param>
	<param name="parentId">The id of parent news.</param>
	<param name="top">The count of top news.</param>
	<param name="status">The status of news.</param>
	<param name="extranetGroups">The extranet groups list.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.News.NewsItem.GetSortStr(Dynamicweb.Modules.News.NewsItem.SortFields,System.String[])">
	<summary>
 Returns the current sort field and adds collation clause if it's neccessary
 </summary>
	<param name="sort">Sort direction.</param>
	<param name="sortFields">Sort string collection.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.NewsItem.CollateSortStr(System.String)">
	<summary>
 Adds the COLLATE clause according to regional settings of the current context Proccess
 </summary>
	<param name="sortField"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.NewsItem.GetSQLCollationName">
	<summary>
 Returns the SQL collection name according to the current culture.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.NewsItem.ContainValidItem(System.String,System.String[])">
	<summary>
 Checks if splited string contains item from string of values.
 </summary>
	<param name="source">The splited string.</param>
	<param name="values">The string of values.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.News.NewsItem.GetNewsListFromCategoryForIntegration(System.String,System.String,System.DateTime,System.DateTime)">
	<summary>
 Gets the news list from category for integration.
 </summary>
	<param name="categoryIds">The list of category ids.</param>
	<param name="excludeNewsItemsIds">The list of exclude news items ids.</param>
	<param name="dateFrom">The start date.</param>
	<param name="dateTo">The end date.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.News.NewsItem.GetNewsList(System.Int32[])">
	<summary>
 Gets the collection of news by ids list.
 </summary>
	<param name="itemsIds">The list of news ids.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.News.NewsItem.GetNewsList">
	<summary>
 Gets the collection of news by string of ids.
 </summary>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.News.NewsItem.GetNewsList(System.String)">
	<summary>
 Gets the collection of news by string of ids.
 </summary>
	<param name="itemsIds">The string of ids.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.News.NewsItem.GetAllNewsValidAndActiveAndNotArchive">
	<summary>
 Gets collection of valid, active and not archive news.
 </summary>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.News.NewsItem.GetRowCount(System.String,System.String,Dynamicweb.Modules.News.NewsItem.NewsStatus,System.Boolean)">
	<summary>
 Gets amount of news by specified parameters.
 </summary>
	<param name="categoryIds">The list of category ids.</param>
	<param name="search">The searching filter.</param>
	<param name="status">The status of news.</param>
	<param name="bAdmin">if set to <c>true</c> gets all news, otherwise gets only active news.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.News.NewsItem.GetRowCount(System.String,System.DateTime,System.DateTime,System.Boolean,System.String,Dynamicweb.Modules.News.NewsItem.NewsStatus,System.Collections.ArrayList)">
	<summary>
 Gets amount of news by specified parameters.
 </summary>
	<param name="categoryIds">The list of category ids.</param>
	<param name="dateFrom">The start date.</param>
	<param name="dateTo">The end date.</param>
	<param name="useNowDate">if set to <c>true</c> use start and end dates in the request.</param>
	<param name="search">The searching filter.</param>
	<param name="status">The status of news.</param>
	<param name="extranetGroups">The list of extranet groups.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.News.NewsItem.GetMinMaxNewsDate">
	<summary>
 Retrieves minimum and maximum date.
 </summary>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.News.NewsItem.GetMinMaxNewsDate(System.String)">
	<summary>
 Retrieves minimum and maximum date from the specified news items range.
 </summary>
	<param name="categoryIDs">Comma-separated list of IDs of news categories that represents news items range.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.NewsItem.GetNewsDates(System.String)">
	<summary>
 Retrieves creation dates from the specified news items range.
 </summary>
	<param name="categoryIDs">Comma-separated list of IDs of news categories that represents news items range.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.NewsItem.FillCustomFields(System.String)">
	<summary>
 Fills a list of custom fields according input IDs.
 </summary>
	<param name="ids">Lists of IDs.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.NewsItem.FillCustomFields">
	<summary>
 Fills a list of custom fields.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.NewsItem.FillRelatedCategories">
	<summary>
 Fills a list of related categories.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.NewsItem.FillClicks">
	<summary>
 Fills count of clicks with data getting from statistic.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.NewsItem.Save">
	<summary>
 Saves news to the data base.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.NewsItem.Save(System.Boolean)">
	<summary>
 Saves news to the data base.
 </summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.News.NewsItem">
	<summary>
 This class contains functions to handle with items of news. 
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.NewsCategoryCollection.#ctor">
	<summary>
 Initializes a new instance of the <see cref="T:Dynamicweb.Modules.News.NewsCategoryCollection"/> class.
 </summary>
</member><member name="M:Dynamicweb.Modules.News.NewsCategoryCollection.Contains(System.Int32)">
	<summary>
 Determ is Category with specified id contains in collection
 </summary>
</member><member name="M:Dynamicweb.Modules.News.NewsCategoryCollection.LoadGroups">
	<summary>
 Loads the custom groups from data base.
 </summary>
</member><member name="M:Dynamicweb.Modules.News.NewsCategoryCollection.GetByID(System.Int32)">
	<summary>
 Gets the news category by id.
 </summary>
	<param name="id">The id.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.News.NewsCategoryCollection.GetIds">
	<summary>
 Gets the news category ids list.
 </summary>
	<returns></returns>
</member><member name="T:Dynamicweb.Modules.News.NewsCategoryCollection">
	<summary>
 Represents a collection of News categories.
 </summary>
</member><member name="F:Dynamicweb.Modules.News.NewsCategory.SortFields.Name">
	<summary>
 Sorted by Name field.
 </summary>
</member><member name="T:Dynamicweb.Modules.News.NewsCategory.SortFields">
	<summary>
 Stores a sort field order.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.NewsCategory.NewsCategoryName">
	<summary>
 Stores and retrieves name of news category.
 </summary>
	<value>String</value>
	<returns>Current news category name.</returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.NewsCategory.Description">
	<summary>
 Gets or sets the description of news category.
 </summary>
	<value>The description.</value>
</member><member name="P:Dynamicweb.Modules.News.NewsCategory.NewsCategoryApprovalType">
	<summary>
 Stores and retrieves news category approval type.
 </summary>
	<value>Integer</value>
	<returns>Current approval type.</returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.NewsCategory.Sort">
	<summary>
 Sort.
 </summary>
	<value>Integer</value>
	<returns>Current position.</returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.NewsCategory.NewsCategoryAccess">
	<summary>
 Stores and retrieves access value for news category.
 </summary>
	<value>String</value>
	<returns>String representation of access value.</returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.NewsCategory.Groups">
	<summary>
 Gets or sets the custom groups list.
 </summary>
	<value>The groups list.</value>
</member><member name="P:Dynamicweb.Modules.News.NewsCategory.NewsCategoryTemplateID">
	<summary>
 Stores and retrieves ID of the news template.
 </summary>
	<value>The current ID.</value>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.NewsCategory.IsTemplateEnforcedForThisCategory">
	<summary>
 Stores and retrieves is template enforced for this category.
 </summary>
	<value>Is template enforced for this category.</value>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.NewsCategory.#ctor(System.Int32)">
	<summary>
 Constructor for <see cref="T:Dynamicweb.Modules.News.NewsCategory">NewsCategory</see> class.
 </summary>
	<param name="newsCatID"></param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.NewsCategory.#ctor">
	<summary>
 Constructor for <see cref="T:Dynamicweb.Modules.News.NewsCategory">NewsCategory</see> class.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.NewsCategory.#ctor(System.Data.IDataReader)">
	<summary>
 Constructor for <see cref="T:Dynamicweb.Modules.News.NewsCategory">NewsCategory</see> class.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.NewsCategory.LoadGroups">
	<summary>
 Loads the custom groups.
 </summary>
</member><member name="M:Dynamicweb.Modules.News.NewsCategory.GetArchiveNewsCount">
	<summary>
 Gets the amount of archive news.
 </summary>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.News.NewsCategory.GetNewsCount">
	<summary>
 Gets the amount of news.
 </summary>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.News.NewsCategory.GetArchiveNewsCount(System.Int32)">
	<summary>
 Gets the amount of archive news.
 </summary>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.News.NewsCategory.GetNewsCount(System.Int32)">
	<summary>
 Gets the amount of news.
 </summary>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.News.NewsCategory.Delete(System.Int32)">
	<summary>
 Deletes the custom category with specified id.
 </summary>
	<param name="id">Custom category id.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.NewsCategory.DeleteCustomFieldsValues(System.String,System.Int32)">
	<summary>
 Deletes the custom field values by context and id.
 </summary>
	<param name="context">The context.</param>
	<param name="id">The id.</param>
</member><member name="M:Dynamicweb.Modules.News.NewsCategory.Save">
	<summary>
 Saves current news category to the data base.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.NewsCategory.GetRowCount(System.String)">
	<summary>
 Gets the amount of news categories by searching filter.
 </summary>
	<param name="search">The searching filter.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.News.NewsCategory.GetNewsIdsInCategory(System.Int32)">
	<summary>
 Gets the list of news ids by specified category id.
 </summary>
	<param name="categoryId">The category id.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.News.NewsCategory.GetCategoryList(Dynamicweb.Modules.News.NewsCategory.SortFields,Dynamicweb.Modules.Common.Lists.SortDirection,System.String,System.Int32,System.Int32)">
	<summary>
 Gets the news category list.
 </summary>
	<param name="sort">The sorting field.</param>
	<param name="direction">The sorting direction.</param>
	<param name="search">The searching filter.</param>
	<param name="startItem">The start item.</param>
	<param name="endItem">The end item.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.News.NewsCategory.GetAllCategoryList">
	<summary>
 Gets all news category list.
 </summary>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.News.NewsCategory.GetAllowedCategoriesForUser">
	<summary>
 Gets all news category list.
 </summary>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.News.NewsCategory.GetCategoryList(System.String)">
	<summary>
 Gets the news category list by ids.
 </summary>
	<param name="ids">The list of category ids.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.News.NewsCategory.Fill(System.Data.IDataReader)">
	<summary>
 Reads news category from data base.
 </summary>
	<param name="reader">The reader.</param>
</member><member name="M:Dynamicweb.Modules.News.NewsCategory.CheckChainIdsString(System.String)">
	<summary>
 Checks if the input string is compared with the <i>Template</i>.
 </summary>
	<param name="strCategories"></param>
	<returns>If the stirng is compared with <i>Template</i> then returns current string. If not - returns <i>empty</i> string.</returns>
	<remarks><i>Template</i> - sequence of IDs separated by comma.</remarks>
</member><member name="T:Dynamicweb.Modules.News.NewsCategory">
	<summary>
 This class contains functions to handle with news category.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.ModuleSettings.RssCacheTime">
	<summary>
 Gets or sets the RSS cache time.
 </summary>
	<value>The RSS cache time.</value>
</member><member name="T:Dynamicweb.Modules.News.ModuleSettings">
	<summary>
 Represents NewsV2 module settings.
 </summary>
</member><member name="M:Dynamicweb.Modules.News.Frontend.RSSRenderer.Output">
	<summary>
 Renders the content of RSS feed into the single string.
 </summary>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.News.Frontend.RSSRenderer.RemoveRss(System.Int32)">
	<summary>
 Removes the RSS.
 </summary>
	<param name="categoryId">The category id.</param>
</member><member name="T:Dynamicweb.Modules.News.Frontend.RSSRenderer">
	<summary>
 Renders a RSS of the news
 </summary>
</member><member name="P:Dynamicweb.Modules.News.Frontend.Renderer.Pageview">
	<summary>
 Gets or sets the frontend page view.
 </summary>
	<value>The frontend page view.</value>
</member><member name="P:Dynamicweb.Modules.News.Frontend.Renderer.Properties">
	<summary>
 Gets or sets the properties of News V2 module.
 </summary>
	<value>The properties.</value>
</member><member name="P:Dynamicweb.Modules.News.Frontend.Renderer.PID">
	<summary>
 Gets the paragraph id.
 </summary>
	<value>The paragraph id.</value>
</member><member name="P:Dynamicweb.Modules.News.Frontend.Renderer.RenderDefaultView">
	<summary>
 Gets a value indicating whether this instance is rendered.
 </summary>
	<value><c>true</c> if this instance is rendered; otherwise, <c>false</c>.</value>
</member><member name="M:Dynamicweb.Modules.News.Frontend.Renderer.#ctor(Dynamicweb.Frontend.PageView,Dynamicweb.Properties,System.Data.DataRow)">
	<summary>
 Initializes a new instance of the <see cref="T:Dynamicweb.Modules.News.Frontend.Renderer"/> class.
 </summary>
	<param name="pageview">The frontend page view.</param>
	<param name="properties">The module properties.</param>
	<param name="paragraphRow">The paragraph row data.</param>
</member><member name="M:Dynamicweb.Modules.News.Frontend.Renderer.ChkUrl(Dynamicweb.Modules.News.Frontend.Common.Action,System.Int32)">
	<summary>
 Returns the URL link.
 </summary>
	<param name="act">The action.</param>
	<param name="newsId">The news id.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.News.Frontend.Renderer.ChkUrl(Dynamicweb.Modules.News.Frontend.Common.Action,System.Int32,System.String)">
	<summary>
 Returns the URL link.
 </summary>
	<param name="act">The action.</param>
	<param name="newsId">The news id.</param>
	<param name="newsLink">Custom news link. </param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.News.Frontend.Renderer.ChkUrl(System.Int32)">
	<summary>
 Returns the URL link.
 </summary>
	<param name="currentPage">The current page id.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.News.Frontend.Renderer.ChkUrl(Dynamicweb.Modules.News.Frontend.Common.Action)">
	<summary>
 Returns the URL link.
 </summary>
	<param name="act">The frontend action.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.News.Frontend.Renderer.ChkUrl(Dynamicweb.Modules.News.Frontend.Common.Action,System.Boolean,System.String)">
	<summary>
 Returns the URL link.
 </summary>
	<param name="act">The frontend action.</param>
	<param name="generateQuery">if set to <c>true</c> generates query.</param>
	<param name="partUrl">The part of URL.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.News.Frontend.Renderer.ChkUrl(Dynamicweb.Modules.News.Frontend.Common.Action,System.Boolean,System.String,System.String)">
	<summary>
 Returns the URL link.
 </summary>
	<param name="act">The frontend action.</param>
	<param name="generateQuery">if set to <c>true</c> generates query.</param>
	<param name="partUrl">The part of URL.</param>
	<param name="newsLink">Custom news link.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.Frontend.Renderer.RssLink">
	<summary>
 Returns the RSS link.
 </summary>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.News.Frontend.Renderer.RenderNews(Dynamicweb.Modules.News.NewsItem,Dynamicweb.Modules.News.NewsCategory,Dynamicweb.Modules.Common.CustomFieldCollection,Dynamicweb.Modules.Common.CustomFieldCollection,Dynamicweb.TemplateClass,Dynamicweb.Rendering.Template)">
	<summary>
 Renders the news.
 </summary>
	<param name="item">The news item.</param>
	<param name="category">The news category.</param>
	<param name="generalList">The general custom fields list.</param>
	<param name="specificList">The specific custom fields list.</param>
	<param name="tmplClass">The template data.</param>
	<param name="tmpl">The template.</param>
</member><member name="M:Dynamicweb.Modules.News.Frontend.Renderer.RenderNotify(Dynamicweb.Modules.News.NewsItem,Dynamicweb.TemplateClass,Dynamicweb.Rendering.Template)">
	<summary>
 Renders the news notify.
 </summary>
	<param name="item">The news item.</param>
	<param name="tmplClass">The teplate data.</param>
	<param name="tmpl">The teplate.</param>
</member><member name="M:Dynamicweb.Modules.News.Frontend.Renderer.RenderCustomList(Dynamicweb.Rendering.Template,System.Collections.IList)">
	<summary>
 Renders the news custom fields list.
 </summary>
	<param name="tmpl">The template.</param>
	<param name="list">The news custom fields list.</param>
</member><member name="M:Dynamicweb.Modules.News.Frontend.Renderer.RenderItemCustomFields(Dynamicweb.Rendering.Template,Dynamicweb.Modules.News.NewsItem,Dynamicweb.Modules.Common.CustomFieldCollection,Dynamicweb.Modules.Common.CustomFieldCollection)">
	<summary>
 Renders the general and specific custom fields.
 </summary>
	<param name="element">The template.</param>
	<param name="item">The news item.</param>
	<param name="generalList">The general custom fields list.</param>
	<param name="specificList">The specific custom fields list.</param>
</member><member name="M:Dynamicweb.Modules.News.Frontend.Renderer.RenderNewsList(Dynamicweb.Modules.News.NewsItemCollection,Dynamicweb.Rendering.Template)">
	<summary>
 Renders the news list.
 </summary>
	<param name="list">The news items collection.</param>
	<param name="tmpl">The template.</param>
</member><member name="M:Dynamicweb.Modules.News.Frontend.Renderer.RenderSearchPrevious(Dynamicweb.Rendering.Template@)">
	<summary>
 Renders the previous list of news.
 </summary>
	<param name="tmpl">The template.</param>
</member><member name="M:Dynamicweb.Modules.News.Frontend.Renderer.RenderDate(Dynamicweb.Rendering.Template,System.String,System.DateTime)">
	<summary>
 Renders the date according to area format and news culture.
 </summary>
	<param name="tmpl">The template.</param>
	<param name="tagName">Name of the tag.</param>
	<param name="value">The date.</param>
</member><member name="M:Dynamicweb.Modules.News.Frontend.Renderer.ExtendNewsListTemplate(Dynamicweb.Rendering.Template,Dynamicweb.Modules.News.NewsItemCollection)">
	<summary>
 Extends news list template.
 </summary>
	<param name="t">Template to extend.</param>
	<param name="items">News items being rendered.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.Frontend.Renderer.ExtendNewsListItemTemplate(Dynamicweb.Rendering.Template,Dynamicweb.Modules.News.NewsItem)">
	<summary>
 Extends news list item template.
 </summary>
	<param name="t">Template to extend.</param>
	<param name="item">News item being rendered.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.Frontend.Renderer.ExtendNewsItemDetailsTemplate(Dynamicweb.Rendering.Template,Dynamicweb.Modules.News.NewsItem)">
	<summary>
 Extends news item details template.
 </summary>
	<param name="t">Template to extend.</param>
	<param name="item">News item being rendered.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.Frontend.Renderer.ExtendNewsItemEditTemplate(Dynamicweb.Rendering.Template,Dynamicweb.Modules.News.NewsItem)">
	<summary>
 Extends news item details template.
 </summary>
	<param name="t">Template to extend.</param>
	<param name="item">News item being rendered.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.Frontend.Renderer.ExtendModuleOutputTemplate(Dynamicweb.Rendering.Template,Dynamicweb.Modules.News.Extensibility.ModuleRenderingState)">
	<summary>
 Extends module output template.
 </summary>
	<param name="t">Template to extend.</param>
	<param name="state">Rendering state.</param>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.News.Frontend.Renderer">
	<summary>
 Renders a representation of the NewsV2
 </summary>
</member><member name="P:Dynamicweb.Modules.News.Frontend.Pager.StartRecordIndex">
	<summary>
 Gets the start index of the record.
 </summary>
	<value>The start index of the record.</value>
</member><member name="P:Dynamicweb.Modules.News.Frontend.Pager.EndRecordIndex">
	<summary>
 Gets the end index of the record.
 </summary>
	<value>The end index of the record.</value>
</member><member name="P:Dynamicweb.Modules.News.Frontend.Pager.PagesCount">
	<summary>
 Gets the pages count.
 </summary>
	<value>The pages count.</value>
</member><member name="P:Dynamicweb.Modules.News.Frontend.Pager.RecordsCount">
	<summary>
 Gets or sets the records count.
 </summary>
	<value>The records count.</value>
</member><member name="M:Dynamicweb.Modules.News.Frontend.Pager.#ctor(System.Int32,System.Int32,System.Int32,System.String,System.Int32)">
	<summary>
 Initializes a new instance of the <see cref="T:Dynamicweb.Modules.News.Frontend.Pager"/> class.
 </summary>
	<param name="recordsCount">The records count.</param>
	<param name="recordsPerPage">The records per page.</param>
	<param name="currentPage">The current page.</param>
	<param name="pagingType">Type of the paging.</param>
	<param name="startIndex">The start index.</param>
</member><member name="M:Dynamicweb.Modules.News.Frontend.Pager.Render(Dynamicweb.Rendering.Template@,Dynamicweb.Modules.News.Frontend.Renderer)">
	<summary>
 Renders the specified template according to renderer properties.
 </summary>
	<param name="tmpl">The template.</param>
	<param name="renderer">The renderer.</param>
</member><member name="M:Dynamicweb.Modules.News.Frontend.Pager.Separate(Dynamicweb.Modules.News.NewsItemCollection)">
	<summary>
 Separates the news list according to page parameters.
 </summary>
	<param name="list">The news list.</param>
	<returns></returns>
</member><member name="T:Dynamicweb.Modules.News.Frontend.Pager">
	<summary>
 Represents a news paging list.
 </summary>
</member><member name="P:Dynamicweb.Modules.News.Frontend.Output.Renderer">
	<summary>
 Gets an instance of the renderer which processes module output.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.Frontend.Output.Action">
	<summary>
 Gets the current action.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.Frontend.Output.GetContent">
	<summary>
 Returns certain content according to the current action.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.Frontend.Output.AttachEventHandlers(Dynamicweb.Modules.News.Frontend.BaseAction)">
	<summary>
 Attaches to "BeforeSelectData" and "AfterSelectData" events of the specified action.
 </summary>
	<param name="act">Action to attach to.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.Frontend.Output.DetachEventHandlers(Dynamicweb.Modules.News.Frontend.BaseAction)">
	<summary>
 Detaches from "BeforeSelectData" and "AfterSelectData" events of the specified action.
 </summary>
	<param name="act">Action to detach from.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.Frontend.Output.Action_BeforeSelectData(System.Object,Dynamicweb.Modules.News.Frontend.BaseActionDataEventArgs)">
	<summary>
 Handles action's "BeforeSelectData" event.
 </summary>
	<param name="sender">Event sender.</param>
	<param name="e">Event arguments.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.Frontend.Output.Action_AfterSelectData(System.Object,Dynamicweb.Modules.News.Frontend.BaseActionDataEventArgs)">
	<summary>
 Handles action's "AfterSelectData" event.
 </summary>
	<param name="sender">Event sender.</param>
	<param name="e">Event arguments.</param>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.News.Frontend.Output">
	<summary>
 Class that handls output.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.Frontend.NewsList.#ctor(Dynamicweb.Modules.News.Frontend.Renderer,System.Data.DataRow,Dynamicweb.Modules.News.Frontend.Common.Action)">
	<summary>
 Initializes a new instance of the <see cref="T:Dynamicweb.Modules.News.Frontend.NewsList"/> class.
 </summary>
	<param name="renderer">The renderer.</param>
	<param name="paragraphRow">The paragraph data.</param>
	<param name="action">The frontend action.</param>
</member><member name="M:Dynamicweb.Modules.News.Frontend.NewsList.Output">
	<summary>
 Renders the content of this view into the single string.
 </summary>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.News.Frontend.NewsList.ReorderAccordingToProfile(Dynamicweb.Modules.News.NewsItemCollection)">
	<summary>
 Reorders news item by moving the marked news on top for the current visitor profile.
 </summary>
	<param name="news">News to process.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.Frontend.NewsList.SetupVars(System.DateTime@,System.DateTime@,System.Boolean@,System.Collections.ArrayList@,Dynamicweb.Modules.News.NewsItem.SortFields@,Dynamicweb.Modules.Common.Lists.SortDirection@,Dynamicweb.Modules.News.NewsItem.NewsStatus@)">
	<summary>
 Gets setup variable.
 </summary>
	<param name="dateFrom">The beginning of publication period.</param>
	<param name="dateTo">The end of publication period.</param>
	<param name="useDateNow">if set to <c>true</c> [use publication period].</param>
	<param name="extranetGroups">The extranet groups list.</param>
	<param name="sort">The sort field.</param>
	<param name="direction">The sort direction.</param>
	<param name="status">The news status.</param>
</member><member name="T:Dynamicweb.Modules.News.Frontend.NewsList">
	<summary>
 Represents a news list view.
 </summary>
</member><member name="M:Dynamicweb.Modules.News.Frontend.NewsEdit.#ctor(Dynamicweb.Modules.News.Frontend.Renderer,Dynamicweb.Modules.News.Frontend.Common.Action)">
	<summary>
 Initializes a new instance of the <see cref="T:Dynamicweb.Modules.News.Frontend.NewsEdit"/> class.
 </summary>
	<param name="renderer">The renderer.</param>
	<param name="action">The action.</param>
</member><member name="M:Dynamicweb.Modules.News.Frontend.NewsEdit.Output">
	<summary>
 Renders the content of this view into the single string.
 </summary>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.News.Frontend.NewsEdit.Approve">
	<summary>
 Approves the news and redirect to specified receipt page.
 </summary>
</member><member name="M:Dynamicweb.Modules.News.Frontend.NewsEdit.Delete">
	<summary>
 Deletes the news.
 </summary>
</member><member name="T:Dynamicweb.Modules.News.Frontend.NewsEdit">
	<summary>
 Represents a news edit view.
 </summary>
</member><member name="P:Dynamicweb.Modules.News.Frontend.NewsDetail.Item">
	<summary>
 Gets the <see cref="T:Dynamicweb.Modules.News.NewsItem">NewsItem</see> object that will be displayed under the current view.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.Frontend.NewsDetail.NewsID">
	<summary>
 Gets an ID of the news item that will be displayed under the current view.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.Frontend.NewsDetail.#ctor(Dynamicweb.Modules.News.Frontend.Renderer,Dynamicweb.Modules.News.Frontend.Common.Action)">
	<summary>
 Initializes new instance of an object.
 </summary>
	<param name="renderer">Object to use for rendering.</param>
	<param name="action">Current frontend action.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.Frontend.NewsDetail.#ctor(Dynamicweb.Modules.News.Frontend.Renderer,Dynamicweb.Modules.News.Frontend.Common.Action,System.Boolean)">
	<summary>
 Initializes new instance of an object.
 </summary>
	<param name="renderer">Object to use for rendering.</param>
	<param name="action">Current frontend action.</param>
	<param name="autoInitializeNewsItem">Value indicating whether to automatically initialize news item object.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.Frontend.NewsDetail.InitializeNewsItem">
	<summary>
 Initializes the news item using the ID passed with the current request.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.Frontend.NewsDetail.InitializeNewsItem(System.Int32)">
	<summary>
 Initializes the news item using the specified ID.
 </summary>
	<param name="itemID">News item ID to use.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.Frontend.NewsDetail.Output">
	<summary>
 Renders the content of this view into the single string.
 </summary>
	<returns>HTML-content of this view.</returns>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.News.Frontend.NewsDetail">
	<summary>
 Represents a news detail view.
 </summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.News.Frontend.Common.Action">
	<summary>
 Stores a list of avaliable frontend actions.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.Frontend.Common.Authorized">
	<summary>
 Determines whether the current user is authorized.
 </summary>
	<value>Boolran statement.</value>
	<returns>True - is authorized, False - an opposite.</returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.Frontend.Common.UserID">
	<summary>
 Returns the current user ID.
 </summary>
	<value>Integer ID of the user.</value>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.Frontend.Common.GetParagraphID(System.String)">
	<summary>
 Retrieves paragraph ID from the page URL.
 </summary>
	<returns>The paragraph ID. If paragraph ID can't be retrieved returns 0.</returns>
	<param name="sourceLink">The given URL.</param>
</member><member name="M:Dynamicweb.Modules.News.Frontend.Common.GetPageID(System.String)">
	<summary>
 Retrieves page ID from the given URL.
 </summary>
	<param name="sourceLink">URL to parse.</param>
</member><member name="M:Dynamicweb.Modules.News.Frontend.Common.GetPageWithoutParagraphID(System.String)">
	<summary>
 Retrieves page URL without paragraph ID (if presents).
 </summary>
	<returns>The page URL.</returns>
	<param name="sourceLink">The given URL.</param>
</member><member name="M:Dynamicweb.Modules.News.Frontend.Common.DoRedirect(System.String)">
	<summary>
 Does the redirect to specified URL.
 </summary>
	<param name="url">The specified URL.</param>
</member><member name="M:Dynamicweb.Modules.News.Frontend.Common.GetPathFromRoot(System.String,System.String)">
	<summary>
 Retrieves an absolute path to the resource.
 </summary>
	<returns>An absolute path to the resource.</returns>
	<param name="path">Path to resolve.</param>
	<param name="baseFolder">Path to the base folder (in case of "../" references).</param>
</member><member name="T:Dynamicweb.Modules.News.Frontend.Common">
	<summary>
 Class contains common shared-methods used for frontend handling.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.Frontend.BaseActionDataEventArgs.Data">
	<summary>
 Gets or sets the data being processed.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.Frontend.BaseActionDataEventArgs.#ctor(System.Object)">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<param name="data">Data being processed.</param>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.News.Frontend.BaseActionDataEventArgs">
	<summary>
 Provides information about the data being processed by the module.
 </summary>
	<remarks></remarks>
</member><member name="E:Dynamicweb.Modules.News.Frontend.BaseAction.BeforeSelectData">
	<summary>
 Occurs before the data which will be processed by the module has been selected.
 </summary>
	<remarks></remarks>
</member><member name="E:Dynamicweb.Modules.News.Frontend.BaseAction.AfterSelectData">
	<summary>
 Occurs after the data which will be processed by the module has been selected.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.Frontend.BaseAction.Pageview">
	<summary>
 Gets or sets the Pageview object.
 </summary>
	<value>The Pageview object.</value>
</member><member name="P:Dynamicweb.Modules.News.Frontend.BaseAction.Properties">
	<summary>
 Gets or sets the properties of News V2 module.
 </summary>
	<value>The properties.</value>
</member><member name="M:Dynamicweb.Modules.News.Frontend.BaseAction.Output">
	<summary>
 Outputs this instance.
 </summary>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.News.Frontend.BaseAction.OnBeforeSelectData(Dynamicweb.Modules.News.Frontend.BaseActionDataEventArgs)">
	<summary>
 Raises "BeforeSelectData" event.
 </summary>
	<param name="e">Event arguments.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.Frontend.BaseAction.OnAfterSelectData(Dynamicweb.Modules.News.Frontend.BaseActionDataEventArgs)">
	<summary>
 Raises "AfterSelectData" event.
 </summary>
	<param name="e">Event arguments.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.Frontend.BaseAction.RaiseDataSelectionEvent``1(Dynamicweb.Modules.News.Frontend.BaseAction.DataEvent,``0)">
	<summary>
 Raises an event specified by the wrapper function and returns the modified data source.
 </summary>
	<typeparam name="T">Type of the data.</typeparam>
	<param name="evt">Wrapper function that raises an event.</param>
	<param name="data">Data to pass to the event handlers.</param>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.News.Frontend.BaseAction">
	<summary>
 Represents a base class that needs to be implemented to render NewsDetail, NewsEdit, NewsList and RSSRenderer objects.
 </summary>
</member><member name="P:Dynamicweb.Modules.News.Extensibility.TemplateExtender.Renderer">
	<summary>
 Gets or sets an instance of renderer used to generate module output.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.Extensibility.TemplateExtender.ExtendTemplate(Dynamicweb.Rendering.Template)">
	<summary>
 Extends specified template.
 </summary>
	<param name="t">Template to extend.</param>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.News.Extensibility.TemplateExtender">
	<summary>
 Provides basic functionality for extending NewsV2 templates.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.Extensibility.NewsListTemplateExtender.Items">
	<summary>
 Gets or sets the collection of news items being rendered.
 </summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.News.Extensibility.NewsListTemplateExtender">
	<summary>
 Provides an ability to extend news list template.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.Extensibility.NewsListItemTemplateExtender.Item">
	<summary>
 Gets or sets the news item being rendered.
 </summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.News.Extensibility.NewsListItemTemplateExtender">
	<summary>
 Provides an ability to extend news list item template.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.Extensibility.NewsItemNotificationArgs.Item">
	<summary>
 Gets or sets a reference to news item.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.Extensibility.NewsItemNotificationArgs.#ctor(Dynamicweb.Modules.News.NewsItem)">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<param name="item">A reference to news item.</param>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.News.Extensibility.NewsItemNotificationArgs">
	<summary>
 Provides notification data about single news item.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.Extensibility.NewsItemEditTemplateExtender.Item">
	<summary>
 Gets or sets the news item being edited.
 </summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.News.Extensibility.NewsItemEditTemplateExtender">
	<summary>
 Provides an ability to extend news item edit form template.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.Extensibility.NewsItemDetailsTemplateExtender.Item">
	<summary>
 Gets or sets the news item being rendered.
 </summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.News.Extensibility.NewsItemDetailsTemplateExtender">
	<summary>
 Provides an ability to extend news item template.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.Extensibility.NewsItemCategoryNotificationArgs.Category">
	<summary>
 Gets or sets a reference to news item category.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.Extensibility.NewsItemCategoryNotificationArgs.#ctor(Dynamicweb.Modules.News.NewsCategory)">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<param name="category">A reference to news item category.</param>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.News.Extensibility.NewsItemCategoryNotificationArgs">
	<summary>
 Provides notification data about single news item category.
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.News.Extensibility.ModuleRenderingState.Before">
	<summary>
 Not content has been rendered yet.
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.News.Extensibility.ModuleRenderingState.During">
	<summary>
 Content is being rendered.
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.News.Extensibility.ModuleRenderingState.After">
	<summary>
 Content has been rendered.
 </summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.News.Extensibility.ModuleRenderingState">
	<summary>
 Represents a rendering state of the News V2 module.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.Extensibility.ModuleOutputTemplateExtender.State">
	<summary>
 Gets or sets the rendering state.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.News.Extensibility.ModuleOutputTemplateExtender">
	<summary>
 Provides an ability to track the rendering process of the News V2 module.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.Extensibility.FrontendNotificationArgs.ModuleInstance">
	<summary>
 Gets an instance of the News V2 module.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.Extensibility.FrontendNotificationArgs.#ctor(Dynamicweb.Modules.News.Frontend.Output)">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<param name="moduleInstance">An instance of the News V2 module.</param>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.News.Extensibility.FrontendNotificationArgs">
	<summary>
 Provides basic information about an event occured on the frontend.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.Extensibility.FrontendDataNotificationArgs.Data">
	<summary>
 Gets or sets the data object which is being processed.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.Extensibility.FrontendDataNotificationArgs.#ctor(Dynamicweb.Modules.News.Frontend.Output,System.Object)">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<param name="moduleInstance">An instance of the News V2 module.</param>
	<param name="data">Data object which is being processed.</param>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.News.Extensibility.FrontendDataNotificationArgs">
	<summary>
 Provides information about the data which is being processed by the News V2 module.
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.News.Consts.DBName">
	<summary>
 Assigns a name of data base.
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.News.Consts.CurrentPage">
	<summary>
 Stores default page number.
 </summary>
</member><member name="F:Dynamicweb.Modules.News.Consts.StepPages">
	<summary>
 Is not used
 </summary>
</member><member name="F:Dynamicweb.Modules.News.Consts.NewsV2Context">
	<summary>
 Stores AccessCustomCategoryContext field value.
 </summary>
</member><member name="F:Dynamicweb.Modules.News.Consts.GeneralCustomFieldContext">
	<summary>
 Stores AccessCustomFieldContext field value.
 </summary>
</member><member name="F:Dynamicweb.Modules.News.Consts.SpecificCustomFieldContext">
	<summary>
 Stores AccessCustomFieldContext field value.
 </summary>
</member><member name="F:Dynamicweb.Modules.News.Consts.DwColoumnWidth">
	<summary>
 Stores default column width
 </summary>
</member><member name="F:Dynamicweb.Modules.News.Consts.DwColoumnSpace">
	<summary>
 Stores default column space
 </summary>
</member><member name="F:Dynamicweb.Modules.News.Consts.CategorySelectionSessionName">
	<summary>
 Stores CategorySelection session name.
 </summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.News.Consts.NewsOrderBy">
	<summary>
 Determines news order.
 </summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.News.Consts.FirstXChars">
	<summary>
 Determines where to get first <i>X</i> characters.
 </summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.News.Consts">
	<summary>
 This class contains module's constants.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.News.Common.RadioButton(System.String,System.String,System.String,System.String)">
	<summary>
 Renders a radio button.
 </summary>
	<param name="SelectedFieldValue"></param>
	<param name="FieldName"></param>
	<param name="FieldValue"></param>
	<param name="jsScript"></param>
	<returns>String with current source.</returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.News.Common.IsAdmin">
	<summary>
 Gets a value indicating whether the current user account is identified as an Admin.
 </summary>
</member><member name="P:Dynamicweb.Modules.News.Common.IsExtranetInstalled">
	<summary>
 Gets a value indicating whether Extranet module is installed
 </summary>
</member><member name="M:Dynamicweb.Modules.News.Common.GetNewsV2DefaultTemplate">
	<summary>
 Gets a default template for NewsV2
 </summary>
</member><member name="T:Dynamicweb.Modules.News.Common">
	<summary>
 This class contains modules common function.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.LoyaltyPoints.Frontend.GetContent">
	<summary>
 Retrieves module content.
 </summary>
	<returns>Module content.</returns>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.LoyaltyPoints.Frontend">
	<summary>
 Represents a frontend of the LoyaltyPoints module.
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.ItemPublisher.ViewMode.List">
	<summary>
 List items.
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.ItemPublisher.ViewMode.Details">
	<summary>
 Item details.
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.ItemPublisher.ViewMode.Edit">
	<summary>
 Edit item.
 </summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.ItemPublisher.ViewMode">
	<summary>
 Represents the module view mode.
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.ItemPublisher.ListViewModes.Normal">
	<summary>
 Full list with paging.
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.ItemPublisher.ListViewModes.Partial">
	<summary>
 Partial list with selected items range.
 </summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.ItemPublisher.ItemPublisherSettings">
	<summary>
 Allowed item publisher settings
 </summary>
</member><member name="P:Dynamicweb.Modules.ItemPublisher.Frontend.Query">
	<summary>
 Gets or sets the query that defines items what will be selected.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.ItemPublisher.Frontend.ItemType">
	<summary>
 Gets or sets the target item type.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.ItemPublisher.Frontend.ItemFields">
	<summary>
 Gets or sets the fields of target item type.
 </summary>
</member><member name="P:Dynamicweb.Modules.ItemPublisher.Frontend.Mode">
	<summary>
 Gets the view mode.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.ItemPublisher.Frontend.ItemIdFromQuery">
	<summary>
 Gets the item Id specified via query string.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.ItemPublisher.Frontend.ItemTypeFromQuery">
	<summary>
 Gets the item type specified via query string.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.ItemPublisher.Frontend.#ctor">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.ItemPublisher.Frontend.InitializeModule(System.Data.DataRow,Dynamicweb.Frontend.PageView)">
	<summary>
 Initializes the module.
 </summary>
	<param name="paragraphRow">Paragraph row.</param>
	<param name="pageview">Page view.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.ItemPublisher.Frontend.GetContent">
	<summary>
 Retrieves module content.
 </summary>
	<returns>Module content.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.ItemPublisher.Frontend.GetContentBySettings(System.String)">
	<example>
		<code title="C#" description="" lang="CS">
public class PageTemplateExtender1 : PageTemplateExtender
{
   public override void ExtendTemplate(Dynamicweb.Rendering.Template t)
   {
      ItemPublisher.Frontend module = new ItemPublisher.Frontend();
      // List of allowed setting name see in ItemPublisherSettings Enum
		 t.SetTag("MyItem", module.GetContentBySettings("ItemType:MyItem;SourceItemEntry:11;DetailsTemplate:ItemPublisher/Details/Details.html;ItemFields:Field1,Field2;"));
   }
}
 </code>
	</example>
	<summary>
 Retrieves module content from specified settings.
 </summary>
	<returns>Module content.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.ItemPublisher.Frontend.Details(System.String)">
	<summary>
 Returns details about the given item.
 </summary>
	<param name="itemId">Item Id.</param>
	<returns>Details about the given item.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.ItemPublisher.Frontend.Edit(System.String)">
	<summary>
 Returns edit form for a given item.
 </summary>
	<param name="itemId">Item Id.</param>
	<returns>Edit form for the given item.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.ItemPublisher.Frontend.List">
	<summary>
 Returns items list.
 </summary>
	<returns>Items lsit.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.ItemPublisher.Frontend.GetItems">
	<summary>
 Returns a list of items that needs to be rendered.
 </summary>
	<returns>A list of items that needs to be rendered.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.ItemPublisher.Frontend.CreateRenderer">
	<summary>
 Creates new renderer.
 </summary>
	<returns>Renderer.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.ItemPublisher.Frontend.GetQuery">
	<summary>
 Returns the query parsed from the current paragraph settings (and request).
 </summary>
	<returns>Parsed query.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.ItemPublisher.Frontend.GetItemType(System.Boolean)">
	<summary>
 Returns target item metadata.
 </summary>
	<returns>Target item metadata.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.ItemPublisher.Frontend.Status(System.Net.HttpStatusCode)">
	<summary>
 Responds with the given status code.
 </summary>
	<param name="code">Status code.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.ItemPublisher.Frontend.GetItemFields">
	<summary>
 Returns the initial list of item fields to operate with.
 </summary>
	<returns>The list of item fields.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.ItemPublisher.Frontend.GetPermissions(Dynamicweb.Content.Items.ItemEntry)">
	<summary>
 Returns value indicating whether has the current user access or not.
 </summary>
	<param name="item">Item entry</param>
	<returns>Boolean</returns>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.ItemPublisher.Frontend">
	<summary>
 Represents an entry point of the module frontend.
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.ItemCreator.Notification.ValidationErrorArgs.Errors">
	<summary>
 List of errors.
 </summary>
	<remarks>Item 1 - field system name. Item 2 - field name.  Item 3 - error message.</remarks>
</member><member name="M:Dynamicweb.Modules.ItemCreator.Notification.ValidationErrorArgs.#ctor(Dynamicweb.Content.Items.Item,Dynamicweb.Content.Page,System.Collections.Generic.List{System.Tuple{System.String,System.String,System.String}})">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<param name="item">Item entry.</param>
	<param name="targetPage">Target page.</param>
	<param name="errors">List of errors.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.ItemCreator.ModuleException.#ctor(System.String,System.Exception)">
	<summary>
 Creates an instance of the class.
 </summary>
	<param name="errMessage">Error message.</param>
	<param name="innerException">Inner exception.</param>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.ItemCreator.ModuleException">
	<summary>
 Represents errors that occur during module execution.
 </summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.ItemCreator.ItemCreatorSettings">
	<summary>
 Allowed item creator settings
 </summary>
</member><member name="M:Dynamicweb.Modules.ItemCreator.Frontend.#ctor">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.ItemCreator.Frontend.GetContent">
	<summary>
 Retrieves module ocntent.
 </summary>
	<returns>Module content.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.ItemCreator.Frontend.GetContentBySettings(System.String)">
	<example>
		<code title="C#" description="" lang="CS">
public class PageTemplateExtender1 : PageTemplateExtender
{
   public override void ExtendTemplate(Dynamicweb.Rendering.Template t)
   {
      ItemCreator.Frontend module = new ItemCreator.Frontend();
      // List of allowed setting name see in ItemCreatorSettings Enum
		 t.SetTag("MyItem", module.GetContentBySettings("ItemType:MyItem;ItemId:11;DetailsTemplate:ItemPublisher/Details/Details.html;ItemFields:Field1,Field2;"));
   }
}
 </code>
	</example>
	<summary>
 Retrieves module content from specified settings.
 </summary>
	<returns>Module content.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.ItemCreator.Frontend.Content">
	<summary>
 Retrieves module ocntent. 
 </summary>
	<returns>Module content.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.ItemCreator.Frontend.GetItemFromRequest">
	<summary>
 Gets item from request.
 </summary>
	<returns>New item</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.ItemCreator.Frontend.ValidateItem(Dynamicweb.Content.Items.Item)">
	<summary>
 Validates item before saving.
 </summary>
	<param name="item">Item entry</param>
	<returns>List of errors</returns>
	<remarks>List will be empty if item is valid</remarks>
</member><member name="T:Dynamicweb.Modules.ItemCreator.Frontend">
	<summary>
 Represents an entry point of the module frontend.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.ItemCreator.Creating.Creator.Create(Dynamicweb.Content.Items.Item)">
	<summary>
 Creates object basing on assigned item.
 </summary>
	<param name="item">Item created by user</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.ItemCreator.Creating.Creator.CreateAsPage(Dynamicweb.Content.Items.Item,System.Int32,System.String)">
	<summary>
 Creates a page basing on assigned item.
 </summary>
	<param name="item">Item created by user</param>
	<param name="sort">Sort number</param>
	<param name="title">Title of new page</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.ItemCreator.Creating.Creator.CreateAsParagraph(Dynamicweb.Content.Items.Item,System.Int32,System.String)">
	<summary>
 Creates a paragraph basing on assigned item.
 </summary>
	<param name="item">Item created by user</param>
	<param name="sort">Sort number</param>
	<param name="title">Title of new page</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.ItemCreator.Creating.Creator.CreateAsNamedList(Dynamicweb.Content.Items.Item,System.Int32)">
	<summary>
 Creates an item in named list.
 </summary>
	<param name="item">Item created by user</param>
	<param name="sort">Sort number</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.ItemCreator.Creating.Creator.Sort(Dynamicweb.Modules.ItemCreator.ContentStructureType,Dynamicweb.Modules.ItemCreator.ContentOrderDirectionType)">
	<summary>
 Return sort number and quantitiy of neighbour objects.
 </summary>
	<param name="structureType"></param>
	<param name="direction"></param>
	<returns></returns>
	<remarks>If order is ascending it changes neighbour's sort numbers. </remarks>
</member><member name="M:Dynamicweb.Modules.ItemCreator.Creating.Creator.GetObjects(System.Int32,Dynamicweb.Modules.ItemCreator.ContentStructureType)">
	<summary>
 Returns the collection of tuples with objects id's and sort numbers.
 </summary>
	<param name="parentId"></param>
	<param name="structureType"></param>
	<returns>Collection of tuples where item 1 is object id and item 2 is sort number</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Gallery.Frontend.Cleanup">
	<summary>
     Performs cleanup procedure.
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.Filepublish.SortOrder.Ascending">
	<summary>
 Sorts ascending
 </summary>
</member><member name="F:Dynamicweb.Modules.Filepublish.SortOrder.Descending">
	<summary>
 Sorts descending
 </summary>
</member><member name="T:Dynamicweb.Modules.Filepublish.SortOrder">
	<summary>
 epresents the different sorting direction
 </summary>
</member><member name="F:Dynamicweb.Modules.Filepublish.SortBy.Date">
	<summary>
 Sort by LastWriteTime datetime
 </summary>
</member><member name="F:Dynamicweb.Modules.Filepublish.SortBy.Name">
	<summary>
 Sort by name of file
 </summary>
</member><member name="F:Dynamicweb.Modules.Filepublish.SortBy.Size">
	<summary>
 Sort by size of file
 </summary>
</member><member name="T:Dynamicweb.Modules.Filepublish.SortBy">
	<summary>
 Represents the different sorting options
 </summary>
</member><member name="M:Dynamicweb.Modules.Filepublish.FileCollection.#ctor">
	<summary>
 Initializes a new instance of the <see cref="T:Dynamicweb.Modules.Filepublish.FileCollection"/> class.
 </summary>
</member><member name="M:Dynamicweb.Modules.Filepublish.FileCollection.#ctor(System.IO.DirectoryInfo,System.String,System.String,System.Boolean,System.String)">
	<summary>
 Initializes a new instance of the <see cref="T:Dynamicweb.Modules.Filepublish.FileCollection"/> class.
 </summary>
	<param name="FolderInfo">The folder info.</param>
	<param name="ExtensionList">The extension list.</param>
	<param name="Folder">The folder.</param>
	<param name="ForceDownload">if set to <c>true</c> [force download].</param>
	<param name="IconFolder">The icon folder.</param>
</member><member name="M:Dynamicweb.Modules.Filepublish.FileCollection.Add(Dynamicweb.Modules.Filepublish.File)">
	<summary>
 Adds the specified file.
 </summary>
	<param name="File">The file.</param>
</member><member name="M:Dynamicweb.Modules.Filepublish.FileCollection.SortByDate">
	<summary>
 Sorts the collection by date.
 </summary>
</member><member name="M:Dynamicweb.Modules.Filepublish.FileCollection.SortByName">
	<summary>
 Sorts the collection by name.
 </summary>
</member><member name="M:Dynamicweb.Modules.Filepublish.FileCollection.SortBySize">
	<summary>
 Sorts the collection by size.
 </summary>
</member><member name="M:Dynamicweb.Modules.Filepublish.FileCollection.Sort(Dynamicweb.Modules.Filepublish.SortBy,Dynamicweb.Modules.Filepublish.SortOrder)">
	<summary>
 Sorts the collection by the specified sortby type.
 </summary>
	<param name="SortByEnum">The sort by enum.</param>
	<param name="SortOrderEnum">The sort order enum.</param>
</member><member name="T:Dynamicweb.Modules.Filepublish.FileCollection">
	<summary>
 Represents a collection of <see cref="T:Dynamicweb.Modules.Filepublish.File">file</see>.
 </summary>
</member><member name="P:Dynamicweb.Modules.Filepublish.File.File">
	<summary>
 Gets or sets the file.
 </summary>
	<value>The file.</value>
</member><member name="P:Dynamicweb.Modules.Filepublish.File.ForceDownload">
	<summary>
 Gets or sets a value indicating whether [force download].
 </summary>
	<value><c>true</c> if [force download]; otherwise, <c>false</c>.</value>
</member><member name="P:Dynamicweb.Modules.Filepublish.File.ExtensionList">
	<summary>
 Gets or sets the extension list.
 </summary>
	<value>The extension list.</value>
</member><member name="P:Dynamicweb.Modules.Filepublish.File.Name">
	<summary>
 Gets the name.
 </summary>
	<value>The name.</value>
</member><member name="P:Dynamicweb.Modules.Filepublish.File.IconFolder">
	<summary>
 Gets or sets the icon folder.
 </summary>
	<value>The icon folder.</value>
</member><member name="P:Dynamicweb.Modules.Filepublish.File.Folder">
	<summary>
 Gets or sets the folder.
 </summary>
	<value>The folder.</value>
</member><member name="P:Dynamicweb.Modules.Filepublish.File.Icon">
	<summary>
 Gets the icon.
 </summary>
	<value>The icon.</value>
</member><member name="P:Dynamicweb.Modules.Filepublish.File.Link">
	<summary>
 Gets the link.
 </summary>
	<value>The link.</value>
</member><member name="P:Dynamicweb.Modules.Filepublish.File.FullPath">
	<summary>
 Gets the full path.
 </summary>
	<value>The full path.</value>
</member><member name="P:Dynamicweb.Modules.Filepublish.File.Extension">
	<summary>
 Gets the extension.
 </summary>
	<value>The extension.</value>
</member><member name="P:Dynamicweb.Modules.Filepublish.File.Datemodified(System.String)">
	<summary>
 Gets the datemodified.
 </summary>
	<value>The datemodified.</value>
</member><member name="P:Dynamicweb.Modules.Filepublish.File.LastWriteTime">
	<summary>
 Gets the last write time.
 </summary>
	<value>The last write time.</value>
</member><member name="P:Dynamicweb.Modules.Filepublish.File.SizeKB">
	<summary>
 Gets the size in KB.
 </summary>
	<value>The size in KB.</value>
</member><member name="P:Dynamicweb.Modules.Filepublish.File.SizeMB">
	<summary>
 Gets the size in MB.
 </summary>
	<value>The size in MB.</value>
</member><member name="P:Dynamicweb.Modules.Filepublish.File.Length">
	<summary>
 Gets the length.
 </summary>
	<value>The length.</value>
</member><member name="M:Dynamicweb.Modules.Filepublish.File.#ctor">
	<summary>
 Initializes a new instance of the <see cref="P:Dynamicweb.Modules.Filepublish.File.File"/> class.
 </summary>
</member><member name="M:Dynamicweb.Modules.Filepublish.File.#ctor(System.IO.FileInfo)">
	<summary>
 Initializes a new instance of the <see cref="P:Dynamicweb.Modules.Filepublish.File.File"/> class.
 </summary>
	<param name="File">The file.</param>
</member><member name="T:Dynamicweb.Modules.Filepublish.File">
	<summary>
 Represents a file
 </summary>
</member><member name="P:Dynamicweb.Modules.Booking.ReservationSaveError.ErrorText">
	<summary>
 Gets the error text.
 </summary>
</member><member name="P:Dynamicweb.Modules.Booking.ReservationSaveError.ErrorItem">
	<summary>
 Gets the error item.
 </summary>
</member><member name="M:Dynamicweb.Modules.Booking.ReservationSaveError.#ctor(System.String,Dynamicweb.Modules.Booking.Reservation)">
	<summary>
 Initializes a new instance of the <see cref="T:Dynamicweb.Modules.Booking.ReservationSaveError"/> class.
 </summary>
	<param name="errorText">The error text.</param>
	<param name="errorItem">The error item.</param>
</member><member name="M:Dynamicweb.Modules.Booking.ReservationCollection.#ctor">
	<summary>
 Initializes a new instance of the <see cref="T:Dynamicweb.Modules.Booking.ReservationCollection"/> class.
 </summary>
</member><member name="T:Dynamicweb.Modules.Booking.ReservationCollection">
	<summary>
 Collection of Booking Reservations
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Booking.Reservation.ID">
	<summary>
 The ID of this Booking Reservation.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Booking.Reservation.Name">
	<summary>
 The Name of this Booking Reservation.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Booking.Reservation.ItemID">
	<summary>
 The ID of the Booking Resource Item to which this Booking Reservation belongs.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Booking.Reservation.MasterID">
	<summary>
 The ID of the reservation which is the parent of this reservation. This ID can be 0 if reservation is parent.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Booking.Reservation.Text">
	<summary>
 The text description of the Reservation.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Booking.Reservation.StartTime">
	<summary>
 The Start time of this Booking Reservation.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Booking.Reservation.EndTime">
	<summary>
 The End time of this Booking Reservation.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Booking.Reservation.AllDayEvent">
	<summary>
 Indicates whether this Booking Reservation is an All Day Event.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Booking.Reservation.CreatedDate">
	<summary>
 The Date this Booking Reservation was created.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Booking.Reservation.EditedDate">
	<summary>
 The Date this Booking Reservation was last edited.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Booking.Reservation.CreatedByUserID">
	<summary>
 The ID of the User who created this Booking Reservation.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Booking.Reservation.EditedByUserID">
	<summary>
 The ID of the User who edited this Booking Reservation last.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Booking.Reservation.LinkedItems">
	<summary>
 A collection of linked items to this master Reservation.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Booking.Reservation.IsValid">
	<summary>
 Returns a value indicating whether the Reservation and all child Reservations are valid.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.Reservation.#ctor">
	<summary>
 Creates a new instance of a Booking Reservation.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.Reservation.Fill(System.Data.IDataReader)">
	<summary>
 Fills this instance of the object.
 </summary>
	<param name="reader"></param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.Reservation.FillRow(System.Data.DataRow)">
	<summary>
 Saves the values of this object instance.
 </summary>
	<param name="row"></param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.Reservation.Save">
	<summary>
 Saves current data to the database.
 </summary>
</member><member name="M:Dynamicweb.Modules.Booking.Reservation.Delete(System.Int32)">
	<summary>
 Deletes the object with specified ID.
 </summary>
	<param name="id">Specified ID.</param>
</member><member name="M:Dynamicweb.Modules.Booking.Reservation.LinkedReservationExistsForItem(Dynamicweb.Modules.Booking.Item)">
	<summary>
 Returns a boolean value indicating whether a linked reservation exists for the given Booking Item.
 </summary>
	<param name="item">The Booking Item to check for</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.Reservation.LinkedReservationExistsForItem(System.Int32)">
	<summary>
 Returns a boolean value indication whether a linked reservation exists for the given Booking Item.
 </summary>
	<param name="id">The ID of the Item</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.Reservation.GetReservationById(System.Int32)">
	<summary>
 Get the Reservation with the given ID.
 </summary>
	<param name="id">The ID of the Reservation</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.Reservation.GetReservations">
	<summary>
 Get all Reservations.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.Reservation.GetReservationsByItemID(System.Int32)">
	<summary>
 Get all Reservations for the Item with the given ID.
 </summary>
	<param name="itemID">The ID of the Item</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.Reservation.GetReservationsByMasterID(System.Int32)">
	<summary>
 Gets all Reservations with the given master ID.
 </summary>
	<param name="id">The ID of the master Reservation</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.Reservation.GetReservationLink(System.Int32)">
	<summary>
 Gets a ReservationLink based on the given ID. ID can be for a linked reservation or the master.
 </summary>
	<param name="id"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.Reservation.GetReservationsInTimeIntervalByItemID(System.DateTime,System.DateTime,System.Int32)">
	<summary>
 Gets all parent and child reservations for a Booking Item with the given ID in the given time period.
 </summary>
	<param name="fromTime">The start time to search from</param>
	<param name="toTime">The end time to search to</param>
	<param name="itemID">The ID of the Item to search for</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.Reservation.GetReservationsInTimeIntervalByItemID(System.DateTime,System.DateTime,System.Int32,System.Boolean)">
	<summary>
 Gets all parent and child reservations (if chosen) for a Booking Item with the given ID in the given time period.
 </summary>
	<param name="fromTime">The start time to search from</param>
	<param name="toTime">The end time to search to</param>
	<param name="itemID">The ID of the Item to search for</param>
	<param name="getChildReservations">Indicates whether to get child reservations for the given Item</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.Reservation.GetReservationsInTimeInterval(System.DateTime,System.DateTime)">
	<summary>
 Gets all reservations in the given time period.
 </summary>
	<param name="fromTime">The start time to search from</param>
	<param name="toTime">The end time to search to</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.Reservation.FindNextAvailableTimeSlotForItems(Dynamicweb.Modules.Booking.ItemCollection,System.TimeSpan,System.DateTime,System.Boolean)">
	<summary>
 Finds the next available time slot for items.
 </summary>
	<param name="items">The items.</param>
	<param name="interval">The interval.</param>
	<param name="fromTime">From time.</param>
	<param name="isAllDayEvent">if set to <c>true</c> [is all day event].</param><returns></returns>
</member><member name="M:Dynamicweb.Modules.Booking.Reservation.FindNextAvailableTimeSlotForItem(System.Int32,System.TimeSpan,System.DateTime,System.Boolean)">
	<summary>
 Finds the next available time slot for item.
 </summary>
	<param name="itemID">The item ID.</param>
	<param name="interval">The interval.</param>
	<param name="fromTime">From time.</param>
	<param name="isAllDayEvent">if set to <c>true</c> [is all day event].</param><returns></returns>
</member><member name="M:Dynamicweb.Modules.Booking.Reservation.FindNextAvailableTimeSlotForItem(Dynamicweb.Modules.Booking.Item,System.TimeSpan,System.DateTime,System.Boolean)">
	<summary>
 Finds the next available time slot for item.
 </summary>
	<param name="item">The item.</param>
	<param name="interval">The interval.</param>
	<param name="fromTime">From time.</param>
	<param name="isAllDayEvent">if set to <c>true</c> [is all day event].</param><returns></returns>
</member><member name="M:Dynamicweb.Modules.Booking.Reservation.FindAvailableResourceInTimeInterval(System.DateTime,System.TimeSpan,System.Boolean)">
	<summary>
 Finds the available resource in time interval.
 </summary>
	<param name="startTime">The start time.</param>
	<param name="interval">The interval.</param>
	<param name="isAllDayEvent">if set to <c>true</c> [is all day event].</param><returns></returns>
</member><member name="M:Dynamicweb.Modules.Booking.Reservation.FindNextAvailableTimeSlotForAnyItem(System.Int32,System.TimeSpan,System.DateTime,System.Boolean)">
	<summary>
 Finds the next available time slot for any item.
 </summary>
	<param name="categoryID">The category ID.</param>
	<param name="interval">The interval.</param>
	<param name="startTime">The start time.</param>
	<param name="isAllDayEvent">if set to <c>true</c> [is all day event].</param><returns></returns>
</member><member name="M:Dynamicweb.Modules.Booking.Reservation.FindNextAvailableTimeSlotForAnyItem(Dynamicweb.Modules.Booking.Category,System.TimeSpan,System.DateTime,System.Boolean)">
	<summary>
 Finds the next available time slot for any item.
 </summary>
	<param name="category">The category.</param>
	<param name="interval">The interval.</param>
	<param name="startTime">The start time.</param>
	<param name="isAllDayEvent">if set to <c>true</c> [is all day event].</param><returns></returns>
</member><member name="M:Dynamicweb.Modules.Booking.Reservation.ReservationsOnDay(System.DateTime,Dynamicweb.Modules.Booking.ReservationCollection)">
	<summary>
 Reservations on day.
 </summary>
	<param name="Time">The time.</param>
	<param name="reservations">The reservations.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.Booking.Reservation.ReservationsOnAllDay(System.DateTime,Dynamicweb.Modules.Booking.ReservationCollection)">
	<summary>
 Reservations on all day only.
 </summary>
	<param name="Time">The time.</param>
	<param name="reservations">The reservations.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.Booking.Reservation.ReservationsInHour(System.DateTime,Dynamicweb.Modules.Booking.ReservationCollection)">
	<summary>
 Reservations in hour.
 </summary>
	<param name="Time">The time.</param>
	<param name="reservations">The reservations.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.Booking.Reservation.ReservationsInHour(System.DateTime,System.Int32,Dynamicweb.Modules.Booking.ReservationCollection)">
	<summary>
 Reservationses in hour.
 </summary>
	<param name="Time">The time.</param>
	<param name="Hour">The hour.</param>
	<param name="reservations">The reservations.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.Booking.Reservation.ReservationsOnMinute(System.DateTime,System.Int32,System.Int32,Dynamicweb.Modules.Booking.ReservationCollection)">
	<summary>
 Reservationses on minute.
 </summary>
	<param name="Time">The time.</param>
	<param name="Hour">The hour.</param>
	<param name="Minute">The minute.</param>
	<param name="reservations">The reservations.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.Booking.Reservation.ReservationsActive(Dynamicweb.Modules.Booking.ReservationCollection,System.DateTime,System.DateTime)">
	<summary>
 Returns active reservations from the passed reservation collection based on the reservations start and endtime.
 </summary>
	<param name="reservations">The reservations.</param>
	<param name="StartTime">The start time.</param>
	<param name="endTime">The end time.</param>
	<returns></returns>
</member><member name="T:Dynamicweb.Modules.Booking.Reservation">
	<summary>
 Booking Reservation
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.Renderer.Item(Dynamicweb.Rendering.Template,Dynamicweb.Modules.Booking.Item)">
	<summary>
 Renders a Resource, service or calendar item
 </summary>
	<param name="t">A template object with a template to write template tags to</param>
	<param name="item">An instance of the item to render</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.Renderer.Reservation(Dynamicweb.Rendering.Template,Dynamicweb.Modules.Booking.Reservation,System.Int32@)">
	<summary>
 Renders a reservation item
 </summary>
	<param name="t">A template object with a template to write template tags to</param>
	<param name="r">An instance of the reservation to render</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.Renderer.Reservations(Dynamicweb.Rendering.Template,Dynamicweb.Modules.Booking.ReservationCollection,System.Int32@)">
	<summary>
 Renders a collection of reservation item in a loop in the template ("Reservations")
 </summary>
	<param name="t">A template object with a template to write template tags to</param>
	<param name="reservations">An instance of a ReservationCollection to render</param>
	<remarks>Does not render anything if the loop is not in the template or reservations is null</remarks>
</member><member name="M:Dynamicweb.Modules.Booking.Renderer.Reservations(Dynamicweb.Rendering.Template,Dynamicweb.Modules.Booking.ReservationCollection,System.String,System.Int32@)">
	<summary>
 Renders a collection of reservation item in a loop in the template
 </summary>
	<param name="t">A template object with a template to write template tags to</param>
	<param name="reservations">An instance of a ReservationCollection to render</param>
	<param name="LoopName">The name of the loop</param>
	<remarks>Does not render anything if the loop is not in the template or reservations is null</remarks>
</member><member name="T:Dynamicweb.Modules.Booking.Renderer">
	<summary>
 Renders different objects for frontend
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.Booking.ItemType.Resource">
	<summary>
 Item is a Resource
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.Booking.ItemType.Service">
	<summary>
 Item is a Service
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.Booking.ItemType.Calendar">
	<summary>
 Item is a Calendar
 </summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.Booking.ItemType">
	<summary>
 Types of Booking Items
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.ItemCollection.ToString">
	<summary>
 Returns a comma separated string list for all items in the collection
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.ItemCollection.Contains(Dynamicweb.Modules.Booking.Item)">
	<summary>
 Determines whether this collection contains the specified item.
 </summary>
	<param name="item">The item.</param><returns>
		<c>true</c> if this collection contains the specified item; otherwise, <c>false</c>.
 </returns>
</member><member name="M:Dynamicweb.Modules.Booking.ItemCollection.Contains(System.Int32)">
	<summary>
 Determines whether this collection contains the item specified by itemID.
 </summary>
	<param name="itemID">The itemID.</param><returns>
		<c>true</c> if this collection contains the item specified by itemID; otherwise, <c>false</c>.
 </returns>
</member><member name="P:Dynamicweb.Modules.Booking.Item.ID">
	<summary>
 The ID of the Booking Item.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Booking.Item.Name">
	<summary>
 The Name of the Booking Item.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Booking.Item.CategoryID">
	<summary>
 The ID of the Booking Category to which this Booking Item belongs.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Booking.Item.Type">
	<summary>
 The Type of this Booking Item.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Booking.Item.Description">
	<summary>
 The Description of the Booking Item.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Booking.Item.CreatedDate">
	<summary>
 The Date this Booking Item was created.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Booking.Item.EditedDate">
	<summary>
 The Date this Booking Item was last edited.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Booking.Item.CreatedByUserID">
	<summary>
 The ID of the User who created this Booking Item.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Booking.Item.EditedByUserID">
	<summary>
 The ID of the User who edited this Booking Item last.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Booking.Item.CalendarSetupIsInherited">
	<summary>
 Indicates whether the CalendarSetup for this Item is inherited from the Category.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Booking.Item.CalendarSetup">
	<summary>
 The CalendarSetup for this Item.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.Item.#ctor">
	<summary>
 Creates a new instance of a Booking Base Item.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.Item.Fill(System.Data.IDataReader)">
	<summary>
 Fills the instance of the Item with data.
 </summary>
	<param name="reader"></param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.Item.FillRow(System.Data.DataRow)">
	<summary>
 Saves the values of the Item.
 </summary>
	<param name="row"></param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.Item.Delete(System.Int32)">
	<summary>
 Deletes the object with specified ID.
 </summary>
	<param name="id">Specified ID.</param>
</member><member name="M:Dynamicweb.Modules.Booking.Item.GetItemByID(System.Int32)">
	<summary>
 Returns the Item with the given ID, or nothing.
 </summary>
	<param name="id">The ID of the Item</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.Item.GetItemsByID(System.String)">
	<summary>
 Gets the items by ID.
 </summary>
	<param name="ids">The ids.</param><returns></returns>
</member><member name="M:Dynamicweb.Modules.Booking.Item.GetItemsByID(System.Collections.Generic.List{System.Int32})">
	<summary>
 Gets the items by ID.
 </summary>
	<param name="ids">The ids.</param><returns></returns>
</member><member name="M:Dynamicweb.Modules.Booking.Item.GetItemsBySQL(System.String)">
	<summary>
 Gets the items by SQL.
 </summary>
	<param name="sql">The SQL statement.</param><returns></returns>
</member><member name="M:Dynamicweb.Modules.Booking.Item.GetTypeOfItem(System.Int32)">
	<summary>
 Gets the type of item.
 </summary>
	<param name="id">The id.</param><returns></returns>
</member><member name="M:Dynamicweb.Modules.Booking.Item.GetCalendars">
	<summary>
 Returns a collection of all the calendars.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.Item.GetCalendarsByCategoryID(System.Int32)">
	<summary>
 Returns a collection of CalendarItems belonging to the Category with the given ID.
 </summary>
	<param name="id"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.Item.GetCalendarsById(System.String)">
	<summary>
 Gets the calendars by id.
 </summary>
	<param name="ids">The ids.</param><returns></returns>
</member><member name="M:Dynamicweb.Modules.Booking.Item.GetCalendarsById(System.Collections.Generic.List{System.Int32})">
	<summary>
 Gets the calendars by id.
 </summary>
	<param name="ids">The ids.</param><returns></returns>
</member><member name="M:Dynamicweb.Modules.Booking.Item.GetResources">
	<summary>
 Returns a collection of all the resources.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.Item.GetResourcesByCategoryID(System.Int32)">
	<summary>
 Returns a collection of ResourceItems belonging to the Category with the given ID.
 </summary>
	<param name="id"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.Item.GetResourcesById(System.String)">
	<summary>
 Gets the resources by id.
 </summary>
	<param name="ids">The ids.</param><returns></returns>
</member><member name="M:Dynamicweb.Modules.Booking.Item.GetResourcesById(System.Collections.Generic.List{System.Int32})">
	<summary>
 Gets the resources by id.
 </summary>
	<param name="ids">The ids.</param><returns></returns>
</member><member name="M:Dynamicweb.Modules.Booking.Item.GetResourcesCategories(Dynamicweb.Modules.Booking.CategoryCollection)">
	<summary>
 Gets the resources categories.
 </summary>
	<param name="categories">The categories.</param><returns></returns>
</member><member name="M:Dynamicweb.Modules.Booking.Item.GetServices">
	<summary>
 Gets the services.
 </summary><returns></returns>
</member><member name="M:Dynamicweb.Modules.Booking.Item.GetServicesByCategoryID(System.Int32)">
	<summary>
 Returns a collection of ServiceItems belonging to the Category with the given ID.
 </summary>
	<param name="id"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.Item.GetServicesById(System.String)">
	<summary>
 Gets the services by id.
 </summary>
	<param name="ids">The ids.</param><returns></returns>
</member><member name="M:Dynamicweb.Modules.Booking.Item.GetServicesById(System.Collections.Generic.List{System.Int32})">
	<summary>
 Gets the services by id.
 </summary>
	<param name="ids">The ids.</param><returns></returns>
</member><member name="M:Dynamicweb.Modules.Booking.Item.CompareTo(Dynamicweb.Modules.Booking.Item)">
	<summary>
 Compares this instance of Item to another instance.
 </summary>
	<param name="other">The other instance.</param><returns></returns>
</member><member name="T:Dynamicweb.Modules.Booking.Item">
	<summary>
 Base class for Booking Items
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.DateOverlappingException.#ctor(System.String,System.Collections.Generic.List{Dynamicweb.Modules.Booking.ReservationSaveError})">
	<summary>
 Initializes a new instance of the <see cref="T:Dynamicweb.Modules.Booking.DateOverlappingException"/> class.
 </summary>
	<param name="message">The message.</param>
	<param name="data">The data.</param>
</member><member name="P:Dynamicweb.Modules.Booking.DateOverlappingException.Data">
	<summary>
 Gets a collection of key/value pairs that provide additional user-defined information about the exception.
 </summary>
	<returns>An object that implements the <see cref="T:System.Collections.IDictionary"/> interface and contains a collection of user-defined key/value pairs. The default is an empty collection.</returns>
</member><member name="T:Dynamicweb.Modules.Booking.DateOverlappingException">
	<summary>
 Exception class for overlapping reservations.
 </summary>
</member><member name="M:Dynamicweb.Modules.Booking.CategoryCollection.#ctor">
	<summary>
 Initializes a new instance of the <see cref="T:Dynamicweb.Modules.Booking.CategoryCollection"/> class.
 </summary>
</member><member name="T:Dynamicweb.Modules.Booking.CategoryCollection">
	<summary>
 Collection of Booking Categories
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Booking.Category.Resources">
	<summary>
 Gets the resources.
 </summary>
	<value>The resources.</value>
</member><member name="P:Dynamicweb.Modules.Booking.Category.Calendars">
	<summary>
 Gets the calendars.
 </summary>
	<value>The calendars.</value>
</member><member name="P:Dynamicweb.Modules.Booking.Category.Services">
	<summary>
 Gets the services.
 </summary>
	<value>The services.</value>
</member><member name="P:Dynamicweb.Modules.Booking.Category.ID">
	<summary>
 The ID of this Booking Category.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Booking.Category.Name">
	<summary>
 The Name of this Booking Category.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Booking.Category.AreaID">
	<summary>
 The ID of the Area to which this Booking Category belongs.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Booking.Category.CreatedDate">
	<summary>
 The Date this Booking Category was created.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Booking.Category.EditedDate">
	<summary>
 The Date this Booking Category was edited last.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Booking.Category.CreatedByUserID">
	<summary>
 The ID of the User who created this Booking Category.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Booking.Category.EditedByUserID">
	<summary>
 The ID of the User who edited this Booking Category last.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Booking.Category.CalendarSetup">
	<summary>
 The default CalendarSetup for all Items in this Category
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.Category.#ctor">
	<summary>
 Creates a new instance of a Booking Category.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.Category.Fill(System.Data.IDataReader)">
	<summary>
 Fills this instance of the category.
 </summary>
	<param name="reader"></param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.Category.FillRow(System.Data.DataRow)">
	<summary>
 Saves the values this object instance.
 </summary>
	<param name="row"></param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.Category.Delete(System.Int32)">
	<summary>
 Deletes the object with specified ID.
 </summary>
	<param name="id">Specified ID.</param>
</member><member name="M:Dynamicweb.Modules.Booking.Category.GetCategories">
	<summary>
 Returns a collection with all Booking Categories
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.Category.GetCategoryByID(System.Int32)">
	<summary>
 Returns the Booking Category with the given ID, or nothing.
 </summary>
	<param name="ID">The ID of the Booking Category</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.Category.GetCategoriesByAreaId(System.Int32)">
	<summary>
 Gets the categories by area id.
 </summary>
	<param name="AreaID">The area ID.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.Booking.Category.GetCategoriesById(System.String)">
	<summary>
 Returns a collection of categories based on a CSV list of category ID's
 </summary>
	<param name="ids">CSV list of category ID's (i.e. "1, 5, 7")</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.Category.GetCategoriesById(System.Collections.Generic.List{System.Int32})">
	<summary>
 Returns a collection of categories based on a list of category ID's
 </summary>
	<param name="ids">list of category ID's</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.Category.CompareTo(Dynamicweb.Modules.Booking.Category)">
	<summary>
 Compares this instance of the Category to another instance.
 </summary>
	<param name="other">The other instance.</param><returns></returns>
</member><member name="T:Dynamicweb.Modules.Booking.Category">
	<summary>
 Booking Category
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.Calendar.RenderDays(Dynamicweb.Rendering.Template,System.DateTime,System.DateTime,System.Int32@)">
	<summary>
 Renders the days.
 </summary>
	<param name="template">The template.</param>
	<param name="StartTime">The start time.</param>
	<param name="endTime">The end time.</param>
</member><member name="M:Dynamicweb.Modules.Booking.Calendar.RenderDays(Dynamicweb.Rendering.Template,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Int32,Dynamicweb.Modules.Booking.ReservationCollection,System.DateTime,System.Int32,System.Int32@,System.String,System.Boolean)">
	<summary>
 Renders the days.
 </summary>
	<param name="template">The template.</param>
	<param name="StartTime">The start time.</param>
	<param name="endTime">The end time.</param>
	<param name="startHour">The start hour.</param>
	<param name="endHour">The end hour.</param>
	<param name="MinutPrecision">The minut precision.</param>
	<param name="Reservations">The reservations.</param>
</member><member name="M:Dynamicweb.Modules.Booking.Calendar.RenderHours(Dynamicweb.Rendering.Template,System.DateTime)">
	<summary>
 Renders the hours.
 </summary>
	<param name="template">The template.</param>
	<param name="CurrentTime">The current time.</param>
</member><member name="M:Dynamicweb.Modules.Booking.Calendar.RenderHours(Dynamicweb.Rendering.Template,System.DateTime,System.Int32,System.Int32,System.Int32)">
	<summary>
 Renders the hours.
 </summary>
	<param name="template">The template.</param>
	<param name="CurrentTime">The current time.</param>
	<param name="startHour">The start hour.</param>
	<param name="endHour">The end hour.</param>
	<param name="MinutPrecision">The minut precision.</param>
</member><member name="M:Dynamicweb.Modules.Booking.Calendar.RenderHours(Dynamicweb.Rendering.Template,System.DateTime,System.Int32,System.Int32,System.Int32,Dynamicweb.Modules.Booking.ReservationCollection,System.Int32@,System.DateTime,System.String)">
	<summary>
 Renders the hours.
 </summary>
	<param name="template">The template.</param>
	<param name="CurrentTime">The current time.</param>
	<param name="startHour">The start hour.</param>
	<param name="endHour">The end hour.</param>
	<param name="MinutPrecision">The minut precision.</param>
	<param name="Reservations">The reservations.</param>
</member><member name="M:Dynamicweb.Modules.Booking.Calendar.GetStartDate(System.DateTime,Dynamicweb.Modules.Booking.Calendar.Period,Dynamicweb.Modules.Booking.Calendar.StartFrom,System.Int32,System.Int32@)">
	<summary>
 Gets the start date.
 </summary>
	<param name="period">The period span <see cref="T:Dynamicweb.Modules.Booking.Calendar.Period"></see>.</param>
	<param name="startFrom">The start from.</param>
	<param name="PeriodOffset">The period offset.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.Booking.Calendar.GetStartDate(System.DateTime,Dynamicweb.Modules.Booking.Calendar.Period,Dynamicweb.Modules.Booking.Calendar.StartFrom,System.Int32,System.Boolean,System.Int32@)">
	<summary>
 Gets the start date.
 </summary>
	<param name="period">The period span <see cref="T:Dynamicweb.Modules.Booking.Calendar.Period"></see>.</param>
	<param name="startFrom">The start from.</param>
	<param name="PeriodOffset">The period offset.</param>
	<param name="ExpandMonthToWholeWeeks">if set to <c>true</c> the and the timespan is month, the mont is expanded to include whole weeks in the end so the date will end on the first sunday after the end of the period.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.Booking.Calendar.GetEndDate(System.DateTime,Dynamicweb.Modules.Booking.Calendar.Period,System.Int32)">
	<summary>
 Gets the end date.
 </summary>
	<param name="period">The period span <see cref="T:Dynamicweb.Modules.Booking.Calendar.Period"></see>.</param>
	<param name="PeriodOffset">The period offset.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.Booking.Calendar.GetEndDate(System.DateTime,Dynamicweb.Modules.Booking.Calendar.Period,System.Int32,System.Boolean)">
	<summary>
 Gets the end date.
 </summary>
	<param name="period">The period span <see cref="T:Dynamicweb.Modules.Booking.Calendar.Period"></see>.</param>
	<param name="PeriodOffset">The period offset.</param>
	<param name="ExpandMonthToWholeWeeks">if set to <c>true</c> the and the timespan is month, the mont is expanded to include whole weeks in begining so the date will start on the first monday before the month begins.</param>
	<returns></returns>
</member><member name="F:Dynamicweb.Modules.Booking.Calendar.Period.Day">
	<summary>
 One day
 </summary>
</member><member name="F:Dynamicweb.Modules.Booking.Calendar.Period.WorkWeek">
	<summary>
 A work week - monday to friday
 </summary>
</member><member name="F:Dynamicweb.Modules.Booking.Calendar.Period.Week">
	<summary>
 A whole week - monday to sunday
 </summary>
</member><member name="F:Dynamicweb.Modules.Booking.Calendar.Period.Month">
	<summary>
 A month
 </summary>
</member><member name="T:Dynamicweb.Modules.Booking.Calendar.Period">
	<summary>
 How to calculate the begining and end date
 </summary>
</member><member name="F:Dynamicweb.Modules.Booking.Calendar.StartFrom.Today">
	<summary>
 Starts from todays date
 </summary>
</member><member name="F:Dynamicweb.Modules.Booking.Calendar.StartFrom.StartOfPeriod">
	<summary>
 Start from the date of the begining of the specified dates current period
 </summary>
</member><member name="T:Dynamicweb.Modules.Booking.Calendar.StartFrom">
	<summary>
 How to calculate the beginning date
 </summary>
</member><member name="T:Dynamicweb.Modules.Booking.Calendar">
	<summary>
 Calendar render helper methods
 </summary>
</member><member name="T:Dynamicweb.Modules.Forum.UserRelationCollection">
	<summary>
 Represents a collection of user relations.
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.Forum.UserRelationType.Subscription">
	<summary>
 Indicates that specified user will be notified whenever either a category or a thread updates.
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.Forum.UserRelationType.Moderator">
	<summary>
 Indicates that the user is a moderator of the specified category.
 </summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.Forum.UserRelationType">
	<summary>
 Represents a type of the forum relation.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.UserRelation.RelationType">
	<summary>
 Gets or sets the type of the relation.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.UserRelation.UserID">
	<summary>
 Gets or sets and ID of the user (in case of non-anonymous users).
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.UserRelation.CategoryID">
	<summary>
 Gets or sets an ID of the forum category.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.UserRelation.ThreadID">
	<summary>
 Gets or sets an ID of the forum thread.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.UserRelation.Email">
	<summary>
 Gets or sets an e-mail address of the user (in case of anonymous users).
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.UserRelation.Name">
	<summary>
 Gets or sets the name of the user (in case of anonymous users).
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.UserRelation.UserAccount">
	<summary>
 Gets the corresponding user account information.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.UserRelation.#ctor">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.UserRelation.#ctor(Dynamicweb.Modules.Forum.UserRelation)">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<param name="copyFrom">User relation to copy data from.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.UserRelation.FillRow(System.Data.DataRow)">
	<summary>
 Fills specified data row with property values of the current object.
 </summary>
	<param name="row">Data row to fill.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.UserRelation.Fill(System.String)">
	<summary>
 Fills object properties with the data retrieved according to the given SQL statement.
 </summary>
	<param name="sql">SQL statement to process.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.UserRelation.Fill(System.Data.IDataReader)">
	<summary>
 Fills object properties with the data provided by the specified data reader.
 </summary>
	<param name="dr">Data reader to read data from.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.UserRelation.GetUserRelationByID(System.Int32)">
	<summary>
 Retrieves user relation by its ID.
 </summary>
	<param name="id">An ID of the user relation.</param>
	<returns>User relation or null if the relation cannot be retrieved.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.UserRelation.GetUserRelations">
	<summary>
 Retrieves a list of all user relations.
 </summary>
	<returns>A list of all user relations.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.UserRelation.GetUserRelationsByCategoryID(System.Int32)">
	<summary>
 Retrieves a collection uf user relations by the given category ID.
 </summary>
	<param name="id">An ID of the category.</param>
	<returns>A collection of matched user relations.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.UserRelation.GetUserRelationsByThreadID(System.Int32)">
	<summary>
 Retrieves a collection uf user relations by the given thread ID.
 </summary>
	<param name="id">An ID of the thread.</param>
	<returns>A collection of matched user relations.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.UserRelation.GetUserRelationsByThreadID(System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
	<summary>
 Retrieves a collection uf user relations by the given thread ID optionally ommitting those relations that belongs to any of the given categories.
 </summary>
	<param name="id">An ID of the thread.</param>
	<param name="ommitCategories">A list of category IDs whose corresponding relations sshould be excluded from the resulting collection.</param>
	<returns>A collection of matched user relations.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.UserRelation.GetUserRelationsByType(Dynamicweb.Modules.Forum.UserRelationType)">
	<summary>
 Retrieves a list of user relations with the given relation type.
 </summary>
	<param name="relationType">Target relation type.</param>
	<returns>A list of all user relations.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.UserRelation.LinkToCategory(System.Int32,System.String,System.String)">
	<summary>
 Establishes user relation of type "Subscription" for a given category.
 </summary>
	<param name="categoryID">An ID of the category.</param>
	<param name="email">An e-mail address of the user.</param>
	<param name="name">The name of the user.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.UserRelation.LinkToThread(System.Int32,System.String,System.String)">
	<summary>
 Establishes user relation of type "Subscription" for a given thread.
 </summary>
	<param name="threadID">An ID of the thread.</param>
	<param name="email">An e-mail address of the user.</param>
	<param name="name">The name of the user.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.UserRelation.UnlinkFromThread(System.Int32)">
	<summary>
 Deletes all user relations defined for a given thread.
 </summary>
	<param name="threadID">An ID of the thread.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.UserRelation.UnlinkFromThread(System.Int32,System.String)">
	<summary>
 Deletes specified user relation defined for a given thread.
 </summary>
	<param name="threadID">An ID of the thread.</param>
	<param name="email">User e-mail address.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.UserRelation.UnlinkFromThread(System.Int32,System.Int32)">
	<summary>
 Deletes specified user relation defined for a given thread.
 </summary>
	<param name="threadID">An ID of the thread.</param>
	<param name="userID">User ID.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.UserRelation.UnlinkFromCategory(System.Int32)">
	<summary>
 Deletes all user relations defined for a given category.
 </summary>
	<param name="categoryID">An ID of the category.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.UserRelation.UnlinkFromCategory(System.Int32,System.String)">
	<summary>
 Deletes specified user relation defined for a given category.
 </summary>
	<param name="categoryID">An ID of the category.</param>
	<param name="email">User e-mail address.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.UserRelation.UnlinkFromCategory(System.Int32,System.Int32)">
	<summary>
 Deletes specified user relation defined for a given category.
 </summary>
	<param name="categoryID">An ID of the category.</param>
	<param name="userID">User ID.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.UserRelation.UnlinkFromAll(System.String)">
	<summary>
 Deletes all user subscriptions by email.
 </summary>
	<param name="email">User e-mail address.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.UserRelation.Link(System.Int32,System.Int32,System.String,System.String,Dynamicweb.Modules.Forum.UserRelationType)">
	<summary>
 Establishes user relation of a given type for a given category as well as for a given thread.
 </summary>
	<param name="threadID">An ID of the thread.</param>
	<param name="categoryID">An ID of the category.</param>
	<param name="email">An e-mail address of the user.</param>
	<param name="name">The name of the user.</param>
	<param name="type">User relation type.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.UserRelation.Unlink(System.Int32,System.Int32,System.String,System.Int32)">
	<summary>
 Deletes user relation of a given type for a given category as well as for a given thread.
 </summary>
	<param name="threadID">An ID of the thread.</param>
	<param name="categoryID">An ID of the category.</param>
	<param name="email">An e-mail address of the user.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.UserRelation.GetMatchingUserRelation(System.Int32,System.Int32,System.String)">
	<summary>
 Determines whether specified user has already been signed in for given category (thread).
 </summary>
	<param name="threadID">An ID of the thread.</param>
	<param name="categoryID">An ID of the category.</param>
	<param name="email">An e-mail address of the user.</param>
	<returns>Value indicating whether specified user has already been signed in for given category (thread).</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.UserRelation.GetMatchingUserRelation(System.Int32,System.Int32,System.Int32)">
	<summary>
 Determines whether specified user has already been signed in for given category (thread).
 </summary>
	<param name="threadID">An ID of the thread.</param>
	<param name="categoryID">An ID of the category.</param>
	<param name="userID">An ID of the user.</param>
	<returns>Value indicating whether specified user has already been signed in for given category (thread).</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.UserRelation.GetUserRelationsBySql(System.String)">
	<summary>
 Retrieves a list of user relations according to a given SQL statement.
 </summary>
	<param name="sql">SQL statement to use.</param>
	<returns>A list of user relations.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.UserRelation.JoinSQL">
	<summary>
 Retrieves "JOIN" SQL statement for user information.
 </summary>
	<returns>"JOIN" SQL statement for user information.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.UserRelation.GetUserRelationsByUserID(System.Int32)">
	<summary>
 Retrieves a collection of user relations by the given user ID.
 </summary>
	<param name="id">An ID of the user.</param>
	<returns>A collection of matched user relations.</returns>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.Forum.UserRelation">
	<summary>
 Represents a user relation.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.SubscriptionHandler.RecipientInfo.Name">
	<summary>
 Gets or sets the name of the recipient.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.SubscriptionHandler.RecipientInfo.Email">
	<summary>
 Gets or sets the e-mail address of the recipient.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.SubscriptionHandler.RecipientInfo.UID">
	<summary>
 Gets or sets the user ID of the recipient.
  May containg value -1, which indicates this is not a registred user.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.SubscriptionHandler.RecipientInfo.IsValid">
	<summary>
 Gets the value indicating whether recipient information is valid.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.SubscriptionHandler.RecipientInfo.#ctor">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.SubscriptionHandler.RecipientInfo.#ctor(System.Int32)">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<param name="userID">An ID of the associated user account.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.SubscriptionHandler.RecipientInfo.#ctor(Dynamicweb.Modules.Forum.UserRelation)">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<param name="relation">A corresponding user relation to take the information from.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.SubscriptionHandler.RecipientInfo.#ctor(System.String,System.String)">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<param name="name">Recipient's name.</param>
	<param name="email">Recipient's e-mail address.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.SubscriptionHandler.RecipientInfo.Equals(System.Object)">
	<summary>
 Determines whether current object instance is equal to another one.
 </summary>
	<param name="obj">Another object instance.</param>
	<returns>Value indicating whether current object instance is equal to another one.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.SubscriptionHandler.RecipientInfo.GetHashCode">
	<summary>
 Returns object hash code.
 </summary>
	<returns>Object hash code.</returns>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.Forum.SubscriptionHandler.RecipientInfo">
	<summary>
 Represents a recipient info.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.SubscriptionHandler.OnNotify(System.String,Dynamicweb.Extensibility.NotificationArgs)">
	<summary>
 Handles the notification.
 </summary>
	<param name="notification">Notification name.</param>
	<param name="args">Notification arguments.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.SubscriptionHandler.GetRecipients(Dynamicweb.Modules.Forum.Message)">
	<summary>
 Gets a list of newsletter recipients for the corresponding message.
 </summary>
	<param name="message">A message tha has been submitted.</param>
	<returns>A list of newsletter recipients.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.SubscriptionHandler.SplitRecipients(System.Collections.Generic.IEnumerable{Dynamicweb.Modules.Forum.SubscriptionHandler.RecipientInfo},System.Int32)">
	<summary>
 Splits the given list of recipients into the groups with the given number of elements in each.
 </summary>
	<param name="recipients">A list of recipients to split into groups.</param>
	<param name="max">Group size.</param>
	<returns>A list of recipient groups with the given number of elements in each.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.SubscriptionHandler.SendNewsletter(Dynamicweb.Modules.Forum.Message,System.Collections.Generic.IEnumerable{Dynamicweb.Modules.Forum.SubscriptionHandler.RecipientInfo},Dynamicweb.Modules.Forum.Notifications.EnvironmentInfo)">
	<summary>
 Sends newsletter to the given recipients.
 </summary>
	<param name="message">Message that has been updated.</param>
	<param name="recipients">A list of recipients to send a newsletter to.</param>
	<param name="environment">Environment information.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.SubscriptionHandler.ParseSenderAddress(System.String)">
	<summary>
 Parses e-mail address information from the given string.
 </summary>
	<param name="sender">E-mail address.</param>
	<returns>E-mail address iformation.</returns>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.Forum.SubscriptionHandler">
	<summary>
 Send out newsletter about the specific forum update.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.ForumUrlProvider.GetMappings">
	<summary>
 Retrieves a list of URL mappings.
 </summary>
	<returns>A lsit of URL mappings.</returns>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.Forum.ForumUrlProvider">
	<summary>
 Represents a URL provider for Forum module.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Renderer.Properties">
	<summary>
 Gets the module properties.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Renderer.ParagraphID">
	<summary>
 Gets an ID of the module paragraph.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Renderer.PageView">
	<summary>
 Gets or sets an instance of the page view object used during the rendering.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Renderer.ThreadsPager">
	<summary>
 Gets an instance of the paging hander for treads that allows the paged views to be rendered.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Renderer.PostsPager">
	<summary>
 Gets an instance of the paging hander for posts that allows the paged views to be rendered.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Renderer.UserID">
	<summary>
 Gets or sets the ID of the current user (if logged in).
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Renderer.UserName">
	<summary>
 Gets or sets the name of the current user.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Renderer.UserEmail">
	<summary>
 Gets or sets the e-mail address of the current user.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Renderer.OrderThreadsByLastAnswer">
	<summary>
 Gets or sets value indicating whether to order threads by last answer.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Renderer.CurrentCategoryID">
	<summary>
 Gets an ID of the category that the user is currently viewing.
 </summary>
	<remarks>The value is based on the current request.</remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Renderer.#ctor(Dynamicweb.Properties,System.Int32)">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<param name="properties">Module properties.</param>
	<param name="paragraphID">Module paragraph ID.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Renderer.RenderEditMessage(Dynamicweb.Rendering.Template,Dynamicweb.Modules.Forum.Message)">
	<summary>
 Renders "Edit post" form.
 </summary>
	<param name="t">Template used for rendering.</param>
	<param name="post">Post which is being edited.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Renderer.RenderCreateMessage(Dynamicweb.Rendering.Template,Dynamicweb.Modules.Forum.Category)">
	<summary>
 Renders "Create thread" form.
 </summary>
	<param name="t">Template used for rendering.</param>
	<param name="category">Thread category.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Renderer.RenderCreateMessage(Dynamicweb.Rendering.Template,Dynamicweb.Modules.Forum.Message)">
	<summary>
 Renders "Create message" form.
 </summary>
	<param name="t">Template used for rendering.</param>
	<param name="thread">Thread to host the new message.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Renderer.RenderCreateMessage(Dynamicweb.Rendering.Template,Dynamicweb.Modules.Forum.Message,Dynamicweb.Modules.Forum.Message)">
	<summary>
 Renders "Create message" form.
 </summary>
	<param name="t">Template used for rendering.</param>
	<param name="thread">Thread to host the new message.</param>
	<param name="post">Post that the user is replying to.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Renderer.RenderForm(Dynamicweb.Rendering.Template,Dynamicweb.Modules.Forum.Message,Dynamicweb.Modules.Forum.Message,Dynamicweb.Modules.Forum.Category,System.Boolean)">
	<summary>
 Renders reply/thread form.
 </summary>
	<param name="t">Template to be used to render the form.</param>
	<param name="post">A reference to the post that the current user is replying to.</param>
	<param name="thread">A reference to the thread that the current user is in.</param>
	<param name="category">A reference to the category that the current user is replying to.</param>
	<param name="isEdited">Indicates whether specified post is being edited.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Renderer.RenderMessage(Dynamicweb.Rendering.Template,Dynamicweb.Modules.Forum.Message,System.String)">
	<summary>
 Renders a single message.
 </summary>
	<param name="t">Template used to render the message.</param>
	<param name="message">Message whose properties to render.</param>
	<param name="prefix">Tag prefix.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Renderer.RenderMessage(Dynamicweb.Rendering.Template,Dynamicweb.Modules.Forum.Message,System.String,System.Boolean)">
	<summary>
 Renders a single message.
 </summary>
	<param name="t">Template used to render the message.</param>
	<param name="message">Message whose properties to render.</param>
	<param name="prefix">Tag prefix.</param>
	<param name="renderLastReply">Indicates whether to render last reply.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Renderer.RenderCategory(Dynamicweb.Rendering.Template,Dynamicweb.Modules.Forum.Category)">
	<summary>
 Renders the category.
 </summary>
	<param name="t">Template used to render the category.</param>
	<param name="category">Category to render.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Renderer.Absolutize(System.String)">
	<summary>
 Appends /Files/ to the beginning of the given virtual path (if needed).
 </summary>
	<param name="path">Virtual path to process.</param>
	<returns>Absolute virtual path.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Renderer.RenderAuthorGroups(Dynamicweb.Rendering.Template,Dynamicweb.Modules.UserManagement.User,System.String)">
	<summary>
 Renders author groups.
 </summary>
	<param name="t">Template used to render image tags.</param>
	<param name="u">Reference to message author.</param>
	<param name="prefix">Tag prefix.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Renderer.RenderAuthorImage(Dynamicweb.Rendering.Template,Dynamicweb.Modules.UserManagement.User,System.String)">
	<summary>
 Renders an image tags.
 </summary>
	<param name="t">Template used to render image tags.</param>
	<param name="u">Reference to message author.</param>
	<param name="prefix">Tag prefix.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Renderer.RenderThread(Dynamicweb.Rendering.Template,Dynamicweb.Modules.Forum.Message)">
	<summary>
 Renders a thread.
 </summary>
	<param name="t">Template used to render a thread.</param>
	<param name="thread">Thread to render.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Renderer.RenderThread(Dynamicweb.Rendering.Template,Dynamicweb.Modules.Forum.Message,System.Boolean,System.Func{Dynamicweb.Modules.Forum.Message,System.Boolean})">
	<summary>
 Renders specified thread.
 </summary>
	<param name="t">Template which is used to render the thread.</param>
	<param name="thread">Thread to render.</param>
	<param name="canMarkAnswer">Value indicating whether user can mark the individual posts as answers as well as edit the thread itself.</param>
	<param name="canEdit">Function that determines whether user is allowed to edit individual forum posts.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Renderer.RenderThreads(Dynamicweb.Rendering.Template,Dynamicweb.Modules.Forum.Category,System.Boolean,System.Boolean)">
	<summary>
 Renders all threads from the specified category.
 </summary>
	<param name="t">Template used to render threads.</param>
	<param name="category">Category whose threads to render.</param>
	<param name="onlyUnanswered">Render only Unanswered</param>
	<param name="onlyUnsolved">Render only Unsolved</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Renderer.RenderThreads(Dynamicweb.Rendering.Template,Dynamicweb.Modules.Forum.MessageCollection)">
	<summary>
 Renders specified list of threads.
 </summary>
	<param name="t">Template used to render threads.</param>
	<param name="threads">Threads to render.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Renderer.RenderCategories(Dynamicweb.Rendering.Template)">
	<summary>
 Renders forum categories.
 </summary>
	<param name="t">Template used to render forum categories.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Renderer.RenderCategories(Dynamicweb.Rendering.Template,Dynamicweb.Modules.Forum.CategoryCollection)">
	<summary>
 Renders forum categories.
 </summary>
	<param name="t">Template used to render forum categories.</param>
	<param name="categories">Categories to render.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Renderer.RenderEditorFeatures(Dynamicweb.Rendering.Template)">
	<summary>
 Renders editor features.
 </summary>
	<param name="t">Template used to render editor features.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Renderer.RenderGlobalTags(Dynamicweb.Rendering.Template)">
	<summary>
 Renders module global tags.
 </summary>
	<param name="t">Template used to render global tags.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Renderer.GetEditorOutput(System.String)">
	<summary>
 Renders HTML editor.
 </summary>
	<param name="text">Editor value.</param>
	<returns>Editor HTML.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Renderer.InitializePager(Dynamicweb.Modules.Forum.MessageCollection,Dynamicweb.Modules.Common.PagingHandler,Dynamicweb.Rendering.Template)">
	<summary>
 Returns a frame of the collection that needs to be rendered according to paging settings. Also renders the paging controls if the template is provided.
 </summary>
	<param name="posts">Original posts collection.</param>
	<param name="t">Template used to render pager controls.</param>
	<returns>A portion of the collection that needs to be rendered.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Renderer.InitializeThreadsPager(Dynamicweb.Modules.Forum.Category,Dynamicweb.Rendering.Template,System.Boolean,System.Boolean)">
	<summary>
 Returns a frame of the collection that needs to be rendered according to paging settings. Also renders the paging controls if the template is provided.
 </summary>
	<param name="category">Target forum category.</param>
	<param name="t">Template used to render pager controls.</param>
	<param name="onlyUnanswered">Show only Unanswered.</param>
	<param name="onlyUnsolved">Show only Unsolved.</param>
	<returns>A portion of the collection that needs to be rendered.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Renderer.InitializeRepliesPager(Dynamicweb.Modules.Forum.Message,Dynamicweb.Rendering.Template)">
	<summary>
 Returns a frame of the collection that needs to be rendered according to paging settings. Also renders the paging controls if the template is provided.
 </summary>
	<param name="thread">Target forum thread.</param>
	<param name="t">Template used to render pager controls.</param>
	<returns>A portion of the collection that needs to be rendered.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Renderer.IsCategorySubscribedByUser(System.Int32,System.Int32)">
	<summary>
 Determines whether specified category is subscribed by logged in user.
 </summary>
	<param name="userID">User ID to check.</param>
	<param name="categoryID">An ID of the category.</param>
	<returns>Value indicating whether specified category is subscribed by logged in user.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Renderer.IsThreadSubscribedByUser(System.Int32,System.Int32)">
	<summary>
 Determines whether specified thread is subscribed by logged in user.
 </summary>
	<param name="userID">User ID to check.</param>
	<param name="threadID">An ID of the thread.</param>
	<returns>Value indicating whether specified thread is subscribed by logged in user.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Renderer.GetUserEmail">
	<summary>
 Gets current logged in user email
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.Forum.Renderer">
	<summary>
 Provides methods and properties for rendering forurm posts and categories.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Notifications.EnvironmentInfo.PageID">
	<summary>
 Gets an ID of the current page.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Notifications.EnvironmentInfo.ParagraphID">
	<summary>
 Gets an ID of the current paragraph.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Notifications.EnvironmentInfo.PageView">
	<summary>
 Gets the reference to the PageView object for the current request.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Notifications.EnvironmentInfo.Uri">
	<summary>
 Gets the URI information of the current resource.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Notifications.EnvironmentInfo.#ctor">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Notifications.EnvironmentInfo.GetInfo">
	<summary>
 Retrieves environment info.
 </summary>
	<returns>Environment info.</returns>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.Forum.Notifications.EnvironmentInfo">
	<summary>
 Provides information about the current environment.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Notifications.NotificationArgsBase.Environment">
	<summary>
 Gets an environment information.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Notifications.NotificationArgsBase.#ctor">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.Forum.Notifications.NotificationArgsBase">
	<summary>
 Provides methods and properties that are common for all notificaion argument types.
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.Forum.Notifications.Frontend.BeforeContent">
	<summary>
 Raises before any processing has been performed by the module.
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.Forum.Notifications.Frontend.AfterContent">
	<summary>
 Raises after all processing has been performed by the module.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Notifications.Frontend.BeforeContentArgs.ContentModule">
	<summary>
 Gets an instance of the actual content module.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Notifications.Frontend.BeforeContentArgs.StopExecution">
	<summary>
 Gets or sets value indicating whether to stop further execution of the module.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Notifications.Frontend.BeforeContentArgs.Output">
	<summary>
 Gets or sets the module output.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Notifications.Frontend.BeforeContentArgs.#ctor(Dynamicweb.Modules.Forum.Frontend)">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<param name="contentModule">An instance of the content module.</param>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.Forum.Notifications.Frontend.BeforeContentArgs">
	<summary>
 Provides information for the "BeforeContent" notification.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Notifications.Frontend.AfterContentArgs.ContentModule">
	<summary>
 Gets an instance of the actual content module.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Notifications.Frontend.AfterContentArgs.Output">
	<summary>
 Gets or sets the module output.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Notifications.Frontend.AfterContentArgs.#ctor(Dynamicweb.Modules.Forum.Frontend)">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<param name="contentModule">An instance of the content module.</param>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.Forum.Notifications.Frontend.AfterContentArgs">
	<summary>
 Provides information for the "AfterContent" notification.
 </summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.Forum.Notifications.Frontend">
	<summary>
 Provides frontend-specific notification names as well as their corresponding argument types.
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.Forum.Notifications.MessageList.BeforeRender">
	<summary>
 Raises before the category list has been rendered.
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.Forum.Notifications.MessageList.AfterRender">
	<summary>
 Raises after the category list has been rendered.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Notifications.MessageList.RenderArgs.Messages">
	<summary>
 Gets the list of target messages.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Notifications.MessageList.RenderArgs.Template">
	<summary>
 Gets the template used to render the category.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Notifications.MessageList.RenderArgs.#ctor(Dynamicweb.Modules.Forum.MessageCollection,Dynamicweb.Rendering.Template)">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<param name="messages">The list of target messages.</param>
	<param name="template">The template used to render the category.</param>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.Forum.Notifications.MessageList.RenderArgs">
	<summary>
 Provides information for "BeforeRender" and "AfterRender" notifications.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Notifications.MessageList.#ctor">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.Forum.Notifications.MessageList">
	<summary>
 Provides notification related to processing of forum message lists. This class cannot be inherited.
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.Forum.Notifications.Message.BeforeRender">
	<summary>
 Raises before the message has been rendered.
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.Forum.Notifications.Message.AfterRender">
	<summary>
 Raises after the message has been rendered.
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.Forum.Notifications.Message.Created">
	<summary>
 Raises after the new message has been created.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Notifications.Message.RenderArgs.Template">
	<summary>
 Gets the template used to render the message.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Notifications.Message.RenderArgs.Message">
	<summary>
 Gets an instance of the message.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Notifications.Message.RenderArgs.#ctor(Dynamicweb.Modules.Forum.Message,Dynamicweb.Rendering.Template)">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<param name="message">Message to be rendered.</param>
	<param name="template">Template used to render the message.</param>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.Forum.Notifications.Message.RenderArgs">
	<summary>
 Provides information for "BeforeRender" and "AfterRender" notifications.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Notifications.Message.CreatedArgs.Message">
	<summary>
 Gets an instance of the message that has been created.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Notifications.Message.CreatedArgs.#ctor(Dynamicweb.Modules.Forum.Message)">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<param name="message">An instance of the newly created message.</param>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.Forum.Notifications.Message.CreatedArgs">
	<summary>
 Provides information for the "AfterReply" notification.
 </summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.Forum.Notifications.Message">
	<summary>
 Provides message-specific notification names as well as their corresponding argument types.
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.Forum.Notifications.CategoryList.BeforeRender">
	<summary>
 Raises before the category list has been rendered.
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.Forum.Notifications.CategoryList.AfterRender">
	<summary>
 Raises after the category list has been rendered.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Notifications.CategoryList.RenderArgs.Categories">
	<summary>
 Gets the list of target categories.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Notifications.CategoryList.RenderArgs.Template">
	<summary>
 Gets the template used to render the category.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Notifications.CategoryList.RenderArgs.#ctor(Dynamicweb.Modules.Forum.CategoryCollection,Dynamicweb.Rendering.Template)">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<param name="categories">The list of target categories.</param>
	<param name="template">The template used to render the category.</param>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.Forum.Notifications.CategoryList.RenderArgs">
	<summary>
 Provides information for "BeforeRender" and "AfterRender" notifications.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Notifications.CategoryList.#ctor">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.Forum.Notifications.CategoryList">
	<summary>
 Provides notification related to processing of forum category lists. This class cannot be inherited.
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.Forum.Notifications.Category.BeforeRender">
	<summary>
 Raises before the category has been rendered.
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.Forum.Notifications.Category.AfterRender">
	<summary>
 Raises after the category has been rendered.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Notifications.Category.RenderArgs.Category">
	<summary>
 Gets an instance of the target category.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Notifications.Category.RenderArgs.Template">
	<summary>
 Gets the template used to render the category.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Notifications.Category.RenderArgs.#ctor(Dynamicweb.Modules.Forum.Category,Dynamicweb.Rendering.Template)">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<param name="category">An instance of the target category.</param>
	<param name="template">The template used to render the category.</param>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.Forum.Notifications.Category.RenderArgs">
	<summary>
 Provides information for "BeforeRender" and "AfterRender" notifications.
 </summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.Forum.Notifications.Category">
	<summary>
 Provides category-specific notification names as well as their corresponding argument types.
 </summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.Forum.Notifications">
	<summary>
 Provides notificaion names as well as their corresponding argument types.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.MessageCollection.DateSorter.Compare(Dynamicweb.Modules.Forum.Message,Dynamicweb.Modules.Forum.Message)">
	<summary>
 Compares two messages by the last reply date.
 </summary>
	<param name="x">First message.</param>
	<param name="y">Second message.</param>
	<returns>Comparison result.</returns>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.Forum.MessageCollection.DateSorter">
	<summary>
 Allows comparing two messages by the last reply date.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.MessageCollection.DateSorterWithPriority.Compare(Dynamicweb.Modules.Forum.Message,Dynamicweb.Modules.Forum.Message)">
	<summary>
 Compares two messages by the last reply date.
 </summary>
	<param name="x">First message.</param>
	<param name="y">Second message.</param>
	<returns>Comparison result.</returns>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.Forum.MessageCollection.DateSorterWithPriority">
	<summary>
 Allows comparing two messages by the last reply date.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.MessageCollection.#ctor">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.MessageCollection.#ctor(System.Collections.Generic.IEnumerable{Dynamicweb.Modules.Forum.Message})">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<param name="data">Collection data.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.MessageCollection.SortByThreadRepliedWithPriority(System.Boolean)">
	<summary>
 Sorts messages by the last reply date (descending) with sticked threads first.
 </summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.Forum.MessageCollection">
	<summary>
 Represents a collection of forum messages.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Message.Files">
	<summary>
 Gets the list of regular files associated with this message.
 </summary>
	<remarks>A list of virtual paths is returned.</remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Message.Images">
	<summary>
 Gets the list of image files associated with this message.
 </summary>
	<remarks>A list of virtual paths is returned.</remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Message.Replies">
	<summary>
 Gets or sets the list of replies to this thread.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Message.LastReply">
	<summary>
 Gets the reference to the last reply.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Message.ReplyCount">
	<summary>
 Gets the number of replies.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Message.IsThread">
	<summary>
 Gets value indicating whether message is thread.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Message.ThreadID">
	<summary>
 Gets an ID of the message thread.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Message.Category">
	<summary>
 Gets the reference to the message category.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Message.ParentID">
	<summary>
 Gets the the ID of the parent message.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Message.CategoryID">
	<summary>
 Gets the ID of the message category.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Message.Title">
	<summary>
 Gets or sets the message title.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Message.Body">
	<summary>
 Gets or sets the message body.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Message.BodyResume">
	<summary>
 Gets the short description of the message.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Message.BodyResumeExtraShort">
	<summary>
 Gets the short description of the message.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Message.Created">
	<summary>
 Gets or sets the date of message creation.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Message.Author(System.Boolean)">
	<summary>
 Gets or sets the name of the message author.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Message.AuthorEmail">
	<summary>
 Gets or sets an e-mail address of the message author.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Message.AuthorID">
	<summary>
 Gets or sets an ID of the message author (in case of registered users).
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Message.IsAnswer">
	<summary>
 Gets or sets value indicating whether message is marked as an answer.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Message.AnswerVotes">
	<summary>
 Gets or sets value indicating how many users set this message as answer.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Message.IsSticky">
	<summary>
 Gets or sets value indicating whether message should always appear on top of the list.
 </summary>
	<remarks>This property only applies for threads.</remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Message.IsActive">
	<summary>
 Gets or sets value indicating whether message is active.
 </summary>
	<remarks>This property only applies for threads.</remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Message.UserAccount">
	<summary>
 Gets the reference to the corresponding registered user.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Message.#ctor">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Message.FillRow(System.Data.DataRow)">
	<summary>
 Fills specified data row with property values of the current object.
 </summary>
	<param name="row">Data row to fill.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Message.Fill(System.String)">
	<summary>
 Fills object properties with the data retrieved according to the given SQL statement.
 </summary>
	<param name="sql">SQL statement to process.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Message.Fill(System.Data.IDataReader)">
	<summary>
 Fills object properties with data provided by specified data reader.
 </summary>
	<param name="dr">An instance of the data reader to read data from.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Message.Delete(System.Int32)">
	<summary>
 Deletes message with the specified ID.
 </summary>
	<param name="id">An ID of the message.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Message.GetResume(System.String)">
	<summary>
 Retrieves the resume for a given text.
 </summary>
	<param name="text">Text to retrieve resume for.</param>
	<returns>Text resume.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Message.LoadThreads(Dynamicweb.Modules.Forum.CategoryCollection)">
	<summary>
 Loads threads for a given list of categories.
 </summary>
	<param name="categories">Categories whose threads to load.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Message.DeleteMessagesByParentID(System.Int32)">
	<summary>
 Deletes all messages attached to a given parent.
 </summary>
	<param name="parentID">An ID of the parent message.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Message.DeleteMessagesByCategoryID(System.Int32)">
	<summary>
 Deletes all messages attached to a given category.
 </summary>
	<param name="categoryID">An ID of the category.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Message.DeleteRemovedFiles(System.String@)">
	<summary>
 Deletes already uploaded files removed from the forum post's files list.
 </summary>
	<param name="folderName">Folder to look files for.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Message.SaveFiles(Dynamicweb.Modules.Forum.Message)">
	<summary>
 Saves the files submitted with the current POST request under the given forum post.
 </summary>
	<param name="message">Forum post to associated uploaded files with.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Message.DeleteFiles(System.String)">
	<summary>
 Deletes all files from the given folder as well as the folder itself.
 </summary>
	<param name="path">Folder path.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Message.DeleteFiles(System.String,System.Boolean)">
	<summary>
 Deletes all files from the given folder as well as the folder itself.
 </summary>
	<param name="path">Folder path.</param>
	<param name="isPhysical">Indicates whether physical path is provided.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Message.LoadReplies(Dynamicweb.Modules.Forum.MessageCollection)">
	<summary>
 Loads replies for a given list of threads.
 </summary>
	<param name="threads">A list of threads to load replies for.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Message.GetThreadsByCategory(Dynamicweb.Modules.Forum.Category)">
	<summary>
 Returns a list of threads from the given category.
 </summary>
	<param name="category">Target category.</param>
	<returns>A list of threads from the given category.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Message.GetThreadsByCategory(Dynamicweb.Modules.Forum.Category,System.Boolean)">
	<summary>
 Returns a list of threads from the given category.
 </summary>
	<param name="category">Target category.</param>
	<param name="orderByLastAnswer">Indicates sort order by last answer dates.</param>
	<returns>A list of threads from the given category.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Message.GetThreadsByCategory(Dynamicweb.Modules.Forum.Category,System.Boolean,System.Int32,System.Int32)">
	<summary>
 Returns a list of threads from the given category.
 </summary>
	<param name="category">Target category.</param>
	<param name="orderByLastAnswer">Indicates sort order by last answer dates.</param>
	<param name="start">Zero-based index of of the first thread in a resulting sequence.</param>
	<param name="take">Number of threads to retrieve.</param>
	<returns>A list of threads from the given category.</returns>
	<remarks>This overload is not supported on solutions running on MS Access.</remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Message.GetThreadsByCategories(Dynamicweb.Modules.Forum.CategoryCollection)">
	<summary>
 Returns a list of threads from the given categories.
 </summary>
	<param name="categories">Target categories.</param>
	<returns>A list of threads from the given categories.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Message.GetThreadsByCategories(Dynamicweb.Modules.Forum.CategoryCollection,System.Boolean)">
	<summary>
 Returns a list of threads from the given categories.
 </summary>
	<param name="categories">Target categories.</param>
	<param name="orderByLastAnswer">Indicates sort order by last answer dates.</param>
	<returns>A list of threads from the given categories.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Message.GetThreadsByCategories(Dynamicweb.Modules.Forum.CategoryCollection,System.Boolean,System.Int32,System.Int32)">
	<summary>
 Returns a list of threads from the given categories.
 </summary>
	<param name="categories">Target categories.</param>
	<param name="orderByLastAnswer">Indicates sort order by last answer dates.</param>
	<param name="start">Zero-based index of of the first thread in a resulting sequence.</param>
	<param name="take">Number of threads to retrieve.</param>
	<returns>A list of threads from the given categories.</returns>
	<remarks>This overload is not supported on solutions running on MS Access.</remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Message.GetRepliesByThreads(Dynamicweb.Modules.Forum.MessageCollection)">
	<summary>
 Returns a list of replies from the given threads.
 </summary>
	<param name="threads">Target threads.</param>
	<returns>A list of replies from the given threads.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Message.GetRepliesByThreads(Dynamicweb.Modules.Forum.MessageCollection,System.Int32,System.Int32)">
	<summary>
 Returns a list of replies from the given threads.
 </summary>
	<param name="threads">Target threads.</param>
	<returns>A list of replies from the given threads.</returns>
	<param name="start">Zero-based index of of the first thread in a resulting sequence.</param>
	<param name="take">Number of threads to retrieve.</param>
	<remarks>This overload is not supported on solutions running on MS Access.</remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Message.GetRepliesByThread(Dynamicweb.Modules.Forum.Message)">
	<summary>
 Returns a list of replies from the given thread.
 </summary>
	<param name="thread">Target thread.</param>
	<returns>A list of replies from the given thread.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Message.GetRepliesByThread(Dynamicweb.Modules.Forum.Message,System.Int32,System.Int32)">
	<summary>
 Returns a list of replies from the given thread.
 </summary>
	<param name="thread">Target thread.</param>
	<param name="start">Zero-based index of of the first thread in a resulting sequence.</param>
	<param name="take">Number of threads to retrieve.</param>
	<returns>A list of replies from the given thread.</returns>
	<remarks>This overload is not supported on solutions running on MS Access.</remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Message.GetMessages">
	<summary>
 Retrieves a list of all forum messages.
 </summary>
	<returns>A list of all forum messages.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Message.GetThreads(System.Boolean)">
	<summary>
 Retrieves a collection of all forum threads.
 </summary>
	<param name="loadReplies">Indicates whether to automatically load replies for each thread.</param>
	<returns>A list of all forum threads.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Message.GetThreadsByIDs(System.Collections.Generic.List{System.Int32})">
	<summary>
 Retrieves a list of threads by their IDs.
 </summary>
	<param name="ids">A list of thread IDs.</param>
	<returns>A list of threads by the given list of thread IDs.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Message.CountSQL(System.String)">
	<summary>
 Retrieves "Message count" SQL statement.
 </summary>
	<param name="expression">Original SQL expression.</param>
	<returns>"Message count" SQL statement.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Message.JoinSQL">
	<summary>
 Retrieves "JOIN" SQL statement for user information.
 </summary>
	<returns>"JOIN" SQL statement for user information.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Message.GetMessagesBySql(System.String,System.Boolean)">
	<summary>
 Retrieves a collection of messages by a given SQL statement.
 </summary>
	<param name="sql">SQL statement.</param>
	<param name="isThread">Value indicating whetherto load message replies.</param>
	<returns>A collection of messages.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Message.GetMessageByID(System.Int32)">
	<summary>
 Retrieves a message by its ID.
 </summary>
	<param name="id">An ID of the message.</param>
	<returns>Message.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Message.GetThreadMessageByID(System.Int32)">
	<summary>
 Retrieves a thread message (ParentID=0) by a message ID.
 </summary>
	<param name="id">An ID of the message.</param>
	<returns>If the passed message ID is an answer to a thread, the parent message, the thread it self, is returned. If the passed message ID is a thread, the message is returned.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Message.ClearAnswers(System.Int32)">
	<summary>
 Clears all answers for the given thread.
 </summary>
	<param name="parentID">Thread ID.</param>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.Forum.Message">
	<summary>
 Represents a single forum message (either a thread or a post).
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Import.ImportResult.Messages">
	<summary>
 Gets a list of all messages gathered during the import process.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Import.ImportResult.Success">
	<summary>
 Gets value indicating whether import succeeded.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Import.ImportResult.Errors">
	<summary>
 Gets the list of import errors.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Import.ImportResult.Warnings">
	<summary>
 Gets the list of import warnings.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Import.ImportResult.#ctor(System.Boolean)">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<param name="success">Value indicating whether import succeeded.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Import.ImportResult.#ctor(System.Collections.Generic.IEnumerable{Dynamicweb.Modules.Forum.Import.ImportMessage})">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<param name="messages">A list of all messages gathered during the import process.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Import.ImportResult.#ctor(System.Collections.Generic.IEnumerable{Dynamicweb.Modules.Forum.Import.ImportMessage},System.Boolean)">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<param name="messages">A list of all messages gathered during the import process.</param>
	<param name="success">Value indicating whether import succeeded.</param>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.Forum.Import.ImportResult">
	<summary>
 Represents an import result.
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.Forum.Import.ImportProcessType.Clean">
	<summary>
 Deletes any existing data before importing anything.
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.Forum.Import.ImportProcessType.Append">
	<summary>
 Appends new data without performing any synchronization checks.
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.Forum.Import.ImportProcessType.Synchronize">
	<summary>
 Synchronizes existing data with the new one.
 </summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.Forum.Import.ImportProcessType">
	<summary>
 Represents a type of import.
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.Forum.Import.ImportProcessRecoveryMode.None">
	<summary>
 Import process is not recoverable and will be stopped if there are any errors occured.
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.Forum.Import.ImportProcessRecoveryMode.IgnoreErrors">
	<summary>
 Ignores any errors and exceptions that can occurs during the import procedure.
 </summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.Forum.Import.ImportProcessRecoveryMode">
	<summary>
 Represents a recovery mode.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Import.ImportProcess.ThreadImportResult.ThreadMappings">
	<summary>
 Gets the dictionary containing thread mappings ("original ID -&gt; new ID").
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Import.ImportProcess.ThreadImportResult.ThreadToCategoryMappings">
	<summary>
 Gets the dictionary containing "thread to category" mappings ("thread ID -&gt; category ID").
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Import.ImportProcess.ThreadImportResult.#ctor(System.Collections.Generic.IDictionary{System.Int32,System.Int32},System.Collections.Generic.IDictionary{System.Int32,System.Int32})">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<param name="threadMappings">the dictionary containing thread mappings ("original ID -&gt; new ID").</param>
	<param name="threadToCategoryMappings">The dictionary containing "thread to category" mappings ("thread ID -&gt; category ID").</param>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.Forum.Import.ImportProcess.ThreadImportResult">
	<summary>
 Represents a thread import result.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Import.ImportProcess.Categories">
	<summary>
 Gets or sets the list of category IDs that should be imported.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Import.ImportProcess.ImportType">
	<summary>
 Gets or sets the type of the import.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Import.ImportProcess.RecoveryMode">
	<summary>
 Gets or sets the recovery mode.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Import.ImportProcess.#ctor">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Import.ImportProcess.Execute">
	<summary>
 Executes the import.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Import.ImportProcess.Clean">
	<summary>
 Cleans the database.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Import.ImportProcess.ImportCategories">
	<summary>
 Imports categories and returns the "original ID -&gt; new ID" mappings for each imported category.
 </summary>
	<returns>The "original ID -&gt; new ID" mappings for each imported category.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Import.ImportProcess.ImportThreads(System.Collections.Generic.IDictionary{System.Int32,System.Int32})">
	<summary>
 Imports threads and returns the "original ID -&gt; new ID" mappings for each imported thread.
 </summary>
	<param name="categoryMappings">A dictionary containing category mappings ("original ID -&gt; new ID").</param>
	<returns>Import result.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Import.ImportProcess.ImportPosts(System.Collections.Generic.IDictionary{System.Int32,System.Int32},System.Collections.Generic.IDictionary{System.Int32,System.Int32})">
	<summary>
 Imports posts and returns the "original ID -&gt; new ID" mappings for each imported post.
 </summary>
	<param name="threadMappings">A dictionary containing thread mappings ("original ID -&gt; new ID").</param>
	<param name="threadToCategoryMappings">A dictionary containing "thread to category" mappings ("thread ID -&gt; category ID").</param>
	<returns>The "original ID -&gt; new ID" mappings for each imported post.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Import.ImportProcess.ImportModerators(System.Collections.Generic.IDictionary{System.Int32,System.Int32})">
	<summary>
 Imports moderators.
 </summary>
	<param name="categoryMappings">A dictionary containing category mappings ("original ID -&gt; new ID").</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Import.ImportProcess.ImportSubscribers(System.Collections.Generic.IDictionary{System.Int32,System.Int32},System.Collections.Generic.IDictionary{System.Int32,System.Int32})">
	<summary>
 Imports subscibers.
 </summary>
	<param name="categoryMappings">A dictionary containing category mappings ("original ID -&gt; new ID").</param>
	<param name="threadMappings">A dictionary containing thread mappings ("original ID -&gt; new ID").</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Import.ImportProcess.ImportFiles(System.Collections.Generic.IDictionary{System.Int32,System.Int32},System.Collections.Generic.IDictionary{System.Int32,System.Int32})">
	<summary>
 Imports files.
 </summary>
	<param name="threadMappings">&gt;A dictionary containing thread mappings ("original ID -&gt; new ID").</param>
	<param name="postMappings">&gt;A dictionary containing post mappings ("original ID -&gt; new ID").</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Import.ImportProcess.MapPath(System.String)">
	<summary>
 Maps virtual path to the physical equivalent.
 </summary>
	<param name="path">Virtual path to map.</param>
	<returns>Physical equivalent of the virtual path.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Import.ImportProcess.MapPath(System.String,System.Object[])">
	<summary>
 Maps virtual path to the physical equivalent.
 </summary>
	<param name="format">Path format.</param>
	<param name="args">Path arguments.</param>
	<returns>Physical equivalent of the virtual path.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Import.ImportProcess.CopyFile(System.String,System.String)">
	<summary>
 Copies file from one location into another one. If the target file exists it will be overwritten.
 </summary>
	<param name="source">Source file location.</param>
	<param name="target">Target file location.</param>
	<returns>Value indicating whether file has been successfully copied.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Import.ImportProcess.ExecuteWith(Dynamicweb.Modules.Forum.Import.ImportProcessType,Dynamicweb.Modules.Forum.Import.ImportProcessRecoveryMode)">
	<summary>
 Creates an executes new import job with the given parameters.
 </summary>
	<param name="importType">Import type.</param>
	<param name="recoveryMode">Recovery mode.</param>
	<returns>Import process result.</returns>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.Forum.Import.ImportProcess">
	<summary>
 Allows importing content from the Forum v2 into the module's database.
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.Forum.Import.ImportMessageType.Information">
	<summary>
 Information message.
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.Forum.Import.ImportMessageType.Warning">
	<summary>
 Warning message.
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.Forum.Import.ImportMessageType.Error">
	<summary>
 Error message.
 </summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.Forum.Import.ImportMessageType">
	<summary>
 Represents an import message.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Import.ImportMessage.MessageType">
	<summary>
 Gets the message type.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Import.ImportMessage.StatusCode">
	<summary>
 Gets the status code of the message.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Import.ImportMessage.ObjectName">
	<summary>
 Gets the name of the corresponding object.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Import.ImportMessage.#ctor(Dynamicweb.Modules.Forum.Import.ImportMessageType,System.Int32,System.String)">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<param name="messageType">Message type.</param>
	<param name="statusCode">Status code.</param>
	<param name="objectName">Object name.</param>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.Forum.Import.ImportMessage">
	<summary>
 Represents a single import message.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Frontend.Renderer">
	<summary>
 Gets the renderer object.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Frontend.GetContent">
	<summary>
 Retrieves module ocntent.
 </summary>
	<returns>Module content.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Frontend.OnBeforeContent(Dynamicweb.Modules.Forum.Notifications.Frontend.BeforeContentArgs)">
	<summary>
 Sends "BeforeContent" notification.
 </summary>
	<param name="args">Notification arguments.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Frontend.OnAfterContent(Dynamicweb.Modules.Forum.Notifications.Frontend.AfterContentArgs)">
	<summary>
 Sends "AfterContent" notification.
 </summary>
	<param name="args">Notification arguments.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Frontend.ToggleStickyState(System.Int32,System.Int32)">
	<summary>
 Toggles "sticky" state of the specified thread.
 </summary>
	<param name="threadID">An ID of the thread.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Frontend.ToggleActiveState(System.Int32,System.Int32)">
	<summary>
 Toggles "active" state of the specified thread.
 </summary>
	<param name="threadID">An ID of the thread.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Frontend.ChangeSubscription(System.String,System.Int32,System.Int32,System.Boolean,System.Boolean,System.String)">
	<summary>
 Subscribes (or unsubscribes) specified user to notifications made within the specified category/thread.
 </summary>
	<param name="email">E-mail address of the user.</param>
	<param name="threadID">An ID of the target thread. The value can be empty ID if categoryID is specified.</param>
	<param name="categoryID">An ID of the target category. The value can be empty ID if threadID is specified.</param>
	<param name="subscribed">Indicates whether user either subscribing or unsubscribing.</param>
	<param name="autoRedirect">Indicates that the auto-redirection should be performed if the redirectTo parameter is left blank.</param>
	<param name="redirectToList">Indicates that redirection to category list should be performed if value is 'categories' and redirect to thread list if value is 'threads', default value is empty.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Frontend.CreatePost(System.Int32)">
	<summary>
 Executes "Create" action.
 </summary>
	<param name="categoryID">An ID of the category in which the new thread should be created.</param>
	<returns>An output of the action.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Frontend.CreatePost(System.Int32,System.Int32)">
	<summary>
 Performs "Create" action.
 </summary>
	<param name="categoryID">And ID of the category.</param>
	<param name="threadID">An ID of the thread. Can be left blank if creating new thread instead of replying to existing one.</param>
	<returns>Output of the action.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Frontend.CreatePost(System.Int32,System.Int32,System.Int32,System.Boolean)">
	<summary>
 Performs "Create" action.
 </summary>
	<param name="categoryID">And ID of the category.</param>
	<param name="threadID">An ID of the thread. Can be left blank if creating new thread instead of replying to existing one.</param>
	<param name="replyID">An ID of the post that the user is replying to. Can be left blank if new post must be created.</param>
	<param name="isInline">Value indicating whether form is placed among the other posts.</param>
	<returns>Output of the action.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Frontend.EditPost(System.Int32)">
	<summary>
 Executes "Edit thread" or "Edit post" action.
 </summary>
	<param name="postID">An ID of either a thread or post to be edited.</param>
	<returns>Output of the action.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Frontend.EditPost(System.Int32,System.Boolean)">
	<summary>
 Executes "Edit thread" or "Edit post" action.
 </summary>
	<param name="postID">An ID of either a thread or post to be edited.</param>
	<returns>Output of the action.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Frontend.DeletePost(System.Int32)">
	<summary>
 Deletes specified post.
 </summary>
	<param name="postID">An ID of the post.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Frontend.SavePostFromRequest(System.Boolean)">
	<summary>
 Saves the post according to data came from the request.
 </summary>
	<param name="isNew">Indicates whether to treat the post either as new one or as existing one.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Frontend.MarkPost(System.Int32,System.Int32,System.Boolean)">
	<summary>
 Changes the "Is answer" flag of the specified post.
 </summary>
	<param name="postID">An ID of the post.</param>
	<param name="threadID">An ID of the corresponding thread.</param>
	<param name="isAnswer">Indicating whether post is an answer.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Frontend.GetSelectedCategories">
	<summary>
 Retrieves a collection of categories selected on a paragraph settings.
 </summary>
	<returns>A collection of categories selected on a paragraph settings.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Frontend.ListCategories">
	<summary>
 Executes "List categories" action.
 </summary>
	<returns>An output of the action.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Frontend.ListThreads(Dynamicweb.Modules.Forum.CategoryCollection)">
	<summary>
 Executes "List threads" action.
 </summary>
	<param name="categories">Categories whose threads to include into the output.</param>
	<returns>An output of the action.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Frontend.ShowUnsolved(System.Int32)">
	<summary>
 Show Only Unsolved Threads
 </summary>
	<param name="categoryID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Frontend.ShowUnanswered(System.Int32)">
	<summary>
 Show only Unanswered threads
 </summary>
	<param name="categoryID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Frontend.ListThreads(System.Int32)">
	<summary>
 Executes "List threads" action.
 </summary>
	<param name="categoryID">An ID of the category.</param>
	<returns>An output of the action.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Frontend.ListThreads(Dynamicweb.Modules.Forum.Category,System.Boolean,System.Boolean)">
	<summary>
 Executes "List threads" action.
 </summary>
	<param name="category">Thread category.</param>
	<returns>An output of the action.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Frontend.ShowThread(System.Int32)">
	<summary>
 Executes "Show thread" action.
 </summary>
	<param name="threadID">An ID of the thread.</param>
	<returns>An output of the action.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Frontend.ShowThread(Dynamicweb.Modules.Forum.Message)">
	<summary>
 Executes "Show thread" action.
 </summary>
	<param name="thread">Thread to show.</param>
	<returns>An output of the action.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Frontend.IsThreadCreator(System.Int32,Dynamicweb.Modules.Forum.Message)">
	<summary>
 Determines whether specified user is a creator of the specified thread.
 </summary>
	<param name="userID">User ID to check.</param>
	<param name="thread">Thread to check.</param>
	<returns>Value indicating whether specified user is a creator of the specified thread.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Frontend.IsTopicCreator(System.Int32,Dynamicweb.Modules.Forum.Message)">
	<summary>
 Determines whether specified user is a creator of the specified topic.
 </summary>
	<param name="userID">User ID to check.</param>
	<param name="topic">Topic to check.</param>
	<returns>Value indicating whether specified user is a creator of the specified topic.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Frontend.IsLoggedIn(System.Int32)">
	<summary>
 Determines whether specified user is currently logged in.
 </summary>
	<param name="userID">User ID to check.</param>
	<returns>Value indicating whether specified user is currently logged in.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Frontend.CanEdit(Dynamicweb.Modules.Forum.Message)">
	<summary>
 Determines whether current user is allowed to edit specified post (thread).
 </summary>
	<param name="post">A reference to the post (thread).</param>
	<returns>Value indicating whether current user is allowed to edit specified post (thread).</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Frontend.CanEdit(System.Int32)">
	<summary>
 Determines whether current user is allowed to edit specified post (thread).
 </summary>
	<param name="postID">An ID of the post (thread).</param>
	<returns>Value indicating whether current user is allowed to edit specified post (thread).</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Frontend.CanDelete(Dynamicweb.Modules.Forum.Message)">
	<summary>
 Determines whether current user is allowed to delete specified post (thread).
 </summary>
	<param name="post">A reference to the post (thread).</param>
	<returns>Value indicating whether current user is allowed to delete specified post (thread).</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Frontend.CanDelete(System.Int32)">
	<summary>
 Determines whether current user is allowed to delete specified post (thread).
 </summary>
	<param name="postID">An ID of the post (thread).</param>
	<returns>Value indicating whether current user is allowed to delete specified post (thread).</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Frontend.RedirectToMain">
	<summary>
 Redirects user to the main page of the module.
 </summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.Forum.Frontend">
	<summary>
 Represents a frontend of the BasicForum module.
 </summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.Forum.CategoryModeratorMappingCollection">
	<summary>
 Represents a collection of catgory moderator mappings.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.CategoryModeratorMapping.RelationID">
	<summary>
 Gets or sets an ID of the associated user relation.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.CategoryModeratorMapping.UserID">
	<summary>
 Gets or sets an ID of the user.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.CategoryModeratorMapping.UserAccount">
	<summary>
 Gets the corresponding user account information.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.CategoryModeratorMapping.CategoryID">
	<summary>
 Gets or sets an ID of the category.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.CategoryModeratorMapping.CachedMappings">
	<summary>
 Gets the list of all mappings distributed across their category IDs. Mappings are cached for the current request.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.CategoryModeratorMapping.#ctor">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.CategoryModeratorMapping.#ctor(System.Int32,System.Int32)">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<param name="userID">An ID of the user.</param>
	<param name="categoryID">An ID of the category.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.CategoryModeratorMapping.#ctor(Dynamicweb.Modules.Forum.UserRelation)">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<param name="relation">Associated user relation.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.CategoryModeratorMapping.Save">
	<summary>
 Saves the mapping.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.CategoryModeratorMapping.Delete">
	<summary>
 Deletes the mapping.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.CategoryModeratorMapping.AddMapping(System.Int32,System.Int32)">
	<summary>
 Adds new moderator mapping.
 </summary>
	<param name="userID">An ID of the user.</param>
	<param name="categoryID">An ID of the category.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.CategoryModeratorMapping.GetMappingsByCategory(System.Int32)">
	<summary>
 Gets the list of mappings for the specified category.
 </summary>
	<param name="categoryID">An ID of the category.</param>
	<returns>A list of mappings for the specified category.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.CategoryModeratorMapping.GetMappingsByUser(System.Int32)">
	<summary>
 Gets the list of mappings for the specified user.
 </summary>
	<param name="userID">An ID of the user.</param>
	<returns>A list of mappings for the specified user.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.CategoryModeratorMapping.IsModerator(System.Int32,System.Int32)">
	<summary>
 Determines whether specified user is moderator of the specified category.
 </summary>
	<param name="userID">An ID of the user.</param>
	<param name="categoryID">An ID of the category.</param>
	<returns>Value whether specified user is moderator of the specified category.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.CategoryModeratorMapping.InvalidateCache">
	<summary>
 Clears the cache.
 </summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.Forum.CategoryModeratorMapping">
	<summary>
 Represents a category moderator mapping.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.CategoryCollection.#ctor">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.CategoryCollection.#ctor(System.Collections.Generic.IEnumerable{Dynamicweb.Modules.Forum.Category})">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<param name="data">Collection data.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.CategoryCollection.SortByName">
	<summary>
 Sorts categories by name.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.CategoryCollection.SortByReplyCount(System.String)">
	<summary>
 Sorts categories by the number of replies (descending by default).
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.CategoryCollection.SortByThreadCount(System.String)">
	<summary>
 Sorts categories by number of threads (descending by default).
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.CategoryCollection.SortByCreatedDate">
	<summary>
 Sorts categories by a creation date (ascending).
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.CategoryCollection.SortByActiveCategory(System.String)">
	<summary>
 Sorts categories by a creation date (ascending).
 </summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.Forum.CategoryCollection">
	<summary>
 Represents a collection of forum categories.
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.Forum.Category.SortFields.Name">
	<summary>
 Sorted by Name field.
 </summary>
</member><member name="F:Dynamicweb.Modules.Forum.Category.SortFields.Active">
	<summary>
 Sorted by Active field.
 </summary>
</member><member name="F:Dynamicweb.Modules.Forum.Category.SortFields.Threads">
	<summary>
 Sorted by Threads field.
 </summary>
</member><member name="F:Dynamicweb.Modules.Forum.Category.SortFields.Replies">
	<summary>
 Sorted by Replies field.
 </summary>
</member><member name="T:Dynamicweb.Modules.Forum.Category.SortFields">
	<summary>
 Stores a sort field order.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Category.AreaID">
	<summary>
 Gets or sets an ID of the area that this category belongs to.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Category.LastReply">
	<summary>
 Gets a reference to a last reply in this category.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Category.LastThread">
	<summary>
 Gets a reference to the last thread in this category.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Category.Moderators">
	<summary>
 Gets the list of category moderators.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Category.LastThreadID">
	<summary>
 Gets an ID of the last thread in this category.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Category.LastActiveThread">
	<summary>
 Gets a reference to the last active thread in this category.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Category.LastActiveThreadID">
	<summary>
 Gets an ID of the last active thread in this category.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Category.Name">
	<summary>
 Gets or sets category name.
 </summary>
	<value></value>
</member><member name="P:Dynamicweb.Modules.Forum.Category.Description">
	<summary>
 Gets or sets category description.
 </summary>
	<value></value>
</member><member name="P:Dynamicweb.Modules.Forum.Category.IsActive">
	<summary>
 Gets or sets value indicating whether category is active.
 </summary>
	<value></value>
</member><member name="P:Dynamicweb.Modules.Forum.Category.ReplyCount">
	<summary>
 Gets the number of replies belonging to this category.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Category.ThreadCount">
	<summary>
 Gets the number of threads belonging to this category.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Category.ThreadsWithNoReplies">
	<summary>
 Get the thread without replies
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Category.ThreadsUnsolved">
	<summary>
 Get the unsolved thread
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Category.Threads">
	<summary>
 Gets the list of threads belonging to this category.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Category.CachedCategories">
	<summary>
 Gets the list of all categories mapped to their IDs. Categories are cached for the current request.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forum.Category.CreatedDate">
	<summary>
 Gets or sets date and time when this category was created 
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Category.#ctor">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Category.FillRow(System.Data.DataRow)">
	<summary>
 Fills specified data row with property values of the current object.
 </summary>
	<param name="row">Data row to fill.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Category.Fill(System.String)">
	<summary>
 Fills object properties with the data retrieved according to the given SQL statement.
 </summary>
	<param name="sql">SQL statement to process.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Category.Save">
	<summary>
 Saves the category.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Category.Delete(System.Int32)">
	<summary>
 Deletes specified category.
 </summary>
	<param name="id">An ID of the category.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Category.Fill(System.Data.IDataReader)">
	<summary>
 Fills object properties with data provided by specified data reader.
 </summary>
	<param name="dr">An instance of the data reader to read data from.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Category.GetCategoryByID(System.Int32)">
	<summary>
 Retrieves category by its ID.
 </summary>
	<param name="id">An ID of the category.</param>
	<returns>Category.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Category.GetCategoriesByIDs(System.String)">
	<summary>
 Retreives a list of categories by a comma-separated list of their IDs.
 </summary>
	<param name="ids">A comma-separated list of category IDs.</param>
	<returns>A list of categories.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Category.GetCategoriesByIDs(System.Collections.Generic.IEnumerable{System.Int32})">
	<summary>
 Retreives a list of categories by their IDs.
 </summary>
	<param name="ids">A list of category IDs.</param>
	<returns>A list of categories.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Category.GetCategories">
	<summary>
 Retrieves a list of all categories.
 </summary>
	<returns>A list of all categories.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Category.GetActiveCategories">
	<summary>
 Retrieves a list of active categories.
 </summary>
	<returns>A list of active categories.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Category.GetPagedCategoryList(Dynamicweb.Modules.Forum.Category.SortFields,Dynamicweb.Modules.Common.Lists.SortDirection,System.String,System.Int32,System.Int32)">
	<summary>
 Gets the forum category list.
 </summary>
	<param name="sort">The sorting field.</param>
	<param name="direction">The sorting direction.</param>
	<param name="search">The searching filter.</param>
	<param name="startItem">The start item.</param>
	<param name="endItem">The end item.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.Forum.Category.GetRowCount(System.String)">
	<summary>
 Gets the amount of news categories by searching filter.
 </summary>
	<param name="search">The searching filter.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.Forum.Category.CountSQL">
	<summary>
 Retrieves "COUNT" SQL statement.
 </summary>
	<returns>"COUNT" SQL statement.</returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Forum.Category.InvalidateCache">
	<summary>
 Clears the cache.
 </summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.Forum.Category">
	<summary>
 Represents a forum category.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Forms.Form.Fields">
	<summary>
 Gets the fields for this form.
 </summary>
	<value>
 The fields for this form in a <see cref="T:Dynamicweb.Modules.Forms.FieldCollection"></see>.
 </value>
</member><member name="M:Dynamicweb.Modules.Forms.Form.SubmitCount">
	<summary>
 Gets the number of sumbits by this form.
 </summary>
</member><member name="M:Dynamicweb.Modules.Forms.Form.SubmitCount(System.Int32)">
	<summary>
 Gets the number of sumbits by this form.
 </summary>
</member><member name="P:Dynamicweb.Modules.Forms.Form.LastSubmitDate">
	<summary>
 Gets the last date this form was submitted.
 </summary>
	<value>The last submit date.</value>
</member><member name="P:Dynamicweb.Modules.Forms.Form.Name">
	<summary>
 Gets or sets the name of the form.
 </summary>
	<value>
 The name.
 </value>
</member><member name="T:Dynamicweb.Modules.Forms.Form">
	<summary>
 Represents a form instance with fields, field options etc.
 </summary>
</member><member name="P:Dynamicweb.Modules.Forms.Field.IsList">
	<summary>
 Gets a value indicating whether this instance is list and can have options.
 </summary>
	<value><c>true</c> if this instance is list; otherwise, <c>false</c>.</value>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailResendProvider.CreateResendEmail(Dynamicweb.Modules.EmailMarketing.Email)">
	<summary>
 Returns a new Email object that is the one we redirect the user to
 </summary>
	<param name="originalEmail"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.EmailMarketing.EmailResendProvider">
	<summary>
 Represent base class for recipient provider
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType.Original">
	<summary>
 Original
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType.Variation">
	<summary>
 Variant
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType.Both">
	<summary>
 Both (Original and Variant)
 </summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType">
	<summary>
 Email type for split test
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatisticsType.NotOpened">
	<summary>
 Not opened emails.
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatisticsType.Opened">
	<summary>
 Opened emails.
 </summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatisticsType">
	<summary>
 Email statistics type
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Statistics.RecipientMarker.UserId">
	<summary>
 UserId
 </summary>
	<value></value>
	<returns>String</returns>
	<remarks>Recipient ID</remarks>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Statistics.RecipientMarker.Name">
	<summary>
 Recipient name
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Statistics.RecipientMarker.Email">
	<summary>
 Recipient email
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Statistics.RecipientMarker.Country">
	<summary>
 Recipient country
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Statistics.RecipientMarker.Longitude">
	<summary>
 Recipient longitude
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Statistics.RecipientMarker.Latitude">
	<summary>
 Recipient latitude
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.EmailMarketing.Statistics.RecipientMarker">
	<summary>
 Recipient marker
 </summary>
	<remarks>Class to store recipient on map</remarks>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.#ctor(Dynamicweb.Modules.EmailMarketing.Email)">
	<summary>
 Initializes a new instance of the <see cref="T:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics"/> class.
 </summary>
	<param name="em">The email instance</param>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.IsEmailScheduled(System.Int32,System.String)">
	<summary>
 Determines whether [is email scheduled] [the specified _newsletter ID].
 </summary>
	<param name="emailID">The _newsletter ID.</param>
	<param name="emailName">Name of the _newsletter.</param>
	<returns><c>true</c> if [is email scheduled] [the specified _newsletter ID]; otherwise, <c>false</c>.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.CalculateProbability(System.Int32,System.Int32,System.Int32,System.Int32)">
	<summary>
 Calculates the probability.
 </summary>
	<param name="originalConversionCountTotal">The original conversion count total.</param>
	<param name="variantConversionCountTotal">The variant conversion count total.</param>
	<param name="originalSendedTotal">The original sent total.</param>
	<param name="variantSendedTotal">The variant sent total.</param>
	<returns>System.Double.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.NormalP(System.Double)">
	<summary>
 Normals the P.
 </summary>
	<param name="x">The x.</param>
	<returns>System.Double.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetRecipientsStatData(System.Int32,System.String)">
	<summary>
 Gets the recipients statistic data.
 </summary>
	<param name="maxCount">The max rows count.</param>
	<param name="defaultSort">The default sorting columns name.</param>
	<returns>DataTable.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetUsersStatData(System.Collections.Generic.IEnumerable{System.String})">
	<summary>
 Gets the users statistic data.
 </summary>
	<param name="rcpKeys">The recipient keys collection.</param>
	<returns>DataTable.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetOpened(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType)">
	<summary>
 Gets the opened.
 </summary>
	<param name="usevariant">The usevariant.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetOpened(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType,System.Int32)">
	<summary>
 Gets the opened.
 </summary>
	<param name="usevariant">The usevariant.</param>
	<param name="recipientId">The recipient id.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetOpened(System.Int32)">
	<summary>
 Gets the opened.
 </summary>
	<param name="recipientId">The recipient id.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetOpened(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType,System.DateTime)">
	<summary>
 Gets the opened.
 </summary>
	<param name="usevariant">The usevariant.</param>
	<param name="openDate">The open date.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetOpened(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType,System.Int32,System.Nullable{System.DateTime})">
	<summary>
 Gets the opened.
 </summary>
	<param name="usevariant">The usevariant.</param>
	<param name="recipientId">The recipient id.</param>
	<param name="openDate">The open date.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetUniqueOpened(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType)">
	<summary>
 Gets the unique opened.
 </summary>
	<param name="usevariant">The usevariant.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetOpenedMobile(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType)">
	<summary>
 Gets the opened mobile.
 </summary>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetUniqueOpenedMobile(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType)">
	<summary>
 Gets the unique opened mobile.
 </summary>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetOpenedTablet(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType)">
	<summary>
 Gets the opened tablet.
 </summary>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetUniqueOpenedTablet(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType)">
	<summary>
 Gets the unique opened tablet.
 </summary>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetOpenedByBrowsers">
	<summary>
 Gets the clicked by browsers.
 </summary>
	<returns>DataTable.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetOpenedByPlatforms">
	<summary>
 Gets the clicked by platforms.
 </summary>
	<returns>DataTable.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetOpenedByEmailClient">
	<summary>
 Gets the clicked by Email Client.
 </summary>
	<returns>DataTable.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetOpenedByUser(System.String)">
	<summary>
 Gets the opened by user.
 </summary>
	<param name="userkey">The userkey.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetOpenedByUser(System.String,System.Int32)">
	<summary>
 Gets the opened by user.
 </summary>
	<param name="userkey">The userkey.</param>
	<param name="msgid">The msgid.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetSent(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType)">
	<summary>
 Gets the sent.
 </summary>
	<param name="usevariant">The usevariant.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetSentByUser(System.String)">
	<summary>
 Gets the sent by user.
 </summary>
	<param name="userkey">The userkey.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetClicked(System.Int32)">
	<summary>
 Gets the clicked.
 </summary>
	<param name="recipientId">The recipient id.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetClicked(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType,System.DateTime)">
	<summary>
 Gets the clicked.
 </summary>
	<param name="usevariant">The usevariant.</param>
	<param name="openDate">The open date.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetClicked(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType)">
	<summary>
 Gets the clicked.
 </summary>
	<param name="usevariant">The usevariant.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetClicked(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType,System.Int32,System.Nullable{System.DateTime})">
	<summary>
 Gets the clicked.
 </summary>
	<param name="usevariant">The usevariant.</param>
	<param name="recipientId">The recipient id.</param>
	<param name="openDate">The open date.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetClickedByBrowsers">
	<summary>
 Gets the clicked by browsers.
 </summary>
	<returns>DataTable.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetClickedByEmailClient">
	<summary>
 Gets the clicked by Email Client.
 </summary>
	<returns>DataTable.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetClickedByPlatforms">
	<summary>
 Gets the clicked by platforms.
 </summary>
	<returns>DataTable.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetClickedByUser(System.String)">
	<summary>
 Gets the clicked by user.
 </summary>
	<param name="userkey">The userkey.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetClickedByUser(System.String,System.Int32)">
	<summary>
 Gets the clicked by user.
 </summary>
	<param name="userkey">The userkey.</param>
	<param name="msgid">The msgid.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetClickedMobile">
	<summary>
 Gets the clicked mobile.
 </summary>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetClickedTablet">
	<summary>
 Gets the clicked tablet.
 </summary>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetAddedToCart(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType,System.DateTime)">
	<summary>
 Gets the added to cart.
 </summary>
	<param name="usevariant">The usevariant.</param>
	<param name="openDate">The open date.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetAddedToCart(System.Int32)">
	<summary>
 Gets the added to cart.
 </summary>
	<param name="recipientId">The recipient id.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetAddedToCart(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType,System.Int32)">
	<summary>
 Gets the added to cart.
 </summary>
	<param name="usevariant">The usevariant.</param>
	<param name="recipientId">The recipient id.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetAddedToCart(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType)">
	<summary>
 Gets the added to cart.
 </summary>
	<param name="usevariant">The usevariant.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetAddedToCart(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType,System.Int32,System.Nullable{System.DateTime})">
	<summary>
 Gets the added to cart.
 </summary>
	<param name="usevariant">The usevariant.</param>
	<param name="recipientId">The recipient id.</param>
	<param name="openDate">The open date.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetAddedToCartByUser(System.String)">
	<summary>
 Gets the added to cart by user.
 </summary>
	<param name="userkey">The userkey.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetAddedToCartByUser(System.String,System.Int32)">
	<summary>
 Gets the added to cart by user.
 </summary>
	<param name="userkey">The userkey.</param>
	<param name="msgid">The msgid.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetOrderPlaced(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType)">
	<summary>
 Gets the order placed.
 </summary>
	<param name="usevariant">The usevariant.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetOrderPlaced(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType,System.Int32)">
	<summary>
 Gets the order placed.
 </summary>
	<param name="usevariant">The usevariant.</param>
	<param name="recipientId">The recipient id.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetOrderPlaced(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType,System.DateTime)">
	<summary>
 Gets the order placed.
 </summary>
	<param name="usevariant">The usevariant.</param>
	<param name="openDate">The open date.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetOrderPlaced(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType,System.Int32,System.Nullable{System.DateTime})">
	<summary>
 Gets the order placed.
 </summary>
	<param name="usevariant">The usevariant.</param>
	<param name="recipientId">The recipient id.</param>
	<param name="openDate">The open date.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetOrderTotal(System.Int32)">
	<summary>
 Gets the order total.
 </summary>
	<param name="recipientId">The recipient id.</param>
	<returns>System.Double.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetOrderTotal(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType)">
	<summary>
 Gets the order total.
 </summary>
	<param name="usevariant">The usevariant.</param>
	<returns>System.Double.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetOrderTotal(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType,System.Int32)">
	<summary>
 Gets the order total.
 </summary>
	<param name="usevariant">The usevariant.</param>
	<param name="recipientId">The recipient id.</param>
	<returns>System.Double.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetOrderTotal(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType,System.DateTime)">
	<summary>
 Gets the order total.
 </summary>
	<param name="usevariant">The usevariant.</param>
	<param name="openDate">The open date.</param>
	<returns>System.Double.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetOrderTotal(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType,System.Int32,System.Nullable{System.DateTime})">
	<summary>
 Gets the order total.
 </summary>
	<param name="usevariant">The usevariant.</param>
	<param name="recipientId">The recipient id.</param>
	<param name="openDate">The open date.</param>
	<returns>System.Double.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetOrderTotalByUser(System.String)">
	<summary>
 Gets the order total by user.
 </summary>
	<param name="userkey">The userkey.</param>
	<returns>System.Double.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetOrderEmailByUser(System.String)">
	<summary>
 Gets the order email by user.
 </summary>
	<param name="userkey">The userkey.</param>
	<returns>System.Double.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetOrderEmailByUser(System.String,System.Int32)">
	<summary>
 Gets the order email by user.
 </summary>
	<param name="userkey">The userkey.</param>
	<param name="msgid">The msgid.</param>
	<returns>System.Double.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetOrderAverage(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType)">
	<summary>
 Gets the order average.
 </summary>
	<param name="usevariant">The usevariant.</param>
	<returns>System.Double.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetUnsubscribed(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType)">
	<summary>
 Gets the unsubscribed.
 </summary>
	<param name="usevariant">The usevariant.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetUnsubscribed(System.Int32)">
	<summary>
 Gets the unsubscribed.
 </summary>
	<param name="recipientId">The recipient id.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetUnsubscribed(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType,System.Int32)">
	<summary>
 Gets the unsubscribed.
 </summary>
	<param name="usevariant">The usevariant.</param>
	<param name="recipientId">The recipient id.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetUnsubscribed(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType,System.DateTime)">
	<summary>
 Gets the unsubscribed.
 </summary>
	<param name="usevariant">The usevariant.</param>
	<param name="openDate">The open date.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetUnsubscribed(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType,System.Int32,System.Nullable{System.DateTime})">
	<summary>
 Gets the unsubscribed.
 </summary>
	<param name="usevariant">The usevariant.</param>
	<param name="recipientId">The recipient id.</param>
	<param name="openDate">The open date.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetUnsubscribedMobile(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType)">
	<summary>
 Gets the unsubscribed mobile.
 </summary>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetUnsubscribedTablet(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType)">
	<summary>
 Gets the unsubscribed tablet.
 </summary>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetLatestUnsubscribeTimeByUser(System.String)">
	<summary>
 Gets the unsubscribed by user.
 </summary>
	<param name="userkey">The userkey.</param>
	<returns>System.Object.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetLatestUnsubscribeTimeByUser(System.String,System.Int32)">
	<summary>
 Gets the unsubscribed by user.
 </summary>
	<param name="userkey">The userkey.</param>
	<param name="msgid">The msgid.</param>
	<returns>System.Object.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetUniqueIdsForRecipientsWhoOpened(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType)">
	<summary>
 Gets a list of unique Recipient Ids who opened the email.
 </summary>
	<param name="usevariant">The usevariant.</param>
	<returns>List{System.Int32}.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetRecipientCount(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType)">
	<summary>
 Gets the recipient count.
 </summary>
	<param name="emailType">Type of the email.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetRecipientCountOfWhoClickedALink(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType)">
	<summary>
 Gets the recipients who clicked.
 </summary>
	<param name="usevariant">The usevariant.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetRecipientCountOfWhoClickedALinkWithMobile(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType)">
	<summary>
 Gets the recipients who clicked mobile.
 </summary>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetRecipientCountOfWhoClickedALinkWithTablet(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType)">
	<summary>
 Gets the recipients who clicked tablet.
 </summary>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetRecipientCountOfWhoAddedToCart(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType)">
	<summary>
 Gets the recipients who added to cart.
 </summary>
	<param name="usevariant">The usevariant.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetRecipientCountOfWhoPlacedOrder(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType)">
	<summary>
 Gets the recipients who placed order.
 </summary>
	<param name="usevariant">The usevariant.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetRecipientsWhoClickedWithGeo">
	<summary>
 Gets the recipients who clicked with geo.
 </summary>
	<returns>List{RecipientMarker}.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetRecipientsWhoBoughtWithGeo">
	<summary>
 Gets the recipients who bought with geo.
 </summary>
	<returns>List{RecipientMarker}.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetRecipientsWhoOpenedWithGeo">
	<summary>
 Gets the recipients who opened with geo.
 </summary>
	<returns>List{RecipientMarker}.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetOrdersLinkedWithMessage(System.Int32@,System.Int32@,System.Int32@)">
	<summary>
 Receive orders related to messages
 </summary>
	<param name="totalOrders">Total orders</param>
	<param name="ordersFromMobile">Orders from mobile phone</param>
	<param name="ordersFromTablet">Orders from tablet</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetRecipientsWhoUnsubscribedWithGeo">
	<summary>
 Gets the recipients who unsubscribed with geo.
 </summary>
	<returns>List{RecipientMarker}.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.FillRecipientsGeoInfo(System.String)">
	<summary>
 Fills the recipients geo info.
 </summary>
	<param name="sql">The SQL.</param>
	<returns>List{RecipientMarker}.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetEngagementIndex(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType)">
	<summary>
 Gets the index of the engagement.
 </summary>
	<param name="usevariant">The usevariant.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetEngagementIndex(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType,System.DateTime)">
	<summary>
 Gets the index of the engagement.
 </summary>
	<param name="usevariant">The usevariant.</param>
	<param name="clickDate">The click date.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetEngagementIndex(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType,System.Int32)">
	<summary>
 Gets the index of the engagement.
 </summary>
	<param name="usevariant">The usevariant.</param>
	<param name="recipientId">The recipient id.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetEngagementIndex(System.Int32)">
	<summary>
 Gets the index of the engagement.
 </summary>
	<param name="recipientId">The recipient id.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetEngagementIndex(Dynamicweb.Modules.EmailMarketing.Statistics.EmailMessageType,System.Int32,System.Nullable{System.DateTime})">
	<summary>
 Gets the index of the engagement.
 </summary>
	<param name="usevariant">The usevariant.</param>
	<param name="recipientId">The recipient id.</param>
	<param name="clickDate">The click date.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetOpenedPerformanceByUser(System.String)">
	<summary>
 Gets the opened performance by user.
 </summary>
	<param name="userkey">The userkey.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetOpenedPerformanceByUser(System.String,System.Int32)">
	<summary>
 Gets the opened performance by user.
 </summary>
	<param name="userkey">The userkey.</param>
	<param name="msgId">The message id.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetLinkClickedPerformanceByUser(System.String)">
	<summary>
 Gets the clicked performance by user.
 </summary>
	<param name="userkey">The userkey.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetLinkClickedPerformanceByUser(System.String,System.Int32)">
	<summary>
 Gets the clicked performance by user.
 </summary>
	<param name="userkey">The userkey.</param>
	<param name="msgId">The message id.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetCartPerformanceByUser(System.String)">
	<summary>
 Gets the cart performance by user.
 </summary>
	<param name="userkey">The userkey.</param>
	<returns>System.Int32.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetCartPerformanceByUser(System.String,System.Int32)">
	<summary>
 Gets the cart performance by user.
 </summary>
	<param name="userkey">The userkey.</param>
	<param name="msgId">The message id.</param>
	<returns>System.Int32.</returns>
</member><member name="T:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.ResponseItem">
	<summary>
 Represents recipient response
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics.GetResponses">
	<summary>
 Gets recipient responses
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.EmailMarketing.Statistics.EmailStatistics">
	<summary>
 Email statistic
 </summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.EmailMarketing.SplitTestCollection">
	<summary>
 Represents the collection of SplitTest objects.
 </summary>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.SplitTest.EmailID">
	<summary>
 Gets or sets the ID of the newsletter that this split test is on.
 </summary>
	<value>
 The newsletter ID.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.SplitTest.Name">
	<summary>
 Gets or sets the name of split test.
 </summary>
	<value>
 The name.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.SplitTest.Includes">
	<summary>
 Gets or sets how many percent of visistors to include in split test.
 </summary>
	<value>
 The percentage 0-100.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.SplitTest.IncludesUnits">
	<summary>
 Gets or sets the units of amount of newsletter recipients.
 </summary>
	<value>
 The percentage or fixed amount of recipients
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.SplitTest.Active">
	<summary>
 Gets or sets a value indicating whether this <see cref="T:Dynamicweb.Modules.EmailMarketing.SplitTest"/> is active.
 </summary>
	<value>
		<c>true</c> if active; otherwise, <c>false</c>.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.SplitTest.GoalType">
	<summary>
 Gets or sets the type of the goal.
 </summary>
	<value>
 The type of the goal.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.SplitTest.StartDate">
	<summary>
 Gets the start date of this split test.
 </summary>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.SplitTest.EndDate">
	<summary>
 Gets the end date of this split test.
 </summary>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.SplitTest.EndType">
	<summary>
 Gets or sets the type of the split test end.
 </summary>
	<value>
 The type of the split test end.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.SplitTest.AmountHoursTillEnd">
	<summary>
 Gets or sets the amount of hours till the end of split test.
 </summary>
	<value>
 The amount of hours.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.SplitTest.OpenedEmailsAmount">
	<summary>
 Gets or sets the amount of opened newsletters.
 </summary>
	<value>
 The amount of opened newsletters.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.SplitTest.OpenedEmailsAmountUnits">
	<summary>
 Gets or sets the units of amount of opened newsletters.
 </summary>
	<value>
 The percentage or fixed amount of opened newsletters.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.SplitTest.AfterEndSendBest">
	<summary>
 Gets or sets a value indicating whether send best conversion after end of split test
 </summary>
	<value>
 True if best converting needs to be sent, othwerwise False
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.SplitTest.AfterEndNotify">
	<summary>
 Gets or sets a value indicating whether send notification mail after end of split test
 </summary>
	<value>
 True if notification mail needs to be sent, othwerwise False
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.SplitTest.AfterEndActionEmail">
	<summary>
 Gets or sets the notification email.
 </summary>
	<value>
 The email address.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.SplitTest.IsStartTestNow">
	<summary>
 Gets or sets a value indicating whether the split test will be started now.
 </summary>
	<value>
		<c>true</c> if the split test will be started now; otherwise, <c>false</c>.
 </value>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.SplitTest.#ctor">
	<summary>
 Initializes a new instance of the <see cref="T:Dynamicweb.Modules.EmailMarketing.SplitTest"/> class.
 </summary>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.SplitTest.FillRow(System.Data.DataRow)">
	<summary>
 Fills this instance with data from the data row.
 </summary>
	<param name="row">The row.</param>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.SplitTest.Fill(System.Data.IDataReader)">
	<summary>
 Fills this instance with data from the specified datareader.
 </summary>
	<param name="datareader">The data reader.</param>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.SplitTest.Save">
	<summary>
 Saves current data to the database.
 </summary>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.SplitTest.Delete(System.Int32)">
	<summary>
 Deletes the object with specified ID.
 </summary>
	<param name="id">Specified ID.</param>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.SplitTest.Units.Percentage">
	<summary>
 Specifies that amount will be counted in percentage
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.SplitTest.Units.Fixed">
	<summary>
 Specified that amount will be fixed 
 </summary>
</member><member name="T:Dynamicweb.Modules.EmailMarketing.SplitTest.Units">
	<summary>
 The units of amount of newsletter recipients
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.SplitTest.SplitTestEndType.EndAfterNHours">
	<summary>
 Specifies that split test will be finished after defined amount of hours
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.SplitTest.SplitTestEndType.AtGivenTime">
	<summary>
 Specifies that split test will be finished at the specified time
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.SplitTest.SplitTestEndType.AfterNOpenedEmails">
	<summary>
 Specifies that split test will be finished after defined amount of newsletter will be opened
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.SplitTest.SplitTestEndType.Manually">
	<summary>
 Specifies that split test will be finished manually
 </summary>
</member><member name="T:Dynamicweb.Modules.EmailMarketing.SplitTest.SplitTestEndType">
	<summary>
 The type of the split test end
 </summary>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.SplitTest.Goals.#ctor">
	<summary>
 Prevents a default instance of the <see cref="T:Dynamicweb.Modules.EmailMarketing.SplitTest.Goals"/> class from being created.
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.SplitTest.Goals.BestEI">
	<summary>
 Represent 'best engagement index' conversion goal
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.SplitTest.Goals.MostOpened">
	<summary>
 Represent 'most opened' conversion goal
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.SplitTest.Goals.MostClicked">
	<summary>
 Represent 'most clicked' conversion goal
 </summary>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.SplitTest.GetSplitTestSampleSize">
	<summary>
 Gets the size of the split test sample. This is the sum of the original and variation recipients.
 </summary>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.SplitTest.GetSplitTestSampleSize(Dynamicweb.EmailMessaging.RecipientCollection)">
	<summary>
 Gets the size of the split test sample. This is the sum of the original and variation recipients.
 </summary>
	<param name="recipients">The recipients.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.SplitTest.SendSplitTest">
	<summary>
 Sends the split test.
 </summary>
	<returns>True if send split test has been successfull, otherwise False</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.SplitTest.SetRecipientsList(Dynamicweb.EmailMessaging.RecipientCollection,System.Int32,Dynamicweb.EmailMessaging.RecipientCollection@,Dynamicweb.EmailMessaging.RecipientCollection@)">
	<summary>
 Gets the recipients list.
 </summary>
	<param name="recipients">The collection of recipients.</param>
	<param name="amount">The amount of recipients to select.</param>
	<param name="orgList">The <see cref="T:Dynamicweb.EmailMessaging.RecipientCollection"/> to fill with recipients for the original message.</param>
	<param name="varList">The <see cref="T:Dynamicweb.EmailMessaging.RecipientCollection"/> to fill with recipients for the variation message.</param>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.SplitTest.CreateSplitTestScheduledTask">
	<summary>
 Creates the split test scheduled task.
 </summary>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.SplitTest.CreateFinishSplitTestScheduledTask(System.DateTime)">
	<summary>
 Creates the finish split test scheduled task.
 </summary>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.SplitTest.GetBestPerformingMessageId">
	<summary>
 Gets the best performing message id.
 </summary>
	<returns>The message id</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.SplitTest.GetSplitTestByEmailID(System.Int32)">
	<summary>
 Gets the split test by newsletter ID.
 </summary>
	<param name="newsletterID">The newsletter ID.</param><returns></returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.SplitTest.GetSplitTestBySql(System.String)">
	<summary>
 Gets the split test by SQL.
 </summary>
	<param name="sql">The SQL query.</param>
	<returns>The collection of SplitTest</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.SplitTest.SendScheduledSplitTest(Dynamicweb.Modules.EmailMarketing.SplitTest)">
	<summary>
 Sends the scheduled split test.
 </summary>
	<param name="splitTest">The split test.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.SplitTest.SendBestPerformingWinner(Dynamicweb.Modules.EmailMarketing.SplitTest)">
	<summary>
 Sends the best performing split test message as winner.
 </summary>
	<param name="splitTest">The split test.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.SplitTest.SendSpecificWinner(Dynamicweb.Modules.EmailMarketing.SplitTest,System.Int32)">
	<summary>
 Sends the specific split test message as winner.
 </summary>
	<param name="splitTest">The split test.</param>
	<param name="winnerMessageId">The winner message id.</param>
	<returns></returns>
</member><member name="T:Dynamicweb.Modules.EmailMarketing.SplitTest">
	<summary>
 Represents a split test of a campaign manager newsletter
 </summary>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.TrackingProviders.GoogleAnalyticsTrackingProvider.Source">
	<summary>
 Gets or sets the campaign source.
 </summary>
	<value>
 The campaign source.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.TrackingProviders.GoogleAnalyticsTrackingProvider.Medium">
	<summary>
 Gets or sets the campaign medium.
 </summary>
	<value>
 The campaign medium.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.TrackingProviders.GoogleAnalyticsTrackingProvider.Name">
	<summary>
 Gets or sets the campaign name.
 </summary>
	<value>
 The campaign name.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.TrackingProviders.GoogleAnalyticsTrackingProvider.Term">
	<summary>
 Gets or sets the campaign term.
 </summary>
	<value>
 The campaign term.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.TrackingProviders.GoogleAnalyticsTrackingProvider.Content">
	<summary>
 Gets or sets the campaign content.
 </summary>
	<value>
 The campaign content.
 </value>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.TrackingProviders.GoogleAnalyticsTrackingProvider.GetTrackingParameters">
	<summary>
 Gets the tracking parameters.
 </summary><returns></returns>
</member><member name="T:Dynamicweb.Modules.EmailMarketing.TrackingProviders.GoogleAnalyticsTrackingProvider">
	<summary>
	</summary>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.TopFolderCollection.Comparer.Comparison">
	<summary>
 Gets or sets the comparison.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.TopFolderCollection.Comparer.#ctor(System.Comparison{Dynamicweb.Modules.EmailMarketing.TopFolder})">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<param name="comparison">Comparison.</param>
	<exception cref="T:System.ArgumentNullException"><paramref name="comparison">comparison</paramref> is null.</exception>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.TopFolderCollection.Comparer.Compare(Dynamicweb.Modules.EmailMarketing.TopFolder,Dynamicweb.Modules.EmailMarketing.TopFolder)">
	<summary>
 Compares two objects and returns the comparison result.
 </summary>
	<param name="x">First object.</param>
	<param name="y">Second object.</param>
	<returns>Comparison result.</returns>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.EmailMarketing.TopFolderCollection.Comparer">
	<summary>
 Represents a collection element comparer.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.TopFolderCollection.Data">
	<summary>
 Gets the underlying data storage.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.TopFolderCollection.Sort(System.Comparison{Dynamicweb.Modules.EmailMarketing.TopFolder})">
	<summary>
 Sorts elements according to the given comparison.
 </summary>
	<param name="comparison">Comparison.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.TopFolderCollection.Sort(System.Collections.Generic.IComparer{Dynamicweb.Modules.EmailMarketing.TopFolder})">
	<summary>
 Sorts elements according to the given comparer.
 </summary>
	<param name="comparer">Comparer.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.TopFolderCollection.SortByFolderName(System.String)">
	<summary>
 Sorts email folders by folder name (ascending).
 </summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.EmailMarketing.TopFolderCollection">
	<summary>
 Represents the collection of top folders
 </summary>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.TopFolder.FolderName">
	<summary>
 Gets or sets the name.
 </summary>
	<value>
 The name.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.TopFolder.Description">
	<summary>
 Gets or sets the description.
 </summary>
	<value>
 The description.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.TopFolder.SenderName">
	<summary>
 Gets or sets the name of the sender.
 </summary>
	<value>
 The name of the sender.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.TopFolder.SenderEmail">
	<summary>
 Gets or sets the sender email.
 </summary>
	<value>
 The sender email.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.TopFolder.Subject">
	<summary>
 Gets or sets the subject.
 </summary>
	<value>
 The subject.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.TopFolder.UnsubscribePageId">
	<summary>
 Gets or sets the Id for the <see cref="T:Dynamicweb.Content.Page"/> where Unsubscribe is located.
 </summary>
	<value>
 The unsubscription page id.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.TopFolder.UnsubscribeText">
	<summary>
 Gets or sets the description text for the <see cref="T:Dynamicweb.Content.Page"/> where Unsubscribe is located.
 </summary>
	<value>
 The unsubscription page text.
 </value>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.TopFolder._trackingProviderConfiguration">
	<summary>
 Contains configuration for tracking provider
 </summary>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.TopFolder.TrackingProviderConfiguration">
	<summary>
 Gets or sets the configuration for the <see cref="T:Dynamicweb.Modules.EmailMarketing.EmailTrackingProvider"/>.
 </summary>
	<value>
 The tracking provider configuration.
 </value>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.TopFolder._trackingProvider">
	<summary>
 Contains instance for tracking provider
 </summary>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.TopFolder.TrackingProvider">
	<summary>
 Gets the <see cref="T:Dynamicweb.Modules.EmailMarketing.EmailTrackingProvider"/>.
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.TopFolder._recipientProviderConfiguration">
	<summary>
 Contains configuration for recipient provider
 </summary>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.TopFolder.RecipientProviderConfiguration">
	<summary>
 Gets or sets the configuration for the <see cref="T:Dynamicweb.Modules.EmailMarketing.EmailRecipientProvider"/>.
 </summary>
	<value>
 The recipient provider configuration.
 </value>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.TopFolder._recipientProvider">
	<summary>
 Contains instance for recipient provider
 </summary>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.TopFolder.RecipientProvider">
	<summary>
 Gets the <see cref="T:Dynamicweb.Modules.EmailMarketing.EmailRecipientProvider"/>.
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.TopFolder._engagementIndex">
	<summary>
 Contains the instance of engagement index
 </summary>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.TopFolder.EngagementIndex">
	<summary>
 Gets or sets the <see cref="T:Dynamicweb.Modules.EmailMarketing.EmailEngagementIndex"/>.
 </summary>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.TopFolder.DomainName">
	<summary>
 Domain Url
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.TopFolder.DeliveryProviderId">
	<summary>
 Gets or sets the delivery provider id.
 </summary>
	<value>
 The delivery provider id.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.TopFolder.RecipientSpecificContent">
	<summary>
 Gets or sets value indicating whether to render content for each recipient.
 </summary>
	<value>
		<c>true</c> if need to render content for each recipient; otherwise, <c>false</c>.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.TopFolder.QuarantinePeriod">
	<summary>
 Gets or sets the quarantine period (in minutes). The period in which the same <see cref="T:Dynamicweb.EmailMessaging.Recipient"/> is quarantined from receiving the same <see cref="T:Dynamicweb.Modules.EmailMarketing.Email"/>.
 </summary>
	<value>
 The quarantine period. This cannot be negative. Default is 0, indicating no quarantine period.
 </value>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.TopFolder.#ctor">
	<summary>
 Initializes a new instance of the <see cref="T:Dynamicweb.Modules.EmailMarketing.EmailFolder"/> class.
 </summary>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.TopFolder.Fill(System.Data.IDataReader)">
	<summary>
 Fills the specified reader.
 </summary>
	<param name="reader">The reader.</param>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.TopFolder.FillRow(System.Data.DataRow)">
	<summary>
 Fills the row.
 </summary>
	<param name="row">The row.</param>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.TopFolder.Save">
	<summary>
 Saves current data to the database.
 </summary>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.TopFolder.GetDefaultTopFolderId">
	<summary>
 Gets the default top folder id.
 </summary>
	<returns>The id of top folder</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.TopFolder.GetTopFolderById(System.Int32)">
	<summary>
 Gets the top folder by id.
 </summary>
	<param name="folderId">The folder id.</param>
	<returns>The top folder</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.TopFolder.GetAllTopFolders">
	<summary>
 Gets all top folders.
 </summary>
	<returns>The collection of top folders</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.TopFolder.GetTopFolderBySql(System.String)">
	<summary>
 Gets the top folder by SQL query.
 </summary>
	<param name="sql">The SQL query.</param>
	<returns>The collection of top folders</returns>
</member><member name="T:Dynamicweb.Modules.EmailMarketing.TopFolder">
	<summary>
 Represents top folder
 </summary>
</member><member name="T:Dynamicweb.Modules.EmailMarketing.Statistics.RecipientsListData">
	<summary>
 Class RecipientsListData - UI wrapper for data
 </summary>
</member><member name="T:Dynamicweb.Modules.EmailMarketing.Statistics.StaticticsData">
	<summary>
 Class StaticticsData - UI wrapper for data
 </summary>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.ExportStatisticsHelper.GetGeneralStatData">
	<summary>
 Gets the general statistic data.
 </summary>
	<returns>System.Collections.ArrayList.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.ExportStatisticsHelper.GetRecipientsListData(System.Boolean)">
	<summary>
 Gets the recipients list data
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.ExportStatisticsHelper.GetRecipientsListDataAccess">
	<summary>
 Gets the recipients list data in access environment.
 </summary>
	<returns>System.Collections.Generic.List(Of Dynamicweb.Admin.OMC.Emails.Statistics.RecipientsListData).</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.ExportStatisticsHelper.GetRecipientsListDataSql(System.Boolean)">
	<summary>
 Gets the recipients list data in MSSQL environment.
 </summary>
	<returns>System.Collections.Generic.List(Of Dynamicweb.Admin.OMC.Emails.Statistics.RecipientsListData).</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.ExportStatisticsHelper.GetEngagementStatData">
	<summary>
 Gets the engagement statistic data.
 </summary>
	<returns>System.Collections.ArrayList.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Statistics.ExportStatisticsHelper.GetLinksStatData">
	<summary>
 Return email links statistic data
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.ResendProviders.UnresponsiveRecipientResendProvider.CreateResendEmail(Dynamicweb.Modules.EmailMarketing.Email)">
	<summary>
 Returns a new Email object that is the one we redirect the user to
 </summary>
	<param name="originalEmail"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.EmailMarketing.ResendProviders.UnresponsiveRecipientResendProvider">
	<summary>
 Default Dynamicweb recipient provider
 </summary>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Renderer.#ctor">
	<summary>
 Prevents a default instance of the <see cref="T:Dynamicweb.Modules.EmailMarketing.Renderer"/> class from being created.
 </summary>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Renderer.BuildPageHtml(System.Int32,System.String)">
	<summary>
 Builds the page view.
 </summary>
	<param name="intPageID">The int page ID.</param>
	<param name="template">The template.</param>
	<returns>The page view </returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Renderer.BuildPageHtml(System.Int32,System.String,Dynamicweb.Frontend.PageViewContext)">
	<summary>
 Builds the page view.
 </summary>
	<param name="intPageID">The int page ID.</param>
	<param name="template">The template.</param>
	<returns>The page view </returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Renderer.RenderPageContent(Dynamicweb.Modules.EmailMarketing.Email,System.Boolean)">
	<summary>
 Renders the content of the page.
 </summary>
	<param name="email">The email.</param>
	<param name="useVariant">if set to <c>true</c> use variant.</param>
	<returns>The html content of email</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Renderer.RenderPageContent(Dynamicweb.Modules.EmailMarketing.Email,System.Boolean,Dynamicweb.Frontend.PageViewContext)">
	<summary>
 Renders the content of the page.
 </summary>
	<param name="email">The email.</param>
	<param name="useVariant">if set to <c>true</c> use variant.</param>
	<returns>The html content of email</returns>
</member><member name="T:Dynamicweb.Modules.EmailMarketing.Renderer">
	<summary>
 Represents email renderer
 </summary>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.RecipientProviders.AccessUserRecipientProvider.IncludedUsers">
	<summary>
 Gets or sets the included users.
 </summary>
	<value>
 The included users.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.RecipientProviders.AccessUserRecipientProvider.ExcludedUsers">
	<summary>
 Gets or sets the excluded users.
 </summary>
	<value>
 The excluded users.
 </value>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.RecipientProviders.AccessUserRecipientProvider.GetIds">
	<summary>
 Gets the ids.
 </summary>
	<returns>List of ids.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.RecipientProviders.AccessUserRecipientProvider.GetExcludedIds">
	<summary>
 Gets the excluded ids.
 </summary>
	<returns>List of excluded ids.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.RecipientProviders.AccessUserRecipientProvider.SetIds(System.Collections.Generic.List{System.String})">
	<summary>
 Sets the ids.
 </summary>
	<param name="rcplist">The list of recipients.</param>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.RecipientProviders.AccessUserRecipientProvider.SetExcludedIds(System.Collections.Generic.List{System.String})">
	<summary>
 Sets the excluded ids.
 </summary>
	<param name="rcplist">The list of excluded recipients.</param>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.RecipientProviders.AccessUserRecipientProvider.ExcludeRecipient(System.String)">
	<summary>
 Excludes the recipient.
 </summary>
	<param name="rcpKey">The recipient key.</param>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.RecipientProviders.AccessUserRecipientProvider.GetRecipients">
	<summary>
 Gets the recipients.
 </summary>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.RecipientProviders.AccessUserRecipientProvider.GetRecipients(System.Boolean)">
	<summary>
 Gets the recipients.
 </summary>
	<param name="excluded">if set to <c>true</c> [excluded].</param><returns></returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.RecipientProviders.AccessUserRecipientProvider.UnsubscribeRecipient(Dynamicweb.EmailMessaging.Recipient)">
	<summary>
 Unsubscribes the recipient.
 </summary>
	<param name="recipient">The recipient.</param>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.RecipientProviders.AccessUserRecipientProvider.GetUsersFromSmartSearch(System.Guid,System.Collections.Generic.Dictionary{System.Int32,Dynamicweb.Modules.UserManagement.User})">
	<summary>
 Gets the users from smart search.
 </summary>
	<param name="id">The unique id.</param>
	<param name="users">The users.</param>
</member><member name="T:Dynamicweb.Modules.EmailMarketing.RecipientProviders.AccessUserRecipientProvider">
	<summary>
 Default Dynamicweb recipient provider
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Notifications.OnBeforePreProcessing">
	<summary>
 Fires when CallBackHanlder.OnBeforePreprocessing called
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Notifications.OnBeforeMerging">
	<summary>
 Fires when CallBackHanlder.OnBeforeMerging called
 </summary>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Notifications.OnBeforePreProcessingNotificationArgs.Message">
	<summary>
 Gets or sets message property
 </summary>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Notifications.OnBeforePreProcessingNotificationArgs.#ctor(Dynamicweb.EmailMessaging.Message)">
	<summary>
 Creates a new instance of OnBeforePreProcessing notification args
 </summary>
</member><member name="T:Dynamicweb.Modules.EmailMarketing.Notifications.OnBeforePreProcessingNotificationArgs">
	<summary>
 Represents arguments for OnBeforePreProcessing notification
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Notifications.OnBeforeMergingNotificationArgs.Message">
	<summary>
 Gets or sets message property
 </summary>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Notifications.OnBeforeMergingNotificationArgs.Recipient">
	<summary>
 Gets or sets recipients property
 </summary>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Notifications.OnBeforeMergingNotificationArgs.#ctor(Dynamicweb.EmailMessaging.Message,Dynamicweb.EmailMessaging.Recipient)">
	<summary>
 Creates a new instance of OnBeforeMerging notification args
 </summary>
</member><member name="T:Dynamicweb.Modules.EmailMarketing.Notifications.OnBeforeMergingNotificationArgs">
	<summary>
 Represents arguments for OnBeforeMerging notification
 </summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.EmailMarketing.Notifications">
	<summary>
 Represents a set of notifications available for Email Messaging.
 </summary>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.EmailMarketing.EngagementIndexLinkCollection">
	<summary>
 Represents engagement index links collection
 </summary>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.EngagementIndexLink.LinkID">
	<summary>
 Gets or sets the link ID.
 </summary>
	<value>
 The link ID.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.EngagementIndexLink.LinkEngagementIndex">
	<summary>
 Gets or sets the engagement index value.
 </summary>
	<value>
 The index value.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.EngagementIndexLink.IsActive">
	<summary>
 Gets or sets a value indicating whether the engagement index is active.
 </summary>
	<value>
		<c>true</c> if engagement index is active; otherwise, <c>false</c>.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.EngagementIndexLink.OriginalUrl">
	<summary>
 Gets or sets the original URL of the <see cref="T:Dynamicweb.Analytics.Links.Link"/>.
 </summary>
	<value>
 The original URL.
 </value>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EngagementIndexLink.#ctor">
	<summary>
 Initializes a new instance of the <see cref="T:Dynamicweb.Modules.EmailMarketing.SplitTest"/> class.
 </summary>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EngagementIndexLink.#ctor(System.Int32,System.Int32,System.String,System.Boolean)">
	<summary>
 Initializes a new instance of the <see cref="T:Dynamicweb.Modules.EmailMarketing.SplitTest"/> class.
 </summary>
</member><member name="T:Dynamicweb.Modules.EmailMarketing.EngagementIndexLink">
	<summary>
 Represents engagement index link
 </summary>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailTrackingProvider.GetTrackingParameters">
	<summary>
 Gets the tracking parameters.
 </summary><returns></returns>
</member><member name="T:Dynamicweb.Modules.EmailMarketing.EmailTrackingProvider">
	<summary>
 Represents base class for traking provider
 </summary>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.EmailRecipientProvider.Email">
	<summary>
 Gets the email that this instance will provide <see cref="T:Dynamicweb.EmailMessaging.RecipientCollection">recipients</see>.
 </summary>
	<value>
 The email.
 </value>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailRecipientProvider.GetRecipients">
	<summary>
 Gets the recipients.
 </summary>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailRecipientProvider.SubscribeRecipient">
	<summary>
 Subscribes the recipient.
 </summary>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailRecipientProvider.UnsubscribeRecipient(Dynamicweb.EmailMessaging.Recipient)">
	<summary>
 Unsubscribes the recipient.
 </summary>
	<param name="recipient">The recipient.</param>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailRecipientProvider.GetRecipientContentContext(Dynamicweb.EmailMessaging.Recipient)">
	<summary>
 Gets the recipient content context. This method is used when rendering recipient specific content.
 </summary>
	<param name="recipient">The recipient.</param>
	<returns>The <see cref="T:Dynamicweb.Frontend.PageViewContext"/> to render the associated page with.</returns>
</member><member name="T:Dynamicweb.Modules.EmailMarketing.EmailRecipientProvider">
	<summary>
 Represent base class for recipient provider
 </summary>
</member><member name="T:Dynamicweb.Modules.EmailMarketing.EmailFolderCollection">
	<summary>
 Represents collection of folders
 </summary>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.EmailFolder.ParentId">
	<summary>
 Gets or sets the parent folder ID of the email folder.
 </summary>
	<value>
 The parent folder ID.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.EmailFolder.Name">
	<summary>
 Gets or sets the name of folder.
 </summary>
	<value>
 The name.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.EmailFolder.TopFolderId">
	<summary>
 Gets or sets the top folder ID of the email folder.
 </summary>
	<value>
 The top folder ID.
 </value>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailFolder.#ctor">
	<summary>
 Initializes a new instance of the <see cref="T:Dynamicweb.Modules.EmailMarketing.EmailFolder"/> class.
 </summary>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailFolder.Fill(System.Data.IDataReader)">
	<summary>
 Fills the specified data reader.
 </summary>
	<param name="datareader">The data reader.</param>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailFolder.FillRow(System.Data.DataRow)">
	<summary>
 Fills the data row.
 </summary>
	<param name="row">The data row.</param>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailFolder.GetAllCustomFolders(System.Boolean,System.Int32)">
	<summary>
 Gets all custom folders.
 </summary>
	<param name="onlyParent">if set to <c>true</c> parent only.</param>
	<param name="topFolderId">The top folder id.</param>
	<returns>The colection of folders</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailFolder.IsSystemFolder(System.String,System.Int32)">
	<summary>
 Determines whether is system folder by specified folder name or folder id.
 </summary>
	<param name="folderName">Name of the folder.</param>
	<param name="folderId">The folder id.</param><returns>
		<c>true</c> if system folder; otherwise, <c>false</c>.
 </returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailFolder.GetEmailsFolderIdByFolderName(System.String,System.Int32)">
	<summary>
 Gets the name of the emails folder id by folder.
 </summary>
	<param name="folderName">Name of the folder.</param>
	<param name="topFolderId">The top folder id.</param>
	<returns>The id of folder</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailFolder.GetEmailsFolderById(System.String)">
	<summary>
 Gets the emails folder by id.
 </summary>
	<param name="folderId">The folder id.</param>
	<returns>The folder</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailFolder.GetEmailsFolderTopFolderId(System.String)">
	<summary>
 Gets the emails folder top folder id.
 </summary>
	<param name="folderId">The folder id.</param>
	<returns>The id of top folder</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailFolder.GetEmailsFoldersByParentId(System.Int32)">
	<summary>
 Gets the emails folders by parent id.
 </summary>
	<param name="parentId">The parent id.</param>
	<returns>The colection of folders</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailFolder.GetEmailsFoldersByTopFolderId(System.Int32)">
	<summary>
 Gets the emails folders by top folder id.
 </summary>
	<param name="topFolderId">The top folder id.</param>
	<returns>The colection of folders</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailFolder.GetAllEmailsFolders">
	<summary>
 Gets all emails folders.
 </summary>
	<returns>All folders</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailFolder.GetFolderBySql(System.String)">
	<summary>
 Gets the folder by SQL query.
 </summary>
	<param name="sql">The SQL query.</param><returns></returns>
</member><member name="T:Dynamicweb.Modules.EmailMarketing.EmailFolder">
	<summary>
 Represents email folder
 </summary>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.EmailEngagementIndex.EmailID">
	<summary>
 Gets or sets the NewsletterID.
 </summary>
	<value>
 The NewsletterID.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.EmailEngagementIndex.TopFolderID">
	<summary>
 Gets or sets the top folder ID.
 </summary>
	<value>
 The top folder ID.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.EmailEngagementIndex.OpenMailIndex">
	<summary>
 Gets or sets the open mail index.
 </summary>
	<value>
 The index.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.EmailEngagementIndex.OpenMailActive">
	<summary>
 Gets or sets a value indicating whether the OpenMail is active.
 </summary>
	<value>
		<c>true</c> if open mail index is active; otherwise, <c>false</c>.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.EmailEngagementIndex.ClickLinkIndex">
	<summary>
 Gets or sets the click link index.
 </summary>
	<value>
 The index.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.EmailEngagementIndex.ClickLinkActive">
	<summary>
 Gets or sets a value indicating whether the click link is active.
 </summary>
	<value>
		<c>true</c> if click link index is active; otherwise, <c>false</c>.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.EmailEngagementIndex.AddingProductsIndex">
	<summary>
 Gets or sets the adding productsl index.
 </summary>
	<value>
 The index.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.EmailEngagementIndex.AddingProductsActive">
	<summary>
 Gets or sets a value indicating whether the adding products is active.
 </summary>
	<value>
		<c>true</c> if adding products index is active; otherwise, <c>false</c>.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.EmailEngagementIndex.PlacingOrderIndex">
	<summary>
 Gets or sets the placing order index.
 </summary>
	<value>
 The index.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.EmailEngagementIndex.PlacingOrderActive">
	<summary>
 Gets or sets a value indicating whether the placing order is active.
 </summary>
	<value>
		<c>true</c> if placing order index is active; otherwise, <c>false</c>.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.EmailEngagementIndex.SigningEmailIndex">
	<summary>
 Gets or sets the signing newsletter index.
 </summary>
	<value>
 The index.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.EmailEngagementIndex.SigningEmailActive">
	<summary>
 Gets or sets a value indicating whether the signing newsletter is active.
 </summary>
	<value>
		<c>true</c> if signing newsletter index is active; otherwise, <c>false</c>.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.EmailEngagementIndex.UnsubscribesEmailIndex">
	<summary>
 Gets or sets the unsubscribes newsletter index.
 </summary>
	<value>
 The index.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.EmailEngagementIndex.UnsubscribesEmailActive">
	<summary>
 Gets or sets a value indicating whether the unsubscribes newsletter is active.
 </summary>
	<value>
		<c>true</c> if unsubscribes newsletter index is active; otherwise, <c>false</c>.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.EmailEngagementIndex.OriginalLinks">
	<summary>
 Gets or sets the Link1 index.
 </summary>
	<value>
 The index.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.EmailEngagementIndex.VariantLinks">
	<summary>
 Gets or sets a value indicating whether the Link1 is active.
 </summary>
	<value>
		<c>true</c> if Link1 index is active; otherwise, <c>false</c>.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.EmailEngagementIndex.LinkCollectionForOriginal">
	<summary>
 Gets or sets the EI link original collection.
 </summary>
	<value>
 The EI link original collection.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.EmailEngagementIndex.LinkCollectionForVariation">
	<summary>
 Gets or sets the EI link variant collection.
 </summary>
	<value>
 The EI link variant collection.
 </value>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailEngagementIndex.#ctor">
	<summary>
 Initializes a new instance of the <see cref="T:Dynamicweb.Modules.EmailMarketing.SplitTest"/> class.
 </summary>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailEngagementIndex.FillRow(System.Data.DataRow)">
	<summary>
 Fills this instance with data from the data row.
 </summary>
	<param name="row">The row.</param>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailEngagementIndex.Fill(System.Data.IDataReader)">
	<summary>
 Fills this instance with data from the specified datareader.
 </summary>
	<param name="datareader">The data reader.</param>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailEngagementIndex.GetEngagementIndexesByTopfolderId(System.Int32)">
	<summary>
 Gets the Engagement indexes by top folder ID.
 </summary>
	<param name="topFolderId">The top folder ID.</param><returns></returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailEngagementIndex.GetEngagementIndexesByNewsletterID(System.Int32)">
	<summary>
 Gets the Engagement indexes by newsletter ID.
 </summary>
	<param name="newsletterID">The newsletter ID.</param><returns></returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailEngagementIndex.SerializeIndexesToXML(System.Boolean)">
	<summary>
 Gets the parameters to XML.
 </summary>
	<param name="isUseVariant">if set to <c>true</c> [include declaration].</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailEngagementIndex.DeserializeIndexesFromXML(System.String,System.Boolean)">
	<summary>
 Deserializes the indexes from XML.
 </summary>
	<param name="xmlPar">The XML par.</param>
	<param name="isUseVariant">if set to <c>true</c> [is use variant].</param>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailEngagementIndex.SetDefaultEngagementIndex">
	<summary>
 Sets the default index of the engagement.
 </summary>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailEngagementIndex.GetDefaultEngagementIndexes">
	<summary>
 Gets the default engagement indexes.
 </summary><returns></returns>
</member><member name="T:Dynamicweb.Modules.EmailMarketing.EmailEngagementIndex">
	<summary>
 Represents the email engagement indexes
 </summary>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.EmailCollection.Comparer.Comparison">
	<summary>
 Gets or sets the comparison.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailCollection.Comparer.#ctor(System.Comparison{Dynamicweb.Modules.EmailMarketing.Email})">
	<summary>
 Initializes a new instance of an object.
 </summary>
	<param name="comparison">Comparison.</param>
	<exception cref="T:System.ArgumentNullException"><paramref name="comparison">comparison</paramref> is null.</exception>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailCollection.Comparer.Compare(Dynamicweb.Modules.EmailMarketing.Email,Dynamicweb.Modules.EmailMarketing.Email)">
	<summary>
 Compares two objects and returns the comparison result.
 </summary>
	<param name="x">First object.</param>
	<param name="y">Second object.</param>
	<returns>Comparison result.</returns>
	<remarks></remarks>
</member><member name="T:Dynamicweb.Modules.EmailMarketing.EmailCollection.Comparer">
	<summary>
 Represents a collection element comparer.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.EmailCollection.Data">
	<summary>
 Gets the underlying data storage.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailCollection.SortBySubject(System.String)">
	<summary>
 Sorts emails by a name (ascending).
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailCollection.SortByState(System.String)">
	<summary>
 Sorts emails by a state.
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailCollection.SortByCreatedDate(System.String)">
	<summary>
 Sorts emails by a creation date (ascending).
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailCollection.SortBySendDate(System.String)">
	<summary>
 Sorts emails by a send date (ascending).
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailCollection.SortByScheduledDate(System.String)">
	<summary>
 Sorts emails by a scheduled date (ascending).
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailCollection.SortBySenderName(System.String)">
	<summary>
 Sorts emails by a sender name (ascending).
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailCollection.SortByTotalSend(System.String)">
	<summary>
 Sorts emails by a sender name (ascending).
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailCollection.SortByOpeningRate(System.String)">
	<summary>
 Sorts emails by a sender name (ascending).
 </summary>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailCollection.Sort(System.Comparison{Dynamicweb.Modules.EmailMarketing.Email})">
	<summary>
 Sorts elements according to the given comparison.
 </summary>
	<param name="comparison">Comparison.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailCollection.Sort(System.Collections.Generic.IComparer{Dynamicweb.Modules.EmailMarketing.Email})">
	<summary>
 Sorts elements according to the given comparer.
 </summary>
	<param name="comparer">Comparer.</param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.EmailCollection.GetRange(System.Int32,System.Int32)">
	<summary>
 Creates a shallow copy of a range of elements in the source EmailCollection.
 </summary>
	<param name="index">index at which the range starts.</param>
	<param name="count">The number of elements in the range.</param>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Email.SortFields.Subject">
	<summary>
 Sorted by Name field.
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Email.SortFields.CreatedDate">
	<summary>
 Sorted by Created Date field.
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Email.SortFields.State">
	<summary>
 Sorted by State field.
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Email.SortFields.SendDate">
	<summary>
 Sorted by SendDate field.
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Email.SortFields.ScheduledDate">
	<summary>
 Sorted by ScheduledDate field.
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Email.SortFields.SenderName">
	<summary>
 Sorted by SenderName field.
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Email.SortFields.TotalSent">
	<summary>
 Sorted by TotalSent field.
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Email.SortFields.OpeningRate">
	<summary>
 Sorted by OpeningRate field.
 </summary>
</member><member name="T:Dynamicweb.Modules.EmailMarketing.Email.SortFields">
	<summary>
 Stores a sort field order.
 </summary>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.HasSplitTest">
	<summary>
 Gets value indicating whether this email has an <see cref="T:Dynamicweb.Modules.EmailMarketing.SplitTest"></see> associated with it.
 If variation email and variation page are set then it's counted that variation is present
 </summary>
	<value>
		<c>true</c> if this instance has an split test; otherwise, <c>false</c>.
 </value>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Email._recipientProviderXml">
	<summary>
 Contains the configuration for EmailRecipientProvider
 </summary>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.RecipientProviderConfiguration">
	<summary>
 Gets or sets the recipient provider configuration settings.
 </summary>
	<value>
 The recipient provider configuration settings.
 </value>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Email._recipientProvider">
	<summary>
 Contains instance of EmailRecipientProvider
 </summary>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.RecipientProvider">
	<summary>
 Gets the recipient provider.
 </summary>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.Template">
	<summary>
 Gets or sets the template.
 </summary>
	<value>
 The template.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.SenderName">
	<summary>
 Gets or sets the name of the sender.
 </summary>
	<value>
 The name of the sender.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.SenderEmail">
	<summary>
 Gets or sets the sender email.
 </summary>
	<value>
 The sender email.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.Subject">
	<summary>
 Gets or sets the subject.
 </summary>
	<value>
 The subject.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.FileAttachmentPath">
	<summary>
 Gets or sets the path where the file to attach is located.
 This path must be absolute inside Dynamicweb File Archive, eg. "/Images/MyFolder/MyImage.png".
 </summary>
	<value>
 The attached file path.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.Encoding">
	<summary>
 Gets or sets the <see cref="T:System.Text.Encoding"/> used in this <see cref="T:Dynamicweb.Modules.EmailMarketing.Email"/>.
 </summary>
	<value>
 The encoding.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.UnsubscribePageId">
	<summary>
 Gets or sets the Id for the <see cref="P:Dynamicweb.Modules.EmailMarketing.Email.Page"/> where Unsubscribe is located.
 </summary>
	<value>
 The unsubscription page id.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.UnsubscribeText">
	<summary>
 Gets or sets the description text for the <see cref="P:Dynamicweb.Modules.EmailMarketing.Email.Page"/> where Unsubscribe is located.
 </summary>
	<value>
 The unsubscription page text.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.VariationName">
	<summary>
 Variation  user name
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.VariationEmail">
	<summary>
 Variation Email
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.VariationSubject">
	<summary>
 Variation Subject
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.VariationPageId">
	<summary>
 Variation Page Id
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.VariationUnsubscribeText">
	<summary>
 Gets or sets the variation unsubscribe text.
 </summary>
	<value>
 The variation unsubscribe text.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.MessageId">
	<summary>
 Gets or sets the message id.
 </summary>
	<value>
 The message id.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.OriginalMessageId">
	<summary>
 Gets or sets the original message id.
 </summary>
	<value>
 The original message id.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.VariationMessageId">
	<summary>
 Gets or sets the variation message Id.
 </summary>
	<value>
 The variation message Id.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.SplitTestIsSent">
	<summary>
 Gets or sets a value indicating whether the split test associated with this <see cref="T:Dynamicweb.Modules.EmailMarketing.Email"/> has been sent.
 </summary>
	<value>
		<c>true</c> if the split test was sent; otherwise, <c>false</c>.
 </value>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Email._variationPage">
	<summary>
 Contains variation page id
 </summary>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.VariationPage">
	<summary>
 Gets the variation page.
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Email._pageId">
	<summary>
 Contains page id 
 </summary>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.PageId">
	<summary>
 Gets or sets the id <see cref="P:Dynamicweb.Modules.EmailMarketing.Email.Page"/>.
 </summary>
	<value>
 The page id.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.Page">
	<summary>
 Gets the <see cref="P:Dynamicweb.Modules.EmailMarketing.Email.Page"/> where the content of the <see cref="T:Dynamicweb.Modules.EmailMarketing.Email"/> is located.
 </summary>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.HasFileAttachment">
	<summary>
 Gets a value indicating whether this <see cref="T:Dynamicweb.Modules.EmailMarketing.Email"/> has a file attachment.
 </summary>
	<value>
		<c>true</c> if this instance has file attachment; otherwise, <c>false</c>.
 
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.FileAttachment">
	<summary>
 Gets the file attachment as a <see cref="T:System.IO.FileInfo"/> object.
 </summary>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.IncludePlainTextContent">
	<summary>
 Gets or sets whether to include the plain text content.
 If this is set to <c>true</c>, a multi-part email is sent using the value from <see cref="P:Dynamicweb.Modules.EmailMarketing.Email.PlainTextContent"/> if it exists, or a stripped version of the HTML content is used.
 </summary>
	<value>
 Whether to include plain text content.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.PlainTextContent">
	<summary>
 Gets or sets the content of the plain text.
 When <see cref="P:Dynamicweb.Modules.EmailMarketing.Email.IncludePlainTextContent"/> is <c>true</c>, this property is used as the plain text part of the multi-part email.
 </summary>
	<value>
 The content of the plain text.
 </value>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Email._trackingProviderConfiguration">
	<summary>
  Containce the configuration for the EmailTrackingProvider
 </summary>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.TrackingProviderConfiguration">
	<summary>
 Gets or sets the configuration for the <see cref="T:Dynamicweb.Modules.EmailMarketing.EmailTrackingProvider"/>.
 </summary>
	<value>
 The tracking provider configuration.
 </value>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Email._trackingProvider">
	<summary>
 Containce the instance of Dnamicweb.Modules.EmailMarketing.EmailTrackingProvider
 </summary>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.TrackingProvider">
	<summary>
 Gets the <see cref="T:Dynamicweb.Modules.EmailMarketing.EmailTrackingProvider"/>.
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Email._splitTest">
	<summary>
 Containce the instance of Dnamicweb.Modules.EmailMarketing.SplitTest
 </summary>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.SplitTest">
	<summary>
 Gets or sets the <see cref="T:Dynamicweb.Modules.EmailMarketing.SplitTest"/>.
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Email._engagementIndex">
	<summary>
 Contains instance of Dynamicweb.Modules.EmailEngagementIndex
 </summary>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.EngagementIndex">
	<summary>
 Gets or sets the <see cref="T:Dynamicweb.Modules.EmailMarketing.EmailEngagementIndex"/>.
 </summary>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.DomainName">
	<summary>
 Domain Url
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.FolderId">
	<summary>
 Folder Id
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.CreatedDate">
	<summary>
 Date when email has been saved
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.EmailState">
	<summary>
 Gets the state of the email.
 </summary>
	<value>
 The state of the email.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.TopFolderId">
	<summary>
 Gets or sets the top folder ID of the email.
 </summary>
	<value>
 The top folder ID.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.DeliveryProviderId">
	<summary>
 Gets or sets the delivery provider id.
 </summary>
	<value>
 The delivery provider id.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.DeliveryProvider">
	<summary>
 Gets the delivery provider.
 </summary>
	<value>
 The delivery provider.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.IsTemplate">
	<summary>
 Gets a value indicating whether this instance is template.
 </summary>
	<value>
		<c>true</c> if this instance is template; otherwise, <c>false</c>.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.TemplateName">
	<summary>
 Gets or sets the name of the template.
 </summary>
	<value>
 The name of the template.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.TemplateDescription">
	<summary>
 Gets or sets the template description.
 </summary>
	<value>
 The template description.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.EmailScheduledActive">
	<summary>
 Gets or sets a value indicating whether the email is scheduled.
 </summary>
	<value>
		<c>true</c> if is scheduled; otherwise, <c>false</c>.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.EmailScheduledSendTime">
	<summary>
 Gets or sets the email scheduled send time.
 </summary>
	<value>
 The email scheduled send time.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.EmailScheduledEndTime">
	<summary>
 Gets or sets the email scheduled end time.
 </summary>
	<value>
 The email scheduled end time.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.EmailScheduledRepeatInterval">
	<summary>
 Gets or sets the email scheduled repeat interval.
 </summary>
	<value>
 The email scheduled repeat interval.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.OriginalPreHeader">
	<summary>
 Domain Url
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.VariationPreHeader">
	<summary>
 Domain Url
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.RequireUniqueRecipients">
	<summary>
 Gets or sets a value indicating whether require unique recipients.
 This value propergates down to the underlying EmailMessaging API.
 Default is <c>true</c>.
 </summary>
	<value>
		<c>true</c> if recipients are required to be unique; otherwise, <c>false</c>. Default is <c>true</c>.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.RecipientSpecificContent">
	<summary>
 Gets or sets a value indicating whether to render the content per recipient or once per email.
 Default is <c>false</c>.
 </summary>
	<value>
		<c>true</c> if content is rendered once per recipient; otherwise, <c>false</c>.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.QuarantinePeriod">
	<summary>
 Gets or sets the quarantine period (in minutes). The period in which the same <see cref="T:Dynamicweb.EmailMessaging.Recipient"/> is quarantined from receiving this <see cref="T:Dynamicweb.Modules.EmailMarketing.Email"/>.
 This requires <see cref="P:Dynamicweb.Modules.EmailMarketing.Email.RequireUniqueRecipients"/> to be se to <c>false</c> to have effect.
 Default is 0.
 </summary>
	<value>
 The quarantine period. This cannot be negative. Default is 0, indicating no quarantine period.
 </value>
</member><member name="P:Dynamicweb.Modules.EmailMarketing.Email.EmailLastExportDate">
	<summary>
 Gets or sets the email last export time
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.#ctor">
	<summary>
 Initializes a new instance of the <see cref="T:Dynamicweb.Modules.EmailMarketing.Email"/> class.
 </summary>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.Fill(System.Data.IDataReader)">
	<summary>
 Fills the specified data reader.
 </summary>
	<param name="reader">The data reader.</param>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.FillRow(System.Data.DataRow)">
	<summary>
 Fills the data row.
 </summary>
	<param name="row">The data row.</param>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.Copy">
	<summary>
 Copies the instance of email.
 </summary>
	<returns>The object of Dynamicweb.Modules.EmailMarketing.Email</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.CopyAsTemplate(System.String,System.String)">
	<summary>
 Copies this <see cref="T:Dynamicweb.Modules.EmailMarketing.Email"/> as a template. The <see cref="T:Dynamicweb.Modules.EmailMarketing.Email"/> template has not been saved.
 </summary>
	<param name="templateName">The name of the template.</param>
	<param name="templateDescription">The description for the template.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.CreateFromTemplate(Dynamicweb.Modules.EmailMarketing.Email)">
	<summary>
 Creates a new <see cref="T:Dynamicweb.Modules.EmailMarketing.Email"/> from an email template object. The <see cref="T:Dynamicweb.Modules.EmailMarketing.Email"/> has not been saved.
 If there are <see cref="T:Dynamicweb.Content.Page"/> objects associated with the template, then these pages are copied without sub pages in the page tree
 and the new page ids are associated with the new <see cref="T:Dynamicweb.Modules.EmailMarketing.Email"/>.
 </summary>
	<param name="template">The template to base the <see cref="T:Dynamicweb.Modules.EmailMarketing.Email"/> on.</param>
	<returns></returns>
	<exception cref="T:System.ArgumentException">Object 'template' is not marked as a template. Check template.IsTemplate property.</exception>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.CreateFromTemplate(Dynamicweb.Modules.EmailMarketing.Email,System.String)">
	<summary>
 Creates a new <see cref="T:Dynamicweb.Modules.EmailMarketing.Email"/> from an email template object. The <see cref="T:Dynamicweb.Modules.EmailMarketing.Email"/> has not been saved.
 If there are <see cref="T:Dynamicweb.Content.Page"/> objects associated with the template, then these pages are copied without sub pages in the page tree
 and the new page ids are associated with the new <see cref="T:Dynamicweb.Modules.EmailMarketing.Email"/>.
 </summary>
	<param name="template">The template to base the <see cref="T:Dynamicweb.Modules.EmailMarketing.Email"/> on.</param>
	<param name="newSubject">If the new <see cref="T:Dynamicweb.Modules.EmailMarketing.Email"/> should get a new subject, this can be specified here.</param>
	<returns></returns>
	<exception cref="T:System.ArgumentException">Object 'template' is not marked as a template. Check template.IsTemplate property.</exception>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.SetValuesFromTopFolder(Dynamicweb.Modules.EmailMarketing.TopFolder)">
	<summary>
 Sets the default values from the <see cref="T:Dynamicweb.Modules.EmailMarketing.TopFolder"/> on the <see cref="T:Dynamicweb.Modules.EmailMarketing.Email"/> including <see cref="P:Dynamicweb.Modules.Common.DbObject.ID"/>.
 </summary>
	<param name="topFolder">The <see cref="T:Dynamicweb.Modules.EmailMarketing.TopFolder"/> to fill default values from.</param>
	<exception cref="T:System.ArgumentException">If parameter 'topFolder' is null, this exception is thrown.</exception>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.Save">
	<summary>
 Saves current data to the database.
 </summary>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.Delete(System.Int32)">
	<summary>
 Deletes the object with specified ID.
 </summary>
	<param name="id">Specified ID.</param>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.DeleteBulk(System.String,System.Data.IDbConnection,System.Data.IDbTransaction)">
	<summary>
 Deletes the emails with the ids specified. The id list can also be a SQL selector for the given ids.
 <see cref="T:Dynamicweb.Modules.EmailMarketing.SplitTest"/> and <see cref="T:Dynamicweb.Modules.EmailMarketing.EmailEngagementIndex"/> related the the Emails will also be deleted.
 </summary>
	<param name="emailIds">The email ids.</param>
	<param name="conn">The conn.</param>
	<param name="transaction">The transaction.</param>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.CreateMessageForOriginal">
	<summary>
 Creates the message for email original.
 </summary>
	<returns>The instance of Dynamicweb.EmailMessaging.Message</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.CreateMessageForVariation">
	<summary>
 Creates the message for email variation.
 </summary>
	<returns>The instance of Dynamicweb.EmailMessaging.Message</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.IsEmailScheduled">
	<summary>
 Determines whether an email has scheduled send.
 </summary><returns>
		<c>true</c> if an email has scheduled send; otherwise, <c>false</c>.
 </returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.IsEmailSent">
	<summary>
 Determines whether the email has been sent.
 </summary><returns>
		<c>true</c> if email has been sent; otherwise, <c>false</c>.
 </returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.IsEmailSending">
	<summary>
 Determines whether the email is currently being sent.
 </summary><returns>
		<c>true</c> if email is being sent; otherwise, <c>false</c>.
 </returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.IsEmailSendingFailed">
	<summary>
 Determines whether the email is incomplete.
 </summary><returns>
		<c>true</c> if email is incomplete; otherwise, <c>false</c>.
 </returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.IsSplitTestPickWinnerScheduled">
	<summary>
 Determines whether the sending of winner email is scheduled.
 </summary><returns>
		<c>true</c> if the sending of winner email is scheduled; otherwise, <c>false</c>.
 </returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.GetEmailSentStartTime">
	<summary>
 Gets the <see cref="T:System.DateTime"/> for when this <see cref="T:Dynamicweb.Modules.EmailMarketing.Email"/> started sending.
 </summary>
	<returns>The date when email started sending.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.GetEmailSentCompletedTime">
	<summary>
 Gets the <see cref="T:System.DateTime"/> for when this <see cref="T:Dynamicweb.Modules.EmailMarketing.Email"/> completed sending.
 </summary>
	<returns>The date when email completed sending.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.GetEmailScheduledDate">
	<summary>
 Gets the email scheduled date.
 </summary>
	<returns>The date when email will be sent</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.CreateEmailScheduledTask(System.DateTime)">
	<summary>
 Creates the scheduled task for email sending.
 </summary>
	<param name="startDateTime">The start date.</param>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.CreateEmailScheduledTask(System.DateTime,System.DateTime,System.TimeZoneInfo)">
	<summary>
 Creates the scheduled task for email sending.
 </summary>
	<param name="startDateTime">The start date.</param>
	<param name="timeZone">Speficies the <see cref="T:System.TimeZoneInfo">timezone</see> to convert the given <see cref="T:System.DateTime"/> to.
 If not <see cref="T:System.TimeZoneInfo">timezone</see> is speficied, the local <see cref="T:System.TimeZoneInfo">timezone</see> is used.</param>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.StartWindowsScheduler">
	<summary>
 Starts the windows scheduler.
 </summary>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.CancelSchedule">
	<summary>
 Cancels the scheduling of this <see cref="T:Dynamicweb.Modules.EmailMarketing.Email"/>.
 </summary>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.GetRecipientsForSend">
	<summary>
 Gets the recipients for send.
 </summary>
	<returns>The collection of Dynamicweb.EmailMessaging.Recipient</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.CreateMessageForEngagementIndex(System.Boolean,System.Boolean,System.Int32)">
	<summary>
 Creates the message for engagement index.
 </summary>
	<param name="isUseVariant">if set to <c>true</c>then use variant.</param>
	<param name="isEmailSaved">if set to <c>true</c>then email has been saved.</param>
	<param name="pageId">The page id.</param>
	<returns>The object of type Dynamicweb.EmailMessaging.Message</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.FillMessageForPreview(System.Int32,System.Boolean,System.Boolean)">
	<summary>
 Fills the message.
 </summary>
	<param name="pageId">The page id.</param>
	<param name="isUseVariant">if set to <c>true</c>then use variant.</param>
	<param name="isEmailSaved">if set to <c>true</c>then email has been saved.</param>
	<returns>The object of type Dynamicweb.EmailMessaging.Message</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.GetEmailTotalSent">
	<summary>
 Gets how many mails has been sent.
 </summary>
	<returns>The date when email will be sent</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.GetEmailOpeningRate">
	<summary>
 Gets the email opening rate at the given time
 </summary>
	<returns>The date when email will be sent</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.GetEmailsFromSystemFolder(System.Int32,System.String,System.Int32)">
	<summary>
 Gets the emails from system folder.
 </summary>
	<param name="folderId">The folder id.</param>
	<param name="search">The searching filter.</param>
	<param name="topFolderId">The top folder id.</param>
	<returns>The collection of emails</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.GetEmailCountBySearchValueAndFolderId(System.String,System.Int32,System.Int32,System.Boolean,Dynamicweb.Modules.EmailMarketing.Email.EmailStateFilter)">
	<summary>
 Gets the amount of emails by searching filter.
 </summary>
	<param name="search">The searching filter.</param>
	<param name="folderId">The folder id.</param>
	<param name="topFolderId">The top folder id.</param>
	<param name="isShowTopFolderEmails">if set to <c>true</c>then show top folder emails.</param>
	<returns>The count of rows</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.GetPagedEmailList(Dynamicweb.Modules.EmailMarketing.Email.SortFields,Dynamicweb.Modules.Common.Lists.SortDirection,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,Dynamicweb.Modules.EmailMarketing.Email.EmailStateFilter)">
	<summary>
 Gets the paged email list.
 </summary>
	<param name="sort">The sorting type.</param>
	<param name="direction">The direction of sorting.</param>
	<param name="search">The searching filter.</param>
	<param name="startItem">The start item.</param>
	<param name="endItem">The end item.</param>
	<param name="folderId">The folder id.</param>
	<param name="topFolderId">The top folder id.</param>
	<param name="isShowTopFolderEmails">if set to <c>true</c>then show top folder emails.</param>
	<returns>The collection of emails</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.GetFilter(System.String,System.Int32,System.Int32)">
	<summary>
 Gets the searching filter.
 </summary>
	<param name="search">The searching filter.</param>
	<param name="folderId">The folder id.</param>
	<param name="topFolderId">The top folder id.</param>
	<returns>The searching filter</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.PutEmailsToSystemFolders">
	<summary>
 Puts the emails to system folders.
 </summary>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.GetEmailsBySearchValueAndTopFolderId(System.String,System.Int32,System.Boolean,Dynamicweb.Modules.EmailMarketing.Email.EmailStateFilter)">
	<summary>
 Gets all emails.
 </summary>
	<param name="search">The searching filter.</param>
	<param name="topFolderId">The top folder id.</param>
	<param name="isShowTopFolderEmails">if set to <c>true</c> [is show top folder emails].</param><returns></returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.GetEmailTemplatesBySearch(System.String)">
	<summary>
 Gets all email templates.
 </summary>
	<param name="search">The searching filter.</param>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.GetEmailsByFolderId(System.Int32)">
	<summary>
 Gets the emails collection by folder ID.
 </summary>
	<param name="folderId">The ID of the emails folder</param><returns></returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.GetEmailCountByFolderName(System.String,System.Int32)">
	<summary>
 Gets the count of emails by folder name.
 </summary>
	<param name="folderName">The name of the emails folder</param>
	<returns>The count of emails in specified folder</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.GetEmailCountByTopFolderId(System.Int32)">
	<summary>
 Gets the count of emails by top folder id.
 </summary>
	<param name="topFolderId">The id of the top folder</param>
	<returns>The count on emails for specified top folder</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.GetEmailsByTopFolderId(System.Int32)">
	<summary>
 Gets the emails by top folder id.
 </summary>
	<param name="topFolderId">The id of the top folder</param>
	<returns>The collection of emails for specified top folder</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.GetStateFilteredEmails(Dynamicweb.Modules.EmailMarketing.Email.EmailStateFilter,Dynamicweb.Modules.EmailMarketing.EmailCollection)">
	<summary>
  Gets fileter by state emails collection.
 </summary>
	<param name="stateFilter">The state of email</param>
	<param name="emails">The unfilterd email collection</param>
	<returns>The collection of filtered emails by state</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.GetEmailById(System.Int32)">
	<summary>
 Gets the email by id.
 </summary>
	<param name="id">The id of email.</param>
	<returns>The email</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.GetEmailByMessageId(System.Int32)">
	<summary>
 Gets the email by <see cref="T:Dynamicweb.EmailMessaging.Message">message</see> id.
 </summary>
	<param name="messageId">The message id.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.GetEmails">
	<summary>
 Gets the emails. The <see cref="T:Dynamicweb.Modules.EmailMarketing.EmailCollection"/> does not contain Email Templates. Use GetEmails(true) to include templates.
 </summary>
	<returns>The collection of all emails without any filtering</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.GetEmails(System.Boolean)">
	<summary>
 Gets the emails.
 </summary>
	<param name="includeTemplates">if set to <c>true</c>, the collection will contain Email Templates also.</param>
	<returns>The collection of all emails without any filtering</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.GetEmailTemplates">
	<summary>
 Gets the Email Templates.
 </summary>
	<returns>The collection of all Email Templates without any filtering</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.GetUpdatedEmailsFromLastExport">
	<summary>
 Gets the updated emails since last export and not yet exported emails.
 </summary>
	<returns>The collection of all Email Templates without any filtering</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.GetMessagesByUser(System.String)">
	<summary>
 Gets the messages by user.
 </summary>
	<param name="userkey">The user key.</param>
	<returns>List of messages</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.GetEmailsBySql(System.String)">
	<summary>
 Gets the emails by SQL.
 </summary>
	<param name="sql">The SQL query.</param>
	<returns>The collection of emails.</returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.SendEmail(Dynamicweb.Modules.EmailMarketing.Email)">
	<summary>
 Sends the email.
 </summary>
	<param name="email">The email.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.SendRepeatingEmail(Dynamicweb.Modules.EmailMarketing.Email)">
	<summary>
 Sends the repeating email. This method will not return until sending has completed.
 </summary>
	<param name="email">The email.</param>
	<returns></returns>
</member><member name="M:Dynamicweb.Modules.EmailMarketing.Email.RetryEmail(Dynamicweb.Modules.EmailMarketing.Email)">
	<summary>
 Retries the email.
 </summary>
	<param name="email">The email.</param>
	<returns></returns>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Constants.TAG_EMAIL_PREHEADER_CLEAN">
	<summary>
 Tag name for email preheader
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Constants.TAG_EMAIL_PREHEADER">
	<summary>
 Tag name for email preheader
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Constants.TAG_EMAIL_CONTENT_LINK_CLEAN">
	<summary>
 Tag name for link to email content page
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Constants.TAG_UNSUBSCRIBE_LINK_CLEAN">
	<summary>
 Tag name for unsubscribe link clean
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Constants.TAG_UNSUBSCRIBE_LINK">
	<summary>
 Tag name for unsubscribe link
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Constants.TAG_UNSUBSCRIBE_ALL_LINK_CLEAN">
	<summary>
 Tag name for unsubscribe all link clean
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Constants.TAG_TRACKING_IMAGE">
	<summary>
 The tag for the tracking image
 </summary>
	<remarks></remarks>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Constants.UNSUBSCRIBE_REQUEST_NAME">
	<summary>
 The unsubscribe request name
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Constants.UNSUBSCRIBE_ALL_REQUEST_NAME">
	<summary>
 The UnsubscribeAll request name
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Constants.UNSUBSCRIBE_RECIPIENT_ID_REQUEST_NAME">
	<summary>
 The unsubscribe recipient id  
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Constants.UNSUBSCRIBE_RECIPIENT_SECRET_REQUEST_NAME">
	<summary>
 The unsubscribe recipient secret
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Constants.UNSUBSCRIBE_BASE_URL">
	<summary>
 The unsubscribe base url
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Constants.EMAIL_UNSUBSCRIBE_STATISTICS_OBJECT_NAME">
	<summary>
 The name for statistics object which appears when email has been unsubscribed
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Constants.EMAIL_CART_STATISTICS_OBJECT_NAME">
	<summary>
 The name for statistics object which appears when some product has been put to the cart
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Constants.EMAIL_ORDER_STATISTICS_OBJECT_NAME">
	<summary>
 The name for statistics object which appears when some order has been made
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Constants.LOG_PATH">
	<summary>
 The log path 
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Constants.EMAIL_SYSTEM_FOLDER_DRAFT">
	<summary>
 The name for system folder "Drfts"
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Constants.EMAIL_SYSTEM_FOLDER_SCHEDULED">
	<summary>
 The name for system folder "Scheduled"
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Constants.EMAIL_SYSTEM_FOLDER_SPLITTEST">
	<summary>
 The name for system folder "Split Tests"
 </summary>
</member><member name="F:Dynamicweb.Modules.EmailMarketing.Constants.EMAIL_SYSTEM_FOLDER_SENT">
	<summary>
 The name for system folder "Sent"
 </summary>
</member><member name="T:Dynamicweb.Modules.EmailMarketing.Constants">
	<summary>
 Represents the constants for EmailMarketing
 </summary>
</member><member name="T:Dynamicweb.Modules.Booking.ResourcesNotSelectedException">
	<summary>
 Exception class for overlapping reservations.
 </summary>
</member><member name="F:Dynamicweb.Modules.Booking.ReservationType.Appointment">
	<summary>
 Appointment type
 </summary>
</member><member name="F:Dynamicweb.Modules.Booking.ReservationType.Reservation">
	<summary>
 Reservation or Booking type
 </summary>
</member><member name="T:Dynamicweb.Modules.Booking.ReservationType">
	<summary>
 Types of reservations
 </summary>
</member><member name="P:Dynamicweb.Modules.Booking.ReservationLink.MasterReservation">
	<summary>
 Gets the master reservation.
 </summary>
</member><member name="P:Dynamicweb.Modules.Booking.ReservationLink.LinkedReservations">
	<summary>
 Gets the linked reservations.
 </summary>
</member><member name="M:Dynamicweb.Modules.Booking.ReservationLink.#ctor(Dynamicweb.Modules.Booking.Reservation,Dynamicweb.Modules.Booking.ReservationCollection)">
	<summary>
 Initializes a new instance of the <see cref="T:Dynamicweb.Modules.Booking.ReservationLink"/> class.
 </summary>
	<param name="masterReservation">The master reservation.</param>
	<param name="linkedReservations">The linked reservations.</param>
</member><member name="F:Dynamicweb.Modules.Booking.CalendarSetupViewType.Day">
	<summary>
 Day view
 </summary>
</member><member name="F:Dynamicweb.Modules.Booking.CalendarSetupViewType.Week">
	<summary>
 Week view
 </summary>
</member><member name="F:Dynamicweb.Modules.Booking.CalendarSetupViewType.Month">
	<summary>
 Month view
 </summary>
</member><member name="F:Dynamicweb.Modules.Booking.CalendarSetupViewType.List">
	<summary>
 List view
 </summary>
</member><member name="T:Dynamicweb.Modules.Booking.CalendarSetupViewType">
	<summary>
 Types of Calendar Setup Views
 </summary>
</member><member name="P:Dynamicweb.Modules.Booking.CalendarSetup.ShowWeekends">
	<summary>
 Boolean indicating whether this CalendarSetup shows weekends
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Booking.CalendarSetup.StartHour">
	<summary>
 Integer indicating the first available hour to show in this CalendarSetup
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Booking.CalendarSetup.EndHour">
	<summary>
 Integer indicating the last available hour to show in this CalendarSetup
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Booking.CalendarSetup.FirstHour">
	<summary>
 Integer indicating which hour to default the view to in this CalendarSetup 
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Booking.CalendarSetup.TimeSlotSegmentation">
	<summary>
 Integer indicating the size (in minutes) of each time slot in this CalendarSetup
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Booking.CalendarSetup.FirstWeekday">
	<summary>
 Enum indicating which day is the first of the week in this CalendarSetup
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Booking.CalendarSetup.EnforceCalendarSetup">
	<summary>
 Boolean indicating whether this CalendarSetup should disallow Reservations outside the time slots
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Dynamicweb.Modules.Booking.CalendarSetup.DefaultView">
	<summary>
 Enum indicating which view is the default for this CalendarSetup
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.CalendarSetup.ToString">
	<summary>
 Serializes this CalendarSetup to XML
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.CalendarSetup.Load(System.String)">
	<summary>
 Loads CalendarSetup values from XML
 </summary>
	<param name="xml"></param>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.CalendarSetup.IsTimeSlotInCalendarSetup(System.DateTime,System.TimeSpan,System.Boolean)">
	<summary>
 Boolean indicating that the time slot is completely within the limits of this CalendarSetup
 </summary>
	<param name="startTime">The start time of the time slot</param>
	<param name="interval">The duration of the time slot</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Dynamicweb.Modules.Booking.CalendarSetup.FindNextTimeSlot(System.DateTime,System.TimeSpan,System.Boolean)">
	<summary>
 Date indicating when the next time slot that fits within this CalendarSetup. If no time slot exists, Date.MinValue is returned
 </summary>
	<param name="startTime">The start time from which to start the search</param>
	<param name="interval">The interval of the time slot</param>
	<param name="isAllDay">Is the time slot an AllDay event</param>
	<returns>The next available time slot, or Date.MinValue if no time slot exists</returns>
	<remarks></remarks>
</member>
</members>
</doc>